<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<TriggerPackage>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>AK Opponent Tracking</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Venom Wipe/Reset/Gagging</name>
				<script>currentvenoms = {}
ak.deleteFull()</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>Being careful not to poison yourself, you wipe off all the venoms from an ornate steel rapier.</string>
					<string>There are no venoms on that item at present.</string>
					<string>You carefully wipe the venoms from your claws.</string>
					<string>Being careful not to poison yourself, you wipe off all the venoms from a sharpened buckawn's spine.</string>
					<string>You are already wielding </string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>3</integer>
					<integer>3</integer>
					<integer>3</integer>
					<integer>3</integer>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Slain Target</name>
				<script>if IsTargetted(matches[2]) and not table.contains(ak.burstfucks,matches[2]) then 
	 if ak.ai() then return end
   if IsTargetted(lockedminds) then lockedminds = nil end
   weaponattack = {}
   if isActive("Confirmed Hit Limbs", "trigger") &gt; 0 then
      ak.limbs.parseBreaks()
   end
   ak.oresetparse()
   ak.defs.sileris = false
   ak.defs.curseward = false
   ak.defs.speed = false
   affstrack.score.deaf = 100
   affstrack.score.blind = 100
   ak.scoreup(matches[2])
end
ak.limbs.limbreset(matches[2])</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^You have slain ([\w'\-]+)\.$</string>
					<string>^Unable to withstand the arrow piercing [\w'\-]+ chest, ([\w'\-]+) stumbles to the ground, collapsing in a pool </string>
					<string>^([\w'\-]+) has been slain by [\w'\-]+\.$</string>
					<string>^([\w'\-]+)\'s body disintegrates and a ghostly spirit rises from the ashes\. The ghost cries out in pain as a body forms around [\w'\-]+ that has .*\.$</string>
					<string>^The last vestiges of strength having ebbed from ([\w'\-]+)\'s body\, [\w'\-]+ sinks to the floor with a sigh\.Suddenly\, your surroundings are enveloped in a blinding white light\, forcing you to cower with your hands over your eyes\. When you tentatively open them once more\, you are astonished to find ([\w'\-]+) alive once more\.$</string>
					<string>^The last vestiges of strength having ebbed from ([\w'\-]+)\'s body\, \w+ sinks to the floor with a sigh\. Suddenly\, your surroundings are enveloped in a blinding white light\, forcing you to cower with your hands over your eyes\. When you tentatively open them once more\, you are astonished to find [\w'\-]+ alive once more\.$</string>
					<string>^The force of the meteorite is too much for (\w+)\'s weakened frame tobear, and \w+ is smashed into flaming pieces\.$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Weaponry/Rending</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Weapon Stabbed</name>
					<script>if ak.ai() then return end
enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
enableTrigger("Confirmed Hit")                        --DO NOT CHANGE!
if weaponattack == nil then weaponattack = {} end
if matches[2] == "claws" then
   table.insert(weaponattack, "your wickedly sharp claws")
elseif matches[2] == "vines" then
   table.insert(weaponattack, "the thorny vines covering your arms")
else
   table.insert(weaponattack, matches[2])
end
--display(weaponattack)
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>1</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You viciously jab (.*) into .*</string>
						<string>^You viciously stab (.*) into .*</string>
						<string>^You slice into the [\w'\-]+ [\w'\-]+ of [\w'\-]+ with (.*)\.$</string>
						<string>^Lightning-quick, you jab .* with (.*).</string>
						<string>^Lightning-quick, you stab .* with (.*).</string>
						<string>^Lunging forward with long, flashing ([\w'\-]+) extended, you tear into the flesh of .*</string>
						<string>^You slice into the [\w'\-]+ of [\w'\-]+ with (.*)\.$</string>
						<string>^You flash (.*) in front of the eyes of ([\w'\-]+)</string>
						<string>^You cock back your arm and throw (.*) at ([\w'\-]+)</string>
						<string>^You slice into [\w'\-]+ with (.+)\.$</string>
						<string>^Lunging forward with long, flashing ([\w'\-]+) extended, you tear into</string>
						<string>^You swing (.*) at [\w'\-]+ with all your might.</string>
						<string>^You slash into [\w'\-]+ with (.*)\.$</string>
						<string>^You whip (.+) in a controlled arc at [\w'\-]+\.$</string>
						<string>^With your victim exposed\, you crack (.*) back for a second assault\.$</string>
						<string>^You slash into [\w'\-]+\'s .* with (.*)\.$</string>
						<string>^You swing (.*) at [\w'\-]+\'s .* with all your might\.$</string>
						<string>^Taking hold of (.+) with a firm two-handed grip\, you hew savagely at [\w'\-]+\'s .+\.$</string>
						<string>^Raising (.+) above your head\, you bring it down upon [\w'\-]+\'s head with terrible force\.$</string>
						<string>^Bracing your feet\, you lunge upward at [\w'\-]+ with (.+)\.$</string>
						<string>^You viciously lacerate ([\w'\-]+) with .+\.$</string>
						<string>^You viciously lacerate the .+ of ([\w'\-]+) with .+\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Weapon Envenomed</name>
					<script>if ak.ai() then return end
currentenvenom = matches[3]
currentvenoms = currentvenoms or {}
currentvenoms[currentenvenom] = currentvenoms[currentenvenom] or {}
if #currentvenoms[currentenvenom] &gt; 0 then
  local lockout = {"torture","tormentone","tormenttwo","exploit"}
  if table.contains(lockout,currentvenoms[currentenvenom][1]) then
    table.insert(currentvenoms[currentenvenom],2,matches[2])
  else
    table.insert(currentvenoms[currentenvenom],1,matches[2])
  end
else
  table.insert(currentvenoms[currentenvenom],1,matches[2])
end
--display(currentvenoms[currentenvenom][1])
if gmcp.Char.Status.class == "Magi" and (inretardation() or inaeon()) then
   ak.scoreup(target)
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You rub some ([\w'\-]+) on (.*)\.$</string>
						<string>^You secrete ([\w'\-]+) and deftly bring (.*) to your mouth, letting the venom drip upon it.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Missed Single Removal</name>
					<script>if ak.ai() then return end
boardaffs = boardaffs or {}
weaponattack = weaponattack or {}
if #boardaffs &gt; 0 then
   table.remove(boardaffs, #boardaffs)
elseif #weaponattack &gt; 0 then
	 if weaponattack[#weaponattack] == "the thorny vines covering your arms" and affstrack.crushedherb then
	 	  table.remove(weaponattack, #weaponattack)	 
	 end
   table.remove(weaponattack, #weaponattack)
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) dodges nimbly out of the way\.$</string>
						<string>^([\w'\-]+) quickly jumps back, avoiding the attack\.$</string>
						<string>^([\w'\-]+) twists \w+ body out of harm's way\.$</string>
						<string>^A reflection of ([\w'\-]+) blinks out of existence.$</string>
						<string>^([\w'\-]+) parries the attack with a deft manoeuvre.$</string>
						<string>^([\w'\-]+) steps into the attack, grabs your arm, and throw</string>
						<string>^A chaos orb intercepts the attack against (\+) and renders it harmless\.$</string>
						<string>^([\w'\-]+) moves into your attack, knocking your blow aside before viciously countering with a strike to your head\.$</string>
						<string>^Cracks spider across the surface of the crimson shield surrounding ([\w'\-]+)\, before it abruptly winks out of existence\.$</string>
						<string>^Grey fog begins to rise from the suddenly panicked\-looking ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Confirmed Hit</name>
					<script>if ak.ai() then return end
deleteLine()
cecho("&lt;yellow&gt;.")
boardaffs = boardaffs or {}
hitrelay = {}
currentvenoms = currentvenoms or {}
weaponattack = weaponattack or {}
if #weaponattack &gt; 0 then
   for i = 1, #weaponattack do
      currentvenoms[weaponattack[i]] = currentvenoms[weaponattack[i]] or {}
      if #currentvenoms[weaponattack[i]] ~= 0 then
        table.insert(hitrelay, affstrack.venoms[currentvenoms[weaponattack[i]][1]])
        if currentvenoms[weaponattack[i]][1] == "exploit" then
          table.insert(hitrelay,"paranoia")
        end
        table.remove(currentvenoms[weaponattack[i]], 1)    
      end
   end
end
if #boardaffs &gt; 0 then
   for i = 1, #boardaffs do
	 		if boardaffs[i] == "HIGH" then
				table.insert(hitrelay, ak.SnBSmashHighAff(hitrelay))
			else
      	table.insert(hitrelay, boardaffs[i])
			end
   end
end
--display(hitrelay)
weaponattack = nil
boardaffs = {}
if #hitrelay == 1 then 
   OppGainedAff(hitrelay[1]) 
elseif #hitrelay &gt; 1 then 
   OppGainedAff(table.concat(hitrelay, " ")) 
end
disableTrigger("Missed Single Removal")                --DO NOT CHANGE!
disableTrigger("Confirmed Hit")  
ak.limbs.deleteset = true
ak.showPrompt()

</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string></string>
						<string>^You direct a crystalline golem to (.*)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>7</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Behead</name>
					<script>if ak.ai() then return end
ak.pause = true </script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You raise your</string>
						<string>^You raise your ([\w'\-]+) over your head and begin to swing it in a wide circle\, gaining speed as you go\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Behead Fail</name>
					<script>if ak.ai() then return end
ak.pause = false</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You cease the whirling of your weapon over your head.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Writhed</name>
					<script>if ak.ai() then return end
if matches[2] and IsTargetted(matches[2]) then
   affstrack.impale = false
   ak.scoreup(matches[2])
elseif not matches[2] then
   affstrack.impale = false
   ak.scoreup(target)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^With a look of agony on [\w'\-]+ face\, ([\w'\-]+) manages to writhe \w+ free of the weapon which impaled [\w'\-]+\.$</string>
						<string>^With a vicious snarl you carve a merciless swathe through the steaming guts of ([\w'\-]+)\, who gurgles and chokes as you withdraw your dripping blade\, glistening with gore\.$</string>
						<string>^With a vicious snarl [\w'\-]+ carves a merciless swathe through the steaming guts of ([\w'\-]+)\, who gurgles and chokes as [\w'\-]+ withdraws [\w'\-]+ dripping blade\, glistening with gore\.$</string>
						<string>^With a snarl of contempt\, you allow ([\w'\-]+) to slide free of your weapon\.$</string>
						<string>You have no victim impaled to be able to perform a disembowelment.</string>
						<string>^As ([\w'\-]+) wrenches away from you\, your blade rips through his innards in a violentfashion\, leaving a pool of viscera where your foe once lay\.$</string>
						<string>^([\w'\-]+) tumbles out to the .*\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>3</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Fail Shatter</name>
					<script>if ak.ai() then return end
ak.pause = false</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You cease concentrating on shattering your opponent's limbs.</string>
						<string>You strike the</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Shatter Start</name>
					<script>if ak.ai() then return end
ak.pause = true</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You slowly pull back a</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Impale</name>
					<script>if ak.ai() then return end
if matches[2] and IsTargetted(matches[2]) then
   affstrack.impale = "Me"
   ak.scoreup(matches[2])
elseif not matches[2] then
   affstrack.impale = "Me"
   ak.scoreup(target)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You draw your blade back and plunge it deep into the body of ([\w'\-]+) impaling [\w'\-]+ to the hilt\.$</string>
						<string>You cannot do that while your weapon remains deep in your victim's gut.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Impaled Second</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[3]) then
   affstrack.impale = matches[2]
   ak.scoreup(matches[3])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) draws back [\w'\-]+ blade and impales ([\w'\-]+) to the hilt\.$</string>
						<string>^(\w+) shifts the sword impaling (\w+)\'s abdomen\, and blood streams freely fromthe grave wound\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Impaled Secondary Reverse</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   affstrack.impale = matches[3]
   ak.scoreup(matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) is already impaled upon the sword of (\w+) and you can see no room for your own blade\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Fail Impale</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
  affstrack.score.prone = 0
  affstrack.score.paralysis = 0
  affstrack.score.transfixed = 0  
  affstrack.score.frozen = 0 
  ak.scoreup(matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You thrust your blade towards ([\w'\-]+) but \w+ dodges easily out of the way\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Impaled Sentinel</name>
					<script>ak.potentialImpale = matches[2]</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>1</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) comes stampeding in from the \w+\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hit!</name>
						<script>if ak.ai() then return end
if IsTargetted(ak.potentialImpale) then
   affstrack.impale = "Me"
   ak.scoreup(ak.potentialImpale)
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>He slams into your readied spear with a scream of pain.</string>
							<string>She slams into your readied spear with a scream of pain.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Engaged Fade</name>
					<script>if ak.ai() then return end
ak.engaged = false
ak.scoreup(target)

</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You lash out at ([\w'\-]+) as \w+ turns to flee\.$</string>
						<string>You drop back and ease the engagement.</string>
						<string>You attempt to strike at your target as they leave, but find yourself in no condition to swing a blade.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Engage bypass</name>
					<script>if ak.ai() then return end
if ak.engaged == matches[2] then
   ak.engaged = false
   ak.scoreup(matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) glances to the [\w'\-]+ and vanishes\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Engaging</name>
					<script>if ak.ai() then return end
ak.engaged = matches[2]
ak.scoreup(matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You move in to engage ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Air Lord Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Pressure</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Normal</name>
						<script>ak = ak or {}
ak.duress = ak.duress or {}
ak.duress.pressure = 0
ak.scoreup(matches[2])
cecho("\n&lt;cyan&gt;Pressure lvl: &lt;yellow&gt;"..ak.duress.pressure)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Studying ([\w'\-]+), you determine that the pressure surrounding \w+ is at normal levels\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Level 1</name>
						<script>ak = ak or {}
ak.duress = ak.duress or {}
ak.duress.pressure = 1
ak.scoreup(matches[2])
cecho("\n&lt;cyan&gt;Pressure lvl: &lt;yellow&gt;"..ak.duress.pressure)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Studying ([\w'\-]+), you determine that the pressure surrounding \w+ is slightly elevated\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Level 2</name>
						<script>ak = ak or {}
ak.duress = ak.duress or {}
ak.duress.pressure = 2
ak.scoreup(matches[2])
cecho("\n&lt;cyan&gt;Pressure lvl: &lt;yellow&gt;"..ak.duress.pressure)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Studying ([\w'\-]+), you determine that the pressure surrounding \w+ is elevated\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Level 3</name>
						<script>ak = ak or {}
ak.duress = ak.duress or {}
ak.duress.pressure = 3
ak.scoreup(matches[2])
cecho("\n&lt;cyan&gt;Pressure lvl: &lt;yellow&gt;"..ak.duress.pressure)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Studying ([\w'\-]+), you determine that the pressure surrounding \w+ is moderately elevated\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Level 4</name>
						<script>ak = ak or {}
ak.duress = ak.duress or {}
ak.duress.pressure = 4
ak.scoreup(matches[2])
cecho("\n&lt;cyan&gt;Pressure lvl: &lt;yellow&gt;"..ak.duress.pressure)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Studying ([\w'\-]+), you determine that the pressure surrounding \w+ is severely elevated\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Level 5</name>
						<script>ak = ak or {}
ak.duress = ak.duress or {}
ak.duress.pressure = 5
ak.scoreup(matches[2])
cecho("\n&lt;cyan&gt;Pressure lvl: &lt;yellow&gt;"..ak.duress.pressure)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Studying ([\w'\-]+), you determine that the pressure surrounding \w+ is extremely elevated\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Level 6+</name>
						<script>ak = ak or {}
ak.duress = ak.duress or {}
if ak.duress.pressure &lt; 6 then
   ak.duress.pressure = 6
   ak.scoreup(matches[2])
end
cecho("\n&lt;cyan&gt;Pressure lvl: &lt;yellow&gt;"..ak.duress.pressure)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Studying ([\w'\-]+), you determine that the pressure surrounding \w+ is terminally elevated\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Pressure</name>
						<script>ak = ak or {}
ak.duress = ak.duress or {}
ak.duress.pressurescore = affstrack.score.disloyalty + affstrack.score.manaleech + affstrack.score.deadening

if ak.duress.pressurescore &lt; 200  then
   ak.duress.pressure = ak.duress.pressure + 1
else
   ak.duress.pressure = ak.duress.pressure + 2
end
ak.scoreup(matches[2])
cecho("\n&lt;cyan&gt;Pressure lvl: &lt;yellow&gt;"..ak.duress.pressure)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You bring your will to bear against ([\w'\-]+)\, raising the air pressure surrounding (?:her|him)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Pressure eats</name>
						<script>ak = ak or {}
ak.duress = ak.duress or {}

if target == matches[2] and ak.duress.pressure &gt; 0 then
   ak.duress.pressure = ak.duress.pressure - 1
   cecho("\n&lt;cyan&gt;Pressure lvl: &lt;yellow&gt;"..ak.duress.pressure)
	 ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) eats a prickly pear\.$</string>
							<string>^([\w'\-]+) eats a calcite mote\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Asphyxiate</name>
					<script>ak = ak or {}
ak.duress = ak.duress or {}
if target == matches[2] then
  ak.duress.asphyxiate = true
	killTimer(tostring(ak.duress.asphyxiatetimer))
  ak.duress.asphyxiatetimer = tempTimer(10, [[ak.duress.asphyxiate = false]])
	ak.scoreup(matches[2])
end

</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You rip the air from the lungs of ([\w'\-]+) in a single instant, blood and mucus dripping from \w+ mouth as \w+ doubles over with hacking coughs\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Tension</name>
					<script>local aff = "tension"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
	 if ak.duress.pressure and ak.duress.pressure &gt; 0 then
      ak.duress.pressure = ak.duress.pressure + 1
   else
      ak.duress.pressure = 1
   end
   killTimer(tostring(ak.duress.asphyxiatetimer))
   ak.duress.asphyxiatetimer = tempTimer(10, [[ak.duress.asphyxiate = false]])
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You alter the air tension around ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Strangle</name>
					<script>aff = "deadening"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
	 ak.duress.stranglerelapse = true
   ak.duress.stranglerelapsetimer = tempTimer(7,[[
   	 ak.duress.stranglerelapse = false
     ak.scoreup(]]..matches[2]..[[)
   ]])
	 killTimer(tostring(ak.duress.asphyxiatetimer))
   ak.duress.asphyxiatetimer = tempTimer(10, [[ak.duress.asphyxiate = false]])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You increase the pressure in a band surrounding the throat of ([\w'\-]+), clenching a fist and causing it to violently constrict\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Strangle relapse</name>
					<script>aff = "deadening"
if IsTargetted(matches[2]) then
  OppGainedAff(aff)
	ak.duress.stranglerelapse = false
	killTimer(tostring(ak.duress.stranglerelapsetimer))
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) clutches at \w+ throat, eyes bulging as \w+ struggles to draw breath\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Strangle relapse 2</name>
					<script>aff = "disrupted"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
	 ak.duress.stranglerelapse = true
	 killTimer(tostring(ak.duress.stranglerelapsetimer))
   ak.duress.stranglerelapsetimer = tempTimer(7,[[
   	 ak.duress.stranglerelapse = false
     ak.scoreup(]]..matches[2]..[[)
   ]])
	 OppGainedAff("deadening")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^A dazed look crosses the face of ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Scour</name>
					<script>aff = "disloyalty"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
	 ak.duress.scourrelapse = true
	 killTimer(tostring(ak.duress.scourrelapsetimer))
   ak.duress.scourrelapsetimer = tempTimer(7,[[
   	 ak.duress.scourrelapse = false
     ak.scoreup(]]..matches[2]..[[)
   ]])
	 
	 killTimer(tostring(ak.duress.asphyxiatetimer))
   ak.duress.asphyxiatetimer = tempTimer(10, [[ak.duress.asphyxiate = false]])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You bend your will upon ([\w'\-]+), summoning forth a howling wind to rip the flesh from \w+ bones\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Scour relapse</name>
					<script>aff = "disloyalty"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
	 ak.duress.scourrelapse = false
	 killTimer(tostring(ak.duress.scourrelapsetimer))
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^A howling wind sweeps over ([\w'\-]+), ripping flesh from bone and leaving \w+ face a bloody ruin\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Scour relapse 2</name>
					<script>if IsTargetted(matches[2]) then
   local aff = "disloyalty"
   OppGainedAff(aff)
   ak.duress.scourrelapse = true
	 killTimer(tostring(ak.duress.scourrelapsetimer))
   ak.duress.scourrelapsetimer = tempTimer(7,[[
   	 ak.duress.scourrelapse = false
     ak.scoreup(]]..matches[2]..[[)
   ]])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^The ruined face of ([\w'\-]+) continues to bleed\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Zephyr</name>
					<script>aff = "manaleech"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
	 ak.duress.zephyrrelapse = true
 	 killTimer(tostring(ak.duress.zephyrrelapsetimer))
   ak.duress.zephyrrelapsetimer = tempTimer(7,[[
   	 ak.duress.zephyrrelapse = false
     ak.scoreup(]]..matches[2]..[[)
   ]])
	 
	 killTimer(tostring(ak.duress.asphyxiatetimer))
   ak.duress.asphyxiatetimer = tempTimer(10, [[ak.duress.asphyxiate = false]])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You cast out your hand towards ([\w'\-]+)\, calling forth an icy zephyr to rip the strength from \w+\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Zephyr relapse</name>
					<script>aff = "manaleech"
if IsTargetted(matches[2]) then
  OppGainedAff(aff)
	ak.duress.zephyrrelapse = false
	killTimer(tostring(ak.duress.zephyrrelapsetimer))
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^A zephyr of icy wind rolls over ([\w'\-]+), leaving (?:her|him) diminished\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Zephyr relapse 2</name>
					<script>aff = "deadening"
if IsTargetted(matches[2]) then
  OppGainedAff(aff)
	ak.duress.zephyrrelapse = true
  killTimer(tostring(ak.duress.zephyrrelapsetimer))
  ak.duress.zephyrrelapsetimer = tempTimer(7,[[
   	 ak.duress.zephyrrelapse = false
     ak.scoreup(]]..matches[2]..[[)
   ]])	
	OppGainedAff("manaleech")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^A vacant expression creeps across the features of ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Zephyr relapse 3</name>
					<script>if IsTargetted(matches[2]) then
   ak.duress.zephyrrelapse = true
   killTimer(tostring(ak.duress.zephyrrelapsetimer))
   ak.duress.zephyrrelapsetimer = tempTimer(7,[[
   	 ak.duress.zephyrrelapse = false
     ak.scoreup(]]..matches[2]..[[)
   ]])
	 OppGainedAff("manaleech")
	 OppGainedAff("deadening")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^A completely blank expression descends upon ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Gale</name>
					<script>if target == matches[2] then
  ak.defs.shield = false
  ak.scoreup(matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You whip up a gale\, sending it towards ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Gale shield down</name>
					<script>aff = "manaleech"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
end	</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^The protective shield surrounding ([\w'\-]+) is blown away by the gale-force winds\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Alchemist Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Wrack</name>
					<script>if alchemistwrack then
  OppGainedAff(alchemistwrack)
end

--matches[3] == humor wracked

</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You send ripples throughout ([\w'\-]+)'s body, wracking ([\w'\-]+) ([\w'\-]+) humour\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>TrueWrack</name>
					<script>if alchemisttruewrack then
  cecho(alchemisttruewrack.." "..alchemisttruewracktwo)
  OppGainedAff(alchemisttruewrack)
  OppGainedAff(alchemisttruewracktwo)
end

--matches[3] + matches[3] == humor wracked</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You send ripples throughout ([\w'\-]+)'s body, wracking ([\w'\-]+) ([\w'\-]+) and ([\w'\-]+) humours\.$</string>
						<string>^You send ripples throughout the body of ([\w'\-]+), as you wrack \w+ ([\w'\-]+) humour twice.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Temper</name>
					<script>if matches[4] == "sanguine" then
	ak.alchemist.humour.sanguine = ak.alchemist.humour.sanguine + 1
elseif matches[4] == "phlegmatic" then
	ak.alchemist.humour.phlegmatic = ak.alchemist.humour.phlegmatic + 1
elseif matches[4] == "choleric" then
	ak.alchemist.humour.choleric = ak.alchemist.humour.choleric + 1
elseif matches[4] == "melancholic" then
	ak.alchemist.humour.melancholic = ak.alchemist.humour.melancholic + 1
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You redirect ([\w'\-]+)\'s internal fluids\, tempering ([\w'\-]+) ([\w'\-]+) humour\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Evaluation</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>8</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Looking over ([\w'\-]+), you see that:</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Tempers</name>
						<script>if matches[2] == "sanguine" then
	ak.alchemist.humour.sanguine = tonumber(matches[3])
elseif matches[2] == "phlegmatic" then
	ak.alchemist.humour.phlegmatic = tonumber(matches[3])
elseif matches[2] == "choleric" then
	ak.alchemist.humour.choleric = tonumber(matches[3])
elseif matches[2] == "melancholic" then
	ak.alchemist.humour.melancholic = tonumber(matches[3])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\w+ ([\w'\-]+) humour has been tempered a total of (\d+) times.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Stat Evals</name>
						<script>if matches[3] == "health" then
	ak.currenthealth = tonumber(matches[4])
	ak.maxhealth = tonumber(matches[5])
	ak.healthpercent = ak.currenthealth / ak.maxhealth * 100
	cecho("&lt;green&gt;"..ak.healthpercent.."%")
	ak.knownmaxhealth[target] = tonumber(matches[5])
elseif matches[3] == "mana" then
	ak.currentmana = tonumber(matches[4])
	ak.maxmana = tonumber(matches[5])
	ak.manapercent = ak.currentmana / ak.maxmana * 100
	cecho("&lt;blue&gt;"..ak.manapercent.."%")
end

if ak.healthpercent &lt;= 60 and ak.manapercent &lt;= 60 then
	send("queue prepend eqbal aurify " .. target)
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\w+ (health|mana) is at (\d+) out of (\d+).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>No Humours</name>
						<script>ak.alchemist.humour.sanguine = 0
ak.alchemist.humour.choleric = 0
ak.alchemist.humour.melancholic = 0
ak.alchemist.humour.phlegmatic = 0</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>His humours are all at normal levels.</string>
							<string>Her humours are all at normal levels.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Prompt</name>
						<script>ak.scoreup(target)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string></string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>7</integer>
						</regexCodePropertyList>
					</Trigger>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Copper</name>
					<script>ak.defs.shield = false
ak.scoreup(target)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Drawing upon the latent alchemical energies, you sketch out a symbol in the air with your finger in the shape of two overlapping hexagons.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>HomunGerminated</name>
					<script>wsys.unpause()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>The growing nucleus begins taking a humanoid form, </string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Inundates</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Phleg</name>
						<script>local aff = "weariness anorexia slickness lethargy"

if ak.alchemist.humour.phlegmatic &lt; 4 then
	aff = "lethargy"
elseif ak.alchemist.humour.phlegmatic &lt; 6 then
	aff = "lethargy anorexia"
elseif ak.alchemist.humour.phlegmatic &lt; 7 then
	aff = "lethargy anorexia slickness"
end
if matches[2] == target then
	OppGainedAff(aff)
end
ak.alchemist.humour.phlegmatic = 0</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You inundate ([\w'\-]+)\'s phlegmatic humour\, and \w+ eyes grow vacant\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Humour Tracking</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Ate For Humour</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	ak.alchemist.humour.sanguine = ak.alchemist.humour.sanguine - 1
	ak.alchemist.humour.choleric = ak.alchemist.humour.choleric - 1
	ak.alchemist.humour.melancholic = ak.alchemist.humour.melancholic - 1
	ak.alchemist.humour.phlegmatic = ak.alchemist.humour.phlegmatic - 1
end
if ak.alchemist.humour.sanguine &lt; 0 then 
	ak.alchemist.humour.sanguine = 0
end
if ak.alchemist.humour.choleric &lt; 0 then 
	ak.alchemist.humour.choleric = 0
end 
if ak.alchemist.humour.melancholic &lt; 0 then 
	ak.alchemist.humour.melancholic = 0
end
if ak.alchemist.humour.phlegmatic &lt; 0 then 
	ak.alchemist.humour.phlegmatic = 0
end
ak.scoreup(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) eats a ginger root\.$</string>
							<string>^([\w'\-]+) eats an antimony flake\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Corruption</name>
					<script>if target == matches[2] then
   OppGainedAff("corruption")
	 corrtimer = tempTimer(45, [[OppLostAff("corruption")]])	 
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Channeling your focus through your link to your homunculus, you reach out to find the ethereal hook for (\w+)'s humours.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Corruption cured</name>
					<script>if target == matches[2] then
   OppLostAff("corruption")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) looks far healthier all of a sudden\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Apostate Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Sicken</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	if affstrack.score.manaleech ~= 100 then
		OppGainedAff("manaleech")
	else
		OppGainedAff("slickness")
	end
end

	
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) doubles over\, eyes bulging\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Deadeyes</name>
					<script>if ak.ai() then
  return
end
local nextcurse = matches[2]
if nextcurse == "breach" then
elseif nextcurse == "sicken" then
  if affstrack.score.manaleech &lt; 100 then
    nextcurse = "manaleech"
  else
    nextcurse = "slickness"
  end
elseif nextcurse == "plague" then
  nextcurse = "voyria"
elseif nextcurse == "clumsy" then
  nextcurse = "clumsiness"
elseif nextcurse == "dizzy" then
  nextcurse = "dizziness"
elseif nextcurse == "stupid" then
  nextcurse = "stupidity"
elseif nextcurse == "vomiting" then
  nextcurse = "nausea"
elseif nextcurse == "reckless" then
  nextcurse = "recklessness"
end
OppGainedAff(nextcurse)
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Summoning up the curse of (\w+), you stare at (\w+)\, giving \w+ the evil eye\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Leprosy</name>
					<script>
if ak.ai() then
  return
end
local aff =  ak.limbs.standardizeLimb(matches[3]).." "..ak.limbs.standardizeLimb(matches[4])

if IsTargetted(matches[2]) then
	OppGainedAff(aff)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Your hand infects (\w+)\'s (right leg|right arm|left arm|left leg) and (right leg|right arm|left arm|left leg)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Sear</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   ak.flameon("notadditive")
end

	</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+)\'s flesh is set alight by the Baalzadeen\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Bard Group</name>
				<script>--
--Everything that follows was originally written by Klendathu

--I have mildly modified portions of be more up to date with my current offense tracking system,
--while attempting to leave the majority of it in place so he has to do very little to maintain
--continued functionality.  If you are a using this section, I strongly encourage you to make sure
--to spend a few extra seconds and drop him a thank you.

--Thank you.</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName>bard_plugin_for_affstrack</packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Swashbuckling</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Tunesmithing</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Pesante fired</name>
							<script>tunesmithing = "none"
if affstrack.score.deaf &lt; 100 then 
   affstrack.score.deaf = 100
	 ak.scoreup(target)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The songblessing unleashes a stunning percussive blast.</string>
								<string>The songblessing unleashes a strident note.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Check tunesmithing</name>
							<script>tunesmithing = multimatches[2][2]</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>3</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A soft, haunting melody emanates from this blade.</string>
								<string>^It has been tunesmithed with the power of the ([\w'\-]+)\.</string>
								<string>It weighs about 10 pounds.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>1</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Tunesmithing</name>
							<script>tunesmithing = matches[2]</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You weave strands of melodies over your blade, tunesmithing it with the power of the ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Martellato fired</name>
							<script>tunesmithing = "none"</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The songblessing upon the rapier swells with a rich, vibrant hum.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Acciaccatura fired</name>
							<script>tunesmithing = "none"
if ak.ai() then return end
--ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
   local smashlimb = ak.limbs.standardizeLimb(matches[3])
   if affstrack.score[smashlimb] &lt; 100 then
      OppGainedAff(smashlimb)
   end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A bell\-like tone rings out from your songblessed rapier\, echoed by the sound of cracking bone as ([\w'\-]+)\'s (left leg|right leg|left arm|right arm) snaps\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Auralbless (undeaf)</name>
						<script>if matches[2] == "yourself" then return false end

if IsTargetted(matches[2]) then
	affstrack.score.deaf = 100
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You lightly strike the side of ([\w'\-]+)\'s head with your rapier\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Raze rebounding/shield</name>
						<script>if IsTargetted(matches[2]) then
	if string.find(matches[1], "rebounding") then
		ak.defs.rebounding = false
	else
		ak.defs.shield = false
	end
	ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You raze ([\w'\-]+)\'s (aura of rebounding|magical shield) with a rapier carved from living ice\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Harmonics</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bagatelle</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Bagatelle restored hearing</name>
							<script>if IsTargetted(matches[2]) then
	OppGainedAff("deaf")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) cries out with a look of surprise as the Bagatelle restores \w+ hearing\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Berceuse</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Berceuse stripped insomnia</name>
							<script>if IsTargetted(matches[2]) then
   affstrack.score.insomnia = 100
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) drifts away into the soft music of the Berceuse\, abandoning \w+ to its soporific tones\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Berceuse sent them to sleep!</name>
							<script>if multimatches[1][2]:lower() == target:lower() then
	if affstrack.score.prone &lt; 100 then
		OppGainedAff("prone sleep")
	else
		OppGainedAff("sleep")
	end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+)\'s eyes close suddenly as (s|)he falls asleep\.$</string>
								<string>^([\w'\-]+) drifts away into the soft music of the Berceuse\, abandoning \w+ to its soporific tones\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Voicecraft</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Maqam (Clumsiness)</name>
						<script>ak.songoff = true
if IsTargetted(matches[2]) then
   if affstrack.score.clumsiness == 100 then
	    OppGainedAff("Dizziness")
   else
      OppGainedAff("Clumsiness")
   end
else
	ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You sing a graceful maqam of el\'Jazira at ([\w'\-]+)\.$</string>
							<string>^The songbird upon your shoulder sings a graceful maqam of el\'Jazira at ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Haiku (Confusion)</name>
						<script>ak.songoff = true
if IsTargetted(matches[2]) then
	OppGainedAff("Confusion")
else
	ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You recite an obscure Kamleikan haiku to ([\w'\-]+)\.$</string>
							<string>^The songbird upon your shoulder perfectly mimics the recitation of an obscure Kamleikan haiku to ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Isorhythm (Claustrophobia)</name>
						<script>ak.songoff = true
if IsTargetted(matches[2]) then
	OppGainedAff("Claustrophobia")
else
	ak.scoreup(matches[2])
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^In droning song you subject ([\w'\-]+) to a lengthy isorhythm\.$</string>
							<string>^The songbird upon your shoulder launches into a droning song\, subjecting ([\w'\-]+) to a lengthy isorhythm\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Fugue (Fear)</name>
						<script>ak.songoff = true
if IsTargetted(matches[2]) then
	OppGainedAff("Fear")
else
	ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Weaving a complex counterpoint between instrument and voice\, you fill ([\w'\-]+) with fear\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Poem (nausea)</name>
						<script>ak.songoff = true
if IsTargetted(matches[2]) then
	OppGainedAff("nausea")
else
	ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Your poem of gluttony and decay makes ([\w'\-]+) green in the cheeks\.$</string>
							<string>^The songbird upon your shoulder sings out a poem of gluttony and decay that makes ([\w'\-]+) green in the cheeks\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Pastorale (Vertigo)</name>
						<script>ak.songoff = true
if IsTargetted(matches[2]) then
	OppGainedAff("Vertigo")
else
	ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You sing a pastorale of the fields and streams to ([\w'\-]+)\.$</string>
							<string>^The songbird upon your shoulder sings a pastorale of the fields and streams to ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Ditty (Epilepsy)</name>
						<script>ak.songoff = true
if IsTargetted(matches[2]) then
	OppGainedAff("Epilepsy")
else
	ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You sing an irritating\, mind\-numbing ditty at ([\w'\-]+)\.$</string>
							<string>^The songbird upon your shoulder twitters an irritating\, mind\-numbing ditty at ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Requiem (Paranoia)</name>
						<script>ak.songoff = true
if IsTargetted(matches[2]) then
	OppGainedAff("Paranoia")
else
	ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^With a mournful cry you begin the requiem for Seleucar to ([\w'\-]+)\.$</string>
							<string>^With a mournful cry\, the songbird upon your shoulder begins the requiem for Seleucar to ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Epic (Paralysis)</name>
						<script>ak.songoff = true
if IsTargetted(matches[2]) then
	OppGainedAff("Paralysis")
else
	ak.scoreup(matches[2])
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You begin reciting an epic tale of the heroism of Nicator to ([\w'\-]+)\, holding \w+ spellbound\.$</string>
							<string>^The songbird upon your shoulder begins to perfectly mimic the recitation of an epic tale of the heroism of Nicator to ([\w'\-]+)\, holding \w+ spellbound\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Ode (Addiction)</name>
						<script>ak.songoff = true
if IsTargetted(matches[2]) then
	OppGainedAff("Addiction")
else
	ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^With a wink\, you recite \"Ode to Elixirs\" to ([\w'\-]+)\.$</string>
							<string>^The songbird upon your shoulder perfectly mimics a recitation of \"Ode to Elixirs\" to ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Qasida (Anorexia)</name>
						<script>ak.songoff = true
if IsTargetted(matches[2]) then
	OppGainedAff("Anorexia")
else
	ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Starting with the characteristic Jaziran trill\, you sing a qasida of asceticism to ([\w'\-]+)\.$</string>
							<string>^The songbird upon your shoulder sings a qasida of asceticism to ([\w'\-]+), starting with the characteristic Jaziran trill\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Passion (Stupidity)</name>
						<script>ak.songoff = true
if IsTargetted(matches[2]) then
	OppGainedAff("Stupidity")
else
	ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^With a gravity born of respect\, you sing of the saintly Imithia of legend, bringing a certain dull look to ([\w'\-]+)\'s face\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Limerick (Impatience)</name>
						<script>ak.songoff = true
if IsTargetted(matches[2]) then
	 OppGainedAff("Impatience")
else
	ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Composing a few clever lines in your head\, you quickly sing a jaunty limerick at ([\w'\-]+)\.$</string>
							<string>^The songbird upon your shoulder quickly sings a jaunty limerick at ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Chant (In Progress{Please Submit if You Complete}]</name>
						<script>ak.songoff = true
if IsTargetted(matches[3]) then
 	--do something
   ak.scoreup(matches[3])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You sing a sonorous chant\, stripping the ([\w'\-]+) defence of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Cantata (breaks shield)</name>
						<script>ak.songoff = true
selectCurrentLine() fg("GreenYellow") deselect() resetFormat()

if IsTargetted(matches[2]) then
	ak.defs.rebounding = false
	ak.defs.shield = false
	ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Your cantata shatters the defences surrounding ([\w'\-]+)\.$</string>
							<string>^Your cantata shatters the magical shield surrounding (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dwinnu (breaks bonds)</name>
						<script>ak.songoff = true
selectCurrentLine() fg("GreenYellow") deselect() resetFormat()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>'DWINNU! DWINNU!' you chant urgently as your bonds turn to dust.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Voicecraft failed due to deafness</name>
						<script>ak.songoff = true
cecho("\n    &lt;white&gt;--== TARGET IS DEAF ==--&lt;reset&gt;")
if not matches[2] or IsTargetted(matches[2]) then
	affstrack.score.deaf = 0
	ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You sing a graceful maqam of el\'Jazira at ([\w'\-]+)\, who seems unmoved\.$</string>
							<string>^You sense futility as you recite an obscure Kamleikan haiku to ([\w'\-]+)\.$</string>
							<string>^In droning song you subject ([\w'\-]+) to a lengthy isorhythm\, without results\.$</string>
							<string>^Weaving a complex counterpoint between instrument and voice\, you fail to instill anything like fear in ([\w'\-]+)\.$</string>
							<string>^You invoke chaotic powers in a dark solo but fail to drain the essential magic of ([\w'\-]+)\.$</string>
							<string>^You direct a poem of gluttony and decay at ([\w'\-]+)\, without success\.$</string>
							<string>^You sing a pastorale of the fields and streams to ([\w'\-]+)\, who seems not to notice\.$</string>
							<string>^You chant \'GIMMEGIMME\' at ([\w'\-]+)\, who does not react\.$</string>
							<string>^You sing an irritating\, mind\-numbing ditty at ([\w'\-]+)\, who seems curiously unaffected\.$</string>
							<string>^With a mournful cry you begin the requiem for Seleucar to ([\w'\-]+)\, who appears unmoved\.$</string>
							<string>^Using a heavy tremolo you sing\, uselessly\, aiming at ([\w'\-]+)\'s (left|right) leg\.$</string>
							<string>^With a frustratingly irrelevant vibrato you aim at ([\w'\-]+)\'s (left|right) arm\.$</string>
							<string>^Your recitation of an epic tale of the heroism of Nicator has no effect on ([\w'\-]+)\.$</string>
							<string>^With a wink\, you recite \"Ode to Elixirs\" to ([\w'\-]+)\, who looks on\, unimpressed\.$</string>
							<string>^Starting with the characteristic Jaziran trill\, you sing a qasida of asceticism to ([\w'\-]+)\, who seems undaunted\.$</string>
							<string>^With a gravity born of respect\, you sing of the saintly Imithia\, if only for yourself\.$</string>
							<string>^Composing a few clever lines in your head\, you quickly sing a jaunty limerick at ([\w'\-]+)\, who seems to pay no notice\.$</string>
							<string>^You sing a sonorous chant which fails to strip the defences of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Cantata no shield / rebounding</name>
						<script>ak.songoff = true
if IsTargetted(matches[2]) then
	ak.defs.rebounding = false
	ak.defs.shield = false
	ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You let the grace of your voice shine forth with a Scarlattan cantata at (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dirge (banish gravehands)</name>
						<script>ak.songoff = true
selectCurrentLine() fg("GreenYellow") deselect() resetFormat()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>With an unearthly dirge, you banish the hands that reach from the grave.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Balance Recovered</name>
						<script>ak.songoff = false
ak.scoreup(target)
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You have recovered voice balance.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Tremolo</name>
						<script>ak.limbs.ScoreRun = true
ak.limbs.LimbHit(multimatches[2][2],"Me", "tremolo", multimatches[2][3].."leg")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Using a heavy tremolo you brutally punish</string>
							<string>^Using a heavy tremolo you brutally punish ([\w'\-]+)\'s already shattered ([\w'\-]+) leg\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Martellato</name>
					<script>OppGainedAff("Prone")
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>The songblessing upon the rapier swells with a rich, vibrant hum.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Hearts-Fury Counter</name>
					<script>enableTrigger("Confirmed Counter Hit")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Full of controlled rage you lash out in a counterstrike.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Riposte Parry</name>
					<script>enableTrigger("Confirmed Counter Hit")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Lightning-quick, you flick your blade out in riposte.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Confirmed Counter Hit</name>
					<script>disableTrigger("Confirmed Counter Hit")
if target == matches[3] then
   enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
   enableTrigger("Confirmed Hit")                        --DO NOT CHANGE!
   if weaponattack == nil then weaponattack = {} end
   table.insert(weaponattack, matches[2])
end
--display(weaponattack)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You bring (.*) crashing down on ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Blademaster Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Strikes</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Shoulder</name>
						<script>if IsTargetted(matches[2]) then
	OppGainedAff("weariness")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^With a fluid motion, you aim a blow just below ([\w'\-]+)'s shoulder.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hands</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Lunging forward with practised grace, you strike at the back of ([\w'\-]+)'s (right|left) hand.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Ears</name>
						<script>if IsTargetted(matches[2]) then
	OppGainedAff("clumsiness")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Lashing out with open palms, you box ([\w'\-]+)\'s ears.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Nose</name>
						<script>if IsTargetted(matches[2]) then
	OppGainedAff("disloyalty")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^With the heel of your palm\, you send a pulverising blow at ([\w'\-]+)\'s nose.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Knee</name>
						<script>if IsTargetted(matches[2]) then
	ak.mounted = false
	OppGainedAff("prone")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Sweeping out with a blade hand, you strike at the back of ([\w'\-]+)'s knee.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Neck</name>
						<script>if IsTargetted(matches[2]) then
	OppGainedAff("paralysis")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^With fluid motions of your iron fingers, you strike precisely at pressure points on ([\w'\-]+)'s neck.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Kidneys</name>
						<script>if IsTargetted(matches[3]) then
	OppGainedAff("addiction")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Dancing behind h(er|is) with a neat sidestep, you strike at ([\w'\-]+)'s kidney with a balled fist.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Eyes</name>
						<script>if IsTargetted(matches[2]) then
	OppGainedAff("hallucinations")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^With pinpoint strikes to ([\w'\-]+)'s sockets, you burst blood vessels in h(er|is) eyes, causing them to run red.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Temple</name>
						<script>if IsTargetted(matches[3]) then
	OppGainedAff("stupidity")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Striking h(er|is) temple with a clenched fist, you leave ([\w'\-]+) reeling.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Chin</name>
						<script>--gz.landed_venom("delphinium")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Stepping in close, you strike upwards at a precise point below ([\w'\-]+)'s chin.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Groin</name>
						<script>if IsTargetted(matches[2]) then
	OppGainedAff("recklessness")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Targeting a vulnerable point, you lash out at ([\w'\-]+)'s groin with a calculated strike.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Chest</name>
						<script>if IsTargetted(matches[2]) then
	OppGainedAff("hypochondria")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^With rapid precision, you aim first a punch then a spearhand blow at two points on ([\w'\-]+)'s chest.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Throat</name>
						<script>if IsTargetted(matches[2]) then
	OppGainedAff("asthma")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^With iron fingers, you aim a darting strike at a weak point on ([\w'\-]+)'s throat.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Stomach</name>
						<script>if IsTargetted(matches[2]) then
	OppGainedAff("anorexia")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You aim a measured blow at ([\w'\-]+)'s stomach, feeling muscles clench beneath your fist.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Armpit</name>
						<script>if IsTargetted(matches[2]) then
	OppGainedAff("slickness")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^With a swift, snaking strike, you thrust upwards at ([\w'\-]+)'s unprotected armpit.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Fist It</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Void Fist</name>
						<script>if IsTargetted(matches[2]) then
	OppGainedAff("voidfist")
   if voidtimer then killTimer(voidtimer) end
	 if ak.limbs.blademaster.stance["Me"] == "Sanya" then
      voidtimer = tempTimer(20, [[OppLostAff("voidfist")]])	 
	 else
      voidtimer = tempTimer(15, [[OppLostAff("voidfist")]])
   end
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Emptying your mind of conscious thought, you welcome the void as you strike ([\w'\-]+) a hollow blow\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Air Fist</name>
						<script>if IsTargetted(matches[2]) then
	OppGainedAff("airfist")
   if airfisttimer then killTimer(airfisttimer) end
	 if ak.limbs.blademaster.stance["Me"] == "Thyr" then
      airfisttimer = tempTimer(19.5, [[OppLostAff("airfist")]])	 
	 else
      airfisttimer = tempTimer(14.5, [[OppLostAff("airfist")]])
   end
end


</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Freeing your mind to the unpredictable dance of the wind\, you hurl a blow towards ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Vitiate</name>
						<script>if IsTargetted(matches[2]) then
	OppGainedAff("vitiate")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Thrusting at ([\w'\-]+)'s chest with a blade hand outstretched, you release an unmitigated torrent of Shin energy upon \w+, and \w+ crumples helplessly\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hamstring</name>
						<script>--Seriously?  You're worried about hamstring?  

if IsTargetted(matches[3]) then
   OppGainedAff("hamstring")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Ducking behind ([\w'\-]+)\, you strike at ([\w'\-]+)'s hamstring with a rigid\, practised grip\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hamstring recover</name>
						<script>if IsTargetted(matches[2]) then
   OppLostAff("hamstring")
end
ak.scoreup(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>([\w'\-]+) seems able to move more freely all of a sudden.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>First Third Person</name>
						<script>if IsTargetted(matches[2]) then
	OppGainedAff("voidfist")
   if voidtimer then killTimer(voidtimer) end
	 if ak.limbs.blademaster.stance["Me"] == "Sanya" then
      voidtimer = tempTimer(7.5, [[OppLostAff("voidfist")]])	 
	 else
      voidtimer = tempTimer(4.5, [[OppLostAff("voidfist")]])
   end
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>His eyes dark and expression blank, [\w'\-]+ strikes ([\w'\-]+) a hollow blow.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Lightning Infuse Check</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Minute bolts of lightning arc across ([\w'\-]+)\'s skin\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Prone Stuff</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>ImpaleSlash</name>
						<script>if IsTargetted(matches[3]) then
	OppGainedAff("impaleslash")
   if impaleslashtimer then killTimer(impaleslashtimer);impaleslashtimer = nil end
   impaleslashtimer = tempTimer(30, [[OppLostAff("impaleslash")]])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(.*) steady in your grip, you drag its razor edge across arteries within ([\w'\-]+)'s abdomen\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Depthswalker Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Reap</name>
					<script>if IsTargetted(multimatches[2][2]) then 
   enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
   enableTrigger("Confirmed Hit")                        --DO NOT CHANGE!
   weaponattack = weaponattack or {}
   table.insert(weaponattack, multimatches[2][3])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You unleash a vicious reaping blow at</string>
						<string>^You unleash a vicious reaping blow at ([\w'\-]+) with (.+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Cull</name>
					<script>if IsTargetted(multimatches[2][2]) then 
   enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
   enableTrigger("Confirmed Hit")                        --DO NOT CHANGE!
   weaponattack = weaponattack or {}
   table.insert(weaponattack, multimatches[2][3])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You lay into</string>
						<string>^You lay into ([\w'\-]+) with a vicious blow from (.+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Attunes</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Degeneration Attuned Aff</name>
						<script>if IsTargetted(multimatches[2][2]) then 
   OppGainedAff(multimatches[2][3])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You determine that</string>
							<string>^You determine that ([\w'\-]+) is suffering from ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Attuned Madness Aff</name>
						<script>if IsTargetted(multimatches[2][2]) then 
   OppGainedAff(multimatches[2][3])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You sense that</string>
							<string>^You sense that ([\w'\-]+) has been struck down with the ([\w'\-]+) (madness|degeneration)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Attuned Target</name>
						<script>--cecho("\n\n\nFired!")
if matches[2] == target:lower():title() then
	ak.attuned = true
	enableTrigger("Unattuned Target")
	attunetimer = tempTimer(160, [[
		ak.attuned = false
		if svo then svo.boxDisplay("Target Unattuned", "red:black") end
	]])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Reaching out to the shadow of ([\w'\-]+), you plunge (?:.+) into it and attune it to the directive of (Degeneration|Madness)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Unattuned Target</name>
						<script>if matches[2] == target:lower():title() then
	disableTrigger("Unattuned Target")
	killTimer(attunetimer)
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You unattune the shadow of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Instills</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>3</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You unleash a vicious reaping blow at ([\w'\-]+) with (.+)\.$</string>
						<string>^You lay into ([\w'\-]+) with a vicious blow from (.+)\.$</string>
						<string>Your blow with (.+) barely clips</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>2</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Timeloop</name>
						<script>if affstrack.score.timeloop &gt; 0 and ak.thoughtIhad then
  ak.thoughtIhad("timeloop")
end
OppGainedAff("timeloop")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Grey fog begins to rise from the suddenly panicked-looking</string>
							<string>^Grey fog begins to rise from the suddenly panicked-looking ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Looped Instill</name>
						<script>if affstrack.score.timeloop &lt; 100 and affstrack.score.timeloop &gt; 0 and ak.ProTrackingConfirmed then
  ak.ProTrackingConfirmed("timeloop")
end
OppGainedAff("timeloop")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A grey miasma flares around ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Depression</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Depression Sequence</name>
							<script>if IsTargetted(multimatches[2][2]) then
   ak.instill("Depression")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>3</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>As the weapon strikes</string>
								<string>^As the weapon strikes ([\w'\-]+)\, it burns with a sickly yellow glow\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Depression Looping</name>
								<script>if IsTargetted(matches[2]) then
   ak.instill("Depression")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>4</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A grey miasma flares around ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Depression All</name>
							<script>--Depression, Nausea, Hypochondria, Anorexia/Masochism
if IsTargetted(multimatches[2][2]) then
   ak.fullinstill("Depression")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A look of total despair crosses the face of</string>
								<string>^A look of total despair crosses the face of ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Degeneration</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Degeneration</name>
							<script>if IsTargetted(multimatches[2][2]) then
	if not multimatches[3][1]:find("stiffens into paralysis.") then
		ak.instill("Degeneration")
	end
end

--Weariness, Clumsiness, Paralysis, Damage
--[[
if IsTargetted(matches[2]) and (ak.boostloop or affstrack.score.timeloop &gt;= 50) then 
   OppGainedAff("weariness")
   OppGainedAff("clumsiness") 
elseif IsTargetted(matches[2]) then 
   if affstrack.score.weariness == 0 then
      OppGainedAff("weariness")
   elseif affstrack.score.clumsiness == 0 and affstrack.score.weariness == 100 then
      OppGainedAff("clumsiness") 
   end
   ak.paradegen = true
end
--]]</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>3</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>As the weapon strikes</string>
								<string>^As the weapon strikes ([\w'\-]+)\, the contact area begins to rot before your eyes\.$</string>
								<string>^(.+)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Degeneration Loop</name>
								<script>if IsTargetted(multimatches[1][2]) then
	if not multimatches[2][1]:find("stiffens into paralysis.") then
		ak.instill("Degeneration")
	end
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>1</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A grey miasma flares around ([\w'\-]+)\.$</string>
									<string>^(.+)$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Degeneration All</name>
							<script>--Depression, Nausea, Hypochondria, Anorexia/Masochism
if IsTargetted(matches[2]) then
   ak.fullinstill("Degeneration")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>3</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The face of ([\w'\-]+) contorts in pain.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Retribution</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Retribution Sequence</name>
							<script>if IsTargetted(multimatches[2][2]) then
   ak.instill("Retribution")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>3</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>As the weapon strikes</string>
								<string>^As the weapon strikes ([\w'\-]+), it blazes with incandescent white flame\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Retribution Loop</name>
								<script>if IsTargetted(matches[2]) then
   ak.instill("Retribution")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>4</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A grey miasma flares around ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Retribution All</name>
							<script>if IsTargetted(multimatches[2][2]) then
   ak.fullinstill("Retribution")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The white flame leaps from the scythe to</string>
								<string>^The white flame leaps from the scythe to ([\w'\-]+), blazing with a terrible intensity before guttering out\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Leach</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Leach Sequence</name>
							<script>if IsTargetted(multimatches[2][2]) then
   ak.instill("Leach")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>4</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>As the weapon strikes</string>
								<string>^As the weapon strikes ([\w'\-]+), \w+ seems greatly diminished\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Leach Loop</name>
								<script>if IsTargetted(matches[2]) then
   ak.instill("Leach")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>3</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A grey miasma flares around ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Leach All</name>
							<script>if IsTargetted(multimatches[2][2]) then
   ak.fullinstill("Leach")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>2</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^As the scythe comes away, the writhing shadow of ([\w'\-]+) clings to the weapon\.$</string>
								<string>^You claim the shadow of ([\w'\-]+), storing it within your phylactery\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Madness</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Madness Sequence</name>
							<script>if IsTargetted(multimatches[2][2]) then
   ak.instill("Madness")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>4</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>As the weapon strikes</string>
								<string>^As the weapon strikes ([\w'\-]+), \w+ face grows vacant and \w+ begins to tremble\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Madness Loop</name>
								<script>if IsTargetted(matches[2]) then
   ak.instill("Madness")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>3</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A grey miasma flares around ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Phylactery Tracking</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Phylactery Starting</name>
						<script>ak.ShadowList = {}
enableTrigger("Phylactname")
enableTrigger("Phylactery End")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You have stored the following people's shadows within your phylactery:</string>
							<string>--------------------------------------------------------------------------------</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Phylactname</name>
						<script>table.insert(ak.ShadowList,matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Phylactery End</name>
						<script>disableTrigger("Phylactname")
disableTrigger("Phylactery End")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Your phylactery holds ([\w'\-]+) shadows of a maximum \d+\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Shadow Removed</name>
						<script>ak.removeshadow(matches[2])
ak.scoreup(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You draw the shadow of ([\w'\-]+) from within .+\, allowing it to dissipate into nothing\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Boostloop</name>
					<script>ak.boostloop = true</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Bending your will upon .+, you corrupt the weapon's timestream.$</string>
						<string>As you push your aeonic might beyond its limits, you feel yourself grow older.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Claimed Shadow!</name>
					<script>ak.addshadow(matches[2])
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#00ffff</mFgColor>
					<mBgColor>#ff0000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You claim the shadow of ([\w'\-]+), storing it within your phylactery\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Redemption</name>
					<script>ak.removeshadow(matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Drawing the shadow of ([\w'\-]+) from .+, you suffuse it with your power\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Mutilate</name>
					<script>OppGainedAff(multimatches[1][2])
ak.removeshadow(multimatches[2][2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You rub some ([\w'\-]+) on .+\.$</string>
						<string>^Drawing the shadow of ([\w'\-]+) from .+, you plunge .+ savagely into the ephemeral mass\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Shadowmadness Tracking</name>
					<script>if IsTargetted(multimatches[2][2]) then 
   OppGainedAff(multimatches[2][3])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You sense that</string>
						<string>^You sense that ([\w'\-]+) has been struck down with the ([\w'\-]+) madness\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Aeon</name>
					<script>if IsTargetted(matches[2]) then
   aeonreset = false
   OppGainedAff("aeon")
   AeonTimer = tempTimer(15,[[aeonreset = true]])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Invoking the might of Aeon, you bring down a curse of terrible proportions upon ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Aeon speed</name>
					<script>if IsTargetted(matches[2]) then
   ak.defs.speed = false
   ak.scoreup(matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Directing your will upon ([\w'\-]+), you tear away the protection granted to (?:her|him) by the speed elixir\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Shield Shattered</name>
					<script>ak.defs.shield = false
ak.scoreup(matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Your shadow leaps for ([\w'\-]+)\, hammering [\w'\-]+ shield in a silent frenzy that causes it to explode in a shower of prismatic shards\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Hinder</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Preempt</name>
						<script>if IsTargetted(matches[2]) then
	if affstrack.score.preempt == 0 then
		affstrack.score.preempt = 100
		
		ak.scoreup(matches[2])
	end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You begin dedicating part of your attention to predicting where (\w+) shall try to flee to\.$</string>
							<string>^Someone else is already preempting the movements of (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Preempt Fade</name>
						<script>if IsTargetted(matches[2]) then
	if affstrack.score.preempt == 100 then
		affstrack.score.preempt = 0
		
		ak.scoreup(matches[2])
	end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You are no longer predicting the movements of (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Druid Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Metamorphosis</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Furor</name>
						<script>local augment = "percent"
local weapon = "furor"
local limb = ak.limbs.standardizeLimb(matches[2])
if ak.ai() then return end
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[3])
table.insert(ak.limbs.currentbreak.augment,augment)
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^In a furor of gnashing teeth and toxic bile\, you tear at the (right leg|left leg|right arm|left arm|head|torso) of (\w+) with two of your heads\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Clamp</name>
						<script>local augment = "percent"
local weapon = "crunch"
local limb = ak.limbs.standardizeLimb(multimatches[1][3])
if ak.ai() then return end
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,augment)
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You command your many heads to clamp (\w+)\'s (right leg|left leg|right arm|left arm|head|torso)\.$</string>
							<string>^They seize .* with a bonecrunching grip\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hydra Freeze</name>
						<script>if ak.ai() then return end
OppGainedAff("frozen")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Opening your great maw\, you assail (\w+) with a glacial plume of freezing air\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Sumac Back</name>
						<script>ak.druid.sumac = true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your venom sacks have produced more sumac.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Frenzy</name>
						<script>local augment = "percent"
local weapon = "furor"
local limb = ak.limbs.standardizeLimb(multimatches[3][2])
if ak.ai() then return end
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,multimatches[1][2])
table.insert(ak.limbs.currentbreak.augment,augment)
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
local v1 = multimatches[1][3]
local v2 = multimatches[2][2]
OppGainedAff(v1,v2)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>2</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You plunge your deadly stinger into the soft prey that is (\w+)\, pumping (\w+) into \w+\.$</string>
							<string>^You rub some (\w+) upon your lethal claws\.$</string>
							<string>^You rip at the (right leg|left leg|right arm|left arm|head|torso) of (\w+) with your lethal claws\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Frenzy Aff</name>
						<script>if ak.ai() then return end
local v1 = multimatches[1][3]
local v2 = multimatches[2][2]
OppGainedAff(v1,v2)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>2</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You plunge your deadly stinger into the soft prey that is (\w+)\, pumping (\w+) into (\w+)\.$</string>
							<string>^You rub some (\w+) upon your lethal claws\.$</string>
							<string>^You rip at the flesh of (\w+) with your lethal claws\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Frenzy Sumac</name>
						<script>--Morthif gasps as a terrible aching wracks his body.
ak.druid.sumac = false
local augment = "percent"
local weapon = "furor"
local limb = ak.limbs.standardizeLimb(multimatches[4][2])
if ak.ai() then return end
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,multimatches[1][2])
table.insert(ak.limbs.currentbreak.augment,augment)
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
OppGainedAff(multimatches[3][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>3</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You plunge your deadly stinger into the soft prey that is (\w+)\, pumping (\w+) into \w+\.$</string>
							<string>^(\w+) gasps as a terrible aching wracks \w+ body\.$</string>
							<string>^You rub some (\w+) upon your lethal claws\.$</string>
							<string>^You rip at the (right leg|left leg|right arm|left arm|head|torso) of (\w+) with your lethal claws\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Frenzy Sumac Aff</name>
						<script>if ak.ai() then
  return
end
ak.druid.sumac = false
if IsTargetted(multimatches[1][2]) then
  OppGainedAff(multimatches[3][2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>3</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You plunge your deadly stinger into the soft prey that is (\w+)\, pumping (\w+) into \w+\.$</string>
							<string>^(\w+) gasps as a terrible aching wracks \w+ body\.$</string>
							<string>^You rub some (\w+) upon your lethal claws\.$</string>
							<string>^You rip at the flesh of (\w+) with your lethal claws\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Inferno</name>
						<script>if IsTargetted(matches[2]) then
   OppGainedAff("aflame")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Fire spontaneously reignites upon the skin of (\w+)\.$</string>
							<string>^(\w+) is seared by the blaze\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bind</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   affstrack.score.bound = 100
   ak.scoreup(matches[2])
   --8secs
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You command your many heads to bind (\w+)\. With a synchronous\, guttural rasp\, they obey\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Trumpet</name>
					<script>if IsTargetted(matches[2]) then 
   OppGainedAff("prone")
   if ak.track.flown then
      ak.track.flown = false
      OppGainedAff("disrupt")
   end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You raise your trunk into the air before (\w+) and trumpet mightily, knocking \w+ to the ground\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Trumpet fail</name>
					<script>if IsTargetted(matches[2]) then 
   OppLostAff("deaf")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You trumpet mightly at (\w+) but \w+ is unaffected\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Blaze Prone</name>
					<script>if ak.ai() then
  return
end
--ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
  EchoForMajorAff("PRONE")
  OppGainedAff("prone")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^As you strike (\w+), the heat of your aura drives \w+ to the ground\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Dragon Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Claw Reset</name>
					<script>if ak.ai() then return end
expandAlias("dofree wipe claws")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Your claws are already dripping with venoms, Wyrm.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Dragon Curse Set</name>
					<script>if ak.ai() then return end
dragoncursesent = matches[2]
ak.scoreup(matches[3])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You summon your ancient power and direct the curse of ([\w'\-]+) to strike down ([\w'\-]+) in \d+ seconds\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Dcursed</name>
					<script>if ak.ai() then return end
if dragoncursesent then OppGainedAff(dragoncursesent) end
dragoncursesent = false</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>([\w'\-]+) convulses under the influence of some invisible force.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Roar</name>
					<script>if ak.ai() then return end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Your nostrils flare with a rush of air as your sinuous body contracts and your mouth opens wide to emit a rippling, unbroken roar that reverberates through the very earth underfoot.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Bound</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   affstrack.score.bound = 100
   ak.scoreup(matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Abruptly the keening ends, and a blossom of ethereal tendrils bursts from ([\w'\-]+)'s chest, ensnaring \w+ in a web of undulating bonds\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Dwb Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Momentum Drop</name>
					<script>ak.dwb.momentum = ak.dwb.momentum - 1
if ak.dwb.momentum &lt; 0 then
	ak.dwb.momentum = 0
end
ak.scoreup(target)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Your momentum decreases.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Momentum Gain</name>
					<script>ak.dwb.momentum = ak.dwb.momentum + 1
ak.scoreup(matches[3])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You skilfully whirl (.*) toward ([\w'\-]+)\, slamming the balls of metal into \w+\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>No Momentum</name>
					<script>ak.dwb.momentum = 0
ak.scoreup(target)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You have lost all of your gained momentum.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Expend Legs</name>
					<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
	EchoForMajorAff("PRONE")
	OppGainedAff("prone")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^The power of your blow sweeps the legs out from under ([\w'\-]+).$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Not Enough Momentum</name>
					<script>display(gmcp.Char.Vitals.charstats[4])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You have not built up sufficient momentum to perform such an assault against (\w+)\.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Asthma</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
  OppGainedAff("asthma")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Your blow crunches home into the chest of (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Cracked Ribs</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	ak.twoh.ribs = ak.twoh.ribs + 1
	if ak.twoh.ribs &gt; 7 then ak.twoh.ribs = 7 end
	cecho("&lt;yellow&gt;ribs:&lt;cyan&gt; "..ak.twoh.ribs)
	ak.ribHit()
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) doubles over as the flail|morningstar savagely crunches into \w+ ribcage\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Healthleech</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
  OppGainedAff("healthleech")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You feel your blow land with a brutal crunch to the side of (\w+)'s head\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Skull Fracture</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	ak.twoh.skull = ak.twoh.skull + 1
	if ak.twoh.skull &gt; 7 then ak.twoh.skull = 7 end
	cecho("&lt;yellow&gt;skull:&lt;cyan&gt; "..ak.twoh.skull)
	ak.skullHit()
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) staggers back as the flail catches \w+ a glancing blow to the head\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Darkshade</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
  OppGainedAff("darkshade")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Your flail rips at the \w+ \w+ of (\w+), leaving it a raw and bloody mess\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Wrist Fracture</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[3]) then
	ak.twoh.wrist = ak.twoh.wrist + 1
	if ak.twoh.wrist &gt; 8 then ak.twoh.wrist = 8 end
	cecho("&lt;yellow&gt;wrist:&lt;cyan&gt; "..ak.twoh.wrist)
	ak.wristHit()
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Your flail smashes into the bloody mess that is the \w+ \w+ of (\w+)\.$</string>
						<string>^The wet crunch of bone can be heard as the flail smashes into the \w+ \w+ of (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Clumsiness</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
  OppGainedAff("clumsiness")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Your blow smashes into the kneecaps of (\w+)\, sending \w+ staggering wildly\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Ugh Morning Star Blind</name>
					<script>affstrack.score.blind = 100
ak.scoreup(matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(.+) crunches home with stunning force\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Star Right Arm Gate</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
  OppGainedAff("weariness")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You feel the satisfying crunch of bone as your attack connects with the right arm of (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Star Left Arm Gate</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
	local aff = "armexpend clumsiness"
  OppGainedAff(aff)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You feel the satisfying crunch of bone as your attack connects with the left arm of (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Star Legs</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
  EchoForMajorAff("PRONE")
  OppGainedAff("lethargy prone")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^The power of your blow sweeps the legs out from under (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Star Wrist Fracture</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[3]) then
	ak.twoh.wrist = ak.twoh.wrist + 1
	if ak.twoh.wrist &gt; 8 then ak.twoh.wrist = 8 end
	cecho("&lt;yellow&gt;wrist:&lt;cyan&gt; "..ak.twoh.wrist)
	ak.wristHit()
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^The wet crunch of bone can be heard as the morningstar smashes into the \w+ arm of (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Fire Lord Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Blister</name>
					<script>if IsTargetted(matches[2]) then
   OppGainedAff("blisters aflame")
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Bending the might of Kkractle upon the pitiful ([\w'\-]+), you command that \w+ burn from within\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Char</name>
					<script>if IsTargetted(matches[2]) then
   OppGainedAff("paralysis clumsiness")
end
ak.scoreup(matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You reach out and clasp the face of ([\w'\-]+) between your hands, \w+ skin rapidly beginning to blacken beneath your grasp\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Weave</name>
					<script>if IsTargetted(matches[2]) then
	 OppGainedAff("bound")
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You fashion a weave of flame and cast it about ([\w'\-]+), entangling \w+ in its conflagrant tendrils\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Flamewhip Sensi</name>
					<script>if IsTargetted(matches[2]) then
	OppGainedAff("sensitivity")
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^The skin of ([\w'\-]+) is left sensitive and raw\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Flamewhip Para</name>
					<script>if IsTargetted(matches[2]) then
	OppGainedAff("paralysis")
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) convulses, face locked in a rictus of agony\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Vapourise</name>
					<script>if IsTargetted(matches[2]) then
   ak.defs.shield = false
   OppGainedAff("aflame")
	 ak.defs.shield = false
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You superheat the air surrounding ([\w'\-]+)\, \w+ magical shield shattering under the onslaught and \w+ skin catching aflame\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Spark momentum</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Spark 0</name>
						<script>ak.firelord.spark = 0
ak.scoreup(target)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The loud crackling of your flames grows quiet, their strength greatly reduced\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Spark 1</name>
						<script>ak.firelord.spark = 1
ak.scoreup(target)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#aa0000</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Your fires begin to rage with the desire to consume\.$</string>
							<string>^As you cease to burn with such intensity the warping of the air that surrounds you fades\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Spark 2</name>
						<script>ak.firelord.spark = 2
ak.scoreup(target)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ffaa00</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The very air warps about you as your flames burn ever brighter\.$</string>
							<string>^Your searing white flames are diminished, turning to a burning orange\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Spark 3</name>
						<script>ak.firelord.spark = 3
ak.scoreup(target)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ffff00</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The flames that compose you turn a searing white\.$</string>
							<string>^The burning crown about your head flickers out of existence\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Spark 4</name>
						<script>ak.firelord.spark = 4
ak.scoreup(target)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ffffff</mFgColor>
						<mBgColor>#ff0000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A crown of flames ignites about your head, a mark of Kkractle's esteem\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Infernal Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Investicated</name>
					<script>if ak.ai() then return end
local currentenvenom = matches[2]
currentvenoms = currentvenoms or {}
currentvenoms[currentenvenom] = currentvenoms[currentenvenom] or {}
local blah = matches[3]
if blah == "corrupt the blood of the heathens" then
  table.insert(currentvenoms[currentenvenom],1,"torture")
elseif blah == "torment the heathens" then
  if affstrack.score.healthleech == 100 then
    table.insert(currentvenoms[currentenvenom],1,"tormenttwo")
  else
    table.insert(currentvenoms[currentenvenom],1,"tormentone")
  end
elseif blah == "exploit the weakness of the heathens" then
  table.insert(currentvenoms[currentenvenom],1,"exploit")
elseif blah == "exploit the heathen's suffering" then
  --table.insert(currentvenoms[currentenvenom],1,"agony")
elseif blah == "punish the heathens" then
  --table.insert(currentvenoms[currentenvenom],1,"punishment")
end

</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You invest necromantic energies into (.+)\, preparing to (.+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Jester Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Mickey</name>
					<script>if IsTargetted(matches[2]) then 
   ak.mickey = true
   ak.scoreup(matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You quickly slip ([\w'\-]+) a mickey\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Itchpowder</name>
					<script>if ak.ai() then return end
aff = "itching"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You quickly slip (\w+) some itching powder\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Bad Joke</name>
					<script>
if ak.ai() then return end
ak.defs.shield = false
ak.scoreup(matches[2])
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Most of the people in the room feel it appropriate to slap you for your terrible joke.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Magi Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Impurity</name>
					<script>if nextcurse and nextcurse ~= "paralysis" then
	 if ak.ai() then return end
   OppGainedAff(nextcurse)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You direct a crystalline golem to introduce impurities into the blood of ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Frozen</name>
					<script>if ak.ai() then return end
OppGainedAff("frozen")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You raise a hand towards [\w'\-]+ and blast [\w'\-]+ with cold, frigid air\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Deepfreeze</name>
					<script>if ak.ai() then return end
OppGainedAff("deepfreeze")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You drain the heat from the air around your enemies, causing them to experience the cold of the abyss itself.</string>
						<string>Austere gestures grandly, and causes a deepfreeze to settle over his enemies.</string>
						<string>Morthif gestures grandly, and causes a deepfreeze to settle over his enemies.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Destabilise</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Retardation</name>
						<script>if ak.ai() then return end
send("touch soul")
send("touch soul")
affstrack.score.aeon = 100
ak.scoreup(target)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Turning to a crystalline golem you direct him to project a disruptive tone at a retardation vibration.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Oscillate</name>
						<script>if ak.ai() then return end
hitrelay = {"stupidity", "epilepsy"}
OppGainedAff(table.concat(hitrelay, " "))</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Turning to a crystalline golem you direct him to project a disruptive tone at an oscillate vibration.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Creeps</name>
						<script>if ak.ai() then return end
hitrelay = {"agoraphobia", "claustrophobia"}
OppGainedAff(table.concat(hitrelay, " "))</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Turning to a crystalline golem you direct him to project a disruptive tone at a creeps vibration.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dissonance</name>
						<script>if ak.ai() then return end
hitrelay = {"prone", "dizziness"}
OppGainedAff(table.concat(hitrelay, " "))</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Turning to a crystalline golem you direct him to project a disruptive tone at a disorientation vibration.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Monk Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Pmp</name>
					<script>if ak.ai() then return end
aff = "impatience"
if IsTargetted(multimatches[2][2]) then
   OppGainedAff(aff)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>The palmstrike smashes into the temple of</string>
						<string>^The palmstrike smashes into the temple of ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Pmp2</name>
					<script>if ak.ai() then return end
aff = "stupidity"
if IsTargetted(multimatches[2][2])then
   OppGainedAff(aff)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Your palm smashes into the bridge of</string>
						<string>^Your palm smashes into the bridge of ([\w'\-]+)'s nose\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Jbp</name>
					<script>if ak.ai() then return end
aff = "deaf"
if IsTargetted(multimatches[2][2]) then
   OppGainedAff(aff)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You expertly jab your fingers into the nerve cluster behind the ear of</string>
						<string>^You expertly jab your fingers into the nerve cluster behind the ear of ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Blp</name>
					<script>if ak.ai() then return end
aff = "dizziness"
if IsTargetted(multimatches[2][2]) then
   OppGainedAff(aff)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You whip your hand in a vicious bladehand at the neck of</string>
						<string>^You whip your hand in a vicious bladehand at the neck of ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Wrench Head</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   if affstrack.score.head == 0 then
	    ak.limbs.limbcount[target]["head"] = 0
	    affstrack.score.head = 100
	 end
   local aff = "wrenchhead,epilepsy"
   OppGainedAff(aff)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Grabbing hold of the head of ([\w'\-]+)\, you savagely wrench it down and forward\, driving your knee up to meet it with a sickening crack\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Wrench Torso</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   if affstrack.score.torso == 0 then
	    ak.limbs.limbcount[target]["torso"] = 0
	    affstrack.score.torso = 100
	 end
   local aff = "wrenchtorso"
   OppGainedAff(aff)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Stepping inside the guard of ([\w'\-]+)\, you lock your hands behind \w+ before savagely wrenching \w+ forward\, driving your knee up beneath \w+ ribs\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Wrt Arm Failure</name>
					<script>if ak.ai() then return end
local limbcheck = matches[2]..""..matches[3]
local lastpercentrelay = "lastpercent"..limbcheck
if affstrack.score[limbcheck] &gt; 0 then
    if ak.thoughtIhad then ak.thoughtIhad(limbcheck) else affstrack.score[limbcheck] = 0 end
    ak.limbs.limbcount[target][limbcheck] = (ak.limbs.limbcount[target][lastpercentrelay])
    _G[target.."rightlegdisablelimbdamage"] = nil
    ak.scoreup(matches[4])
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^The ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+) is not sufficiently damaged for you to perform that attack against it\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Wrt Head/Torso Failure</name>
					<script>if ak.ai() then return end
local limbcheck = matches[2]
local lastpercentrelay = "lastpercent"..limbcheck
if affstrack.score[limbcheck] &gt; 0 then
    if ak.thoughtIhad then ak.thoughtIhad(limbcheck) else affstrack.score[limbcheck] = 0 end
    ak.limbs.limbcount[target][limbcheck] = (ak.limbs.limbcount[target][lastpercentrelay])
    _G[target.."rightlegdisablelimbdamage"] = nil
    ak.scoreup(matches[3])
end
ak.deleteFull()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^The ([\w'\-]+) of ([\w'\-]+) is not sufficiently damaged for you to perform that attack against it\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Occultist Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Occultism</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Rayz</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>5</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Tapping into your stores of karma, you transmute a small amount into pure chaos. Seven rays of different coloured light spring out from your outstretched hands, irradiating the location with blinding strobes.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hit 3</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   pullray = {}
   if matches[3] then table.insert(pullray, matches[3]) end
   if matches[4] then table.insert(pullray, matches[4]) end
   if matches[5] then table.insert(pullray, matches[5]) end
   if table.contains(pullray,"orange") then OppGainedAff("paralysis") end
   if table.contains(pullray,"violet") then OppGainedAff("aeon") end
   if table.contains(pullray,"indigo") then OppGainedAff("stupidity") end
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) is hit by a ([\w'\-]+)(?:, ([\w'\-]+)|)(?:, and ([\w'\-]+)|) ray\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hit 2</name>
							<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   pullray = {}
   if matches[3] then table.insert(pullray, matches[3]) end
   if matches[4] then table.insert(pullray, matches[4]) end
   if matches[5] then table.insert(pullray, matches[5]) end
   if table.contains(pullray,"orange") then OppGainedAff("paralysis") end
   if table.contains(pullray,"violet") then OppGainedAff("aeon") end
   if table.contains(pullray,"indigo") then OppGainedAff("stupidity") end
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) is hit by a ([\w'\-]+)(?: and ([\w'\-]+)|) ray\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Instill</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then	
	if matches[3] ~= "an allergy to sunlight" then
		OppGainedAff(matches[3])
	else 
		OppGainedAff("darkshade")
	end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You make a sharp gesture toward ([\w'\-]+)\, disrupting \w+ aura with the (.+) affliction\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Devolve</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   OppGainedAff("disloyalty shyness")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You utter a terrible curse and point a finger at ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Shrivel</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   smashlimb = matches[3]..matches[4]
   if affstrack.score[smashlimb] &lt; 100 then
      OppGainedAff(smashlimb)
   end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You touch ([\w'\-]+)'s ([\w'\-]+) ([\w'\-]+), and it shrivels away\.$</string>
							<string>^You reach out and touch ([\w'\-]+)'s ([\w'\-]+) ([\w'\-]+), but you can shrivel it no further\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Attend</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   affstrack.score.blind = 100
   affstrack.score.deaf = 100
   ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Focusing your will, you exert your aura at ([\w'\-]+) and snap your fingers, forcing [\w'\-]+ to pay attention to you\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Cold</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   OppGainedAff("frozen")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You create a tendril of icy blue light that lashes out at ([\w'\-]+) and wraps around [\w'\-]+ aura\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Enlighten</name>
						<script>if ak.ai() then return end
if string.match(matches[2],target) then
   OppGainedAff("enlighten")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You see (.*) shout\, \"No\, it cannot be true\! I cannot accept it\! I beg of you to make it stop\!</string>
							<string>^(.+), \"No\, it cannot be true\! I cannot accept it\! I beg of you to make it stop\!\"$</string>
							<string>^You see (.*) shout something in an unknown foreign tongue\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Cleanse Aura</name>
						<script>cecho("\n&lt;purple&gt; --------------------------------------------------------------")
cecho("\n&lt;white&gt; --------------------&lt;red&gt;GOT CLEANSE!!--------------------------")
cecho("\n&lt;white&gt; --------------------&lt;red&gt;GOT CLEANSE!!--------------------------")
cecho("\n&lt;white&gt; --------------------&lt;red&gt;GOT CLEANSE!!--------------------------")
cecho("\n&lt;white&gt; --------------------&lt;red&gt;GOT CLEANSE!!--------------------------")
cecho("\n&lt;white&gt; --------------------&lt;red&gt;GOT CLEANSE!!--------------------------")
cecho("\n&lt;white&gt; --------------------&lt;red&gt;GOT CLEANSE!!--------------------------")
cecho("\n&lt;white&gt; --------------------&lt;red&gt;GOT CLEANSE!!--------------------------")
cecho("\n&lt;purple&gt; --------------------------------------------------------------")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A look of sudden concern flits across the visage of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Unnamable</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   ak.occie.aura.parse_unnamable(matches[3]+0)
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) has been struck down by (\d+) curses of the unnamable\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>TrueName</name>
						<script>cecho("\n&lt;purple&gt; --------------------------------------------------------------")
cecho("\n&lt;white&gt; --------------------&lt;red&gt;GOT TRUENAME!!--------------------------")
cecho("\n&lt;white&gt; --------------------&lt;red&gt;GOT TRUENAME!!--------------------------")
cecho("\n&lt;white&gt; --------------------&lt;red&gt;GOT TRUENAME!!--------------------------")
cecho("\n&lt;white&gt; --------------------&lt;red&gt;GOT TRUENAME!!--------------------------")
cecho("\n&lt;white&gt; --------------------&lt;red&gt;GOT TRUENAME!!--------------------------")
cecho("\n&lt;white&gt; --------------------&lt;red&gt;GOT TRUENAME!!--------------------------")
cecho("\n&lt;white&gt; --------------------&lt;red&gt;GOT TRUENAME!!--------------------------")
cecho("\n&lt;purple&gt; --------------------------------------------------------------")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You command an eldritch abomination to discern the doom of ([\w'\-]+)\.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Truename Used</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   OppGainedAff("aeon")
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Drawing back with a knowing smirk\, you utter the truename of ([\w'\-]+)\, who suddenly becomes very still and bleeds from [\w'\-]+ eyes and ears\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Whisperingmadness got</name>
						<script>if ak.ai() then return end



if IsTargetted(matches[2]) then
  if affstrack.whisperscore &lt; 1 then
   for i=1, #affstrack.whisperlist do
    if affstrack.score[affstrack.whisperlist[i]] &gt; 0 then
      if ak.ProTrackingConfirmed then
        ak.ProTrackingConfirmed(affstrack.whisperlist[i])
        OppGainedAff("whisperingmadness")
        return
      else
        affstrack.score[affstrack.whisperlist[i]] = 100
        OppGainedAff("whisperingmadness")
        return
      end
    end
   end
  end
  OppGainedAff("whisperingmadness")
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You pass your hand in front of ([\w'\-]+). ([\w'\-]+) trembles and h(is|er) eyes widen in terror.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Whisperingmadness Confirm</name>
						<script>if ak.ai() then
  return
end
if ak.ProTrackingConfirmed then
  ak.ProTrackingConfirmed("whisperingmadness")
else
  affstrack.score.whisperingmadness = 100
  ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) trembles and [\w'\-]+ eyes widen in terror\. \w+ looks around \w+ as if searching for something that isn\'t there\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Whisper Focused</name>
						<script>if ak.ai() then return end
local aff = matches[3]
OppGainedAff(aff)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You sense that (\w+) has been struck down with (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>WhisperFail</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   for i=1, #affstrack.whisperlist do
    if affstrack.score[affstrack.whisperlist[i]] &gt; 0 then
      if ak.thoughtIhad then 
        ak.thoughtIhad(affstrack.whisperlist[i]) 
        return  
      end 
    end
   end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You pass your hand in front of (\w+)\. \w+ shakes \w+ head as if clearing \w+ mind\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Read Aura</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Read Aura</name>
							<script>if ak.ai() then return end
affstrack.score.blind = 100
affstrack.score.deaf = 100
ak.defs.rebounding = false
ak.defs.speed = false
ak.mounted = false
enableTrigger("Finale Read Aura")
enableTrigger("Readaura Defs")
disableTrigger("Lifegiver (def)")
disableTrigger("Wsys Tattoos")
ak.deleteFull()
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Studying the aura of ([\w'\-]+)\, you look for traces of anything that may be protecting it\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Finale Read Aura</name>
							<script>disableTrigger("Finale Read Aura")
disableTrigger("Readaura Defs")
enableTrigger("Wsys Tattoos")
enableTrigger("Lifegiver (def)")
cecho("&lt;yellow&gt;[&lt;white&gt;"..ak.occie.aura.physical.."|&lt;cyan&gt;"..ak.occie.aura.mental.."&lt;yellow&gt;]")
ak.occie.aura.physical = matches[3] + 0
ak.occie.aura.mental = matches[4] + 0
ak.scoreup(matches[2])
if (not ak.defs.speed) then cecho("\n-- &lt;red&gt;-&lt;white&gt;SPEED&lt;red&gt;-&lt;white&gt;SPEED&lt;red&gt;") end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You perceive that ([\w'\-]+) suffers from (\d+) physical afflictions and (\d+) mental afflictions\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Readaura Defs</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Cloak</name>
								<script>ak.deleteFull()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>She is surrounded by a cloak of protection.</string>
									<string>He is surrounded by a cloak of protection.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Blind</name>
								<script>affstrack.score.blind = 0
ak.deleteFull()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>She is blind.</string>
									<string>He is blind.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Deaf</name>
								<script>affstrack.score.deaf = 0
ak.deleteFull()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>She is deaf.</string>
									<string>He is deaf.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Speed</name>
								<script>ak.deleteFull()
ak.defs.speed = true
      if not SpeedTimer then
         SpeedTimer = tempTimer(4,[[
                ak.defs.speed = true
                SpeedTimer = false 
                ak.scoreup(target) 
                ]])
      end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Her sense of time is heightened, and her reactions are speeded.</string>
									<string>His sense of time is heightened, and his reactions are speeded.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Mounted</name>
								<script>ak.mounted = true
ak.deleteFull()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^He is riding .*\.$</string>
									<string>^She is riding .*\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Rebounding</name>
								<script>ak.defs.rebounding = true
ak.deleteFull()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>She is protected from hand-held weapons with an aura of rebounding.</string>
									<string>He is protected from hand-held weapons with an aura of rebounding.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Parry Location</name>
								<script>ak.deleteFull()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^He will attempt to parry attacks to his (.+)\.$</string>
									<string>^She will attempt to parry attacks to her (.+)\.$</string>
									<string>^He will attempt to throw those who attack his (.+)\.$</string>
									<string>^She will attempt to throw those who attack her (.+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ignore</name>
								<script>ak.deleteFull()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>She is focussing on quelling her bleeding more efficiently.</string>
									<string>She has a will of iron.</string>
									<string>He has a will of iron.</string>
									<string>He is enhancing his precision through the power of Terminus.</string>
									<string>She is enhancing her precision through the power of Terminus.</string>
									<string>He is enhancing his durability against denizens.</string>
									<string>She is enhancing her durability against denizens.</string>
									<string>Concealed by a shifting veil of shadow.</string>
									<string>You are masking your egress.</string>
									<string>^He has a small critical bonus lasting another .+\.$</string>
									<string>^She has a small critical bonus lasting another .+\.$</string>
									<string>Serpentine scales protect his body.</string>
									<string>Serpentine scales protect her body.</string>
									<string>He is lipreading to overcome deafness.</string>
									<string>She is lipreading to overcome deafness.</string>
									<string>He is paced for bursts of exertion.</string>
									<string>She is paced for bursts of exertion.</string>
									<string>He is able to detect wormholes due to possessing the second sight.</string>
									<string>She is able to detect wormholes due to possessing the second sight.</string>
									<string>He is resonating with the sun's energy.</string>
									<string>She is resonating with the sun's energy.</string>
									<string>He is favoured by .*\.$</string>
									<string>She is favoured by .*\.$</string>
									<string>His skin is toughened.</string>
									<string>Her skin is toughened.</string>
									<string>He is alert to incoming projectiles.</string>
									<string>She is alert to incoming projectiles.</string>
									<string>He has cast a mindnet over the local area.</string>
									<string>She has cast a mindnet over the local area.</string>
									<string>He is deep within the Shin trance.</string>
									<string>She is deep within the Shin trance.</string>
									<string>He is maintaining consciousness at all times.</string>
									<string>She is maintaining consciousness at all times.</string>
									<string>He is seeing the world around him with greater clarity of vision.</string>
									<string>She is seeing the world around him with greater clarity of vision.</string>
									<string>He is diverting excess Shin energy into regeneration.</string>
									<string>She is diverting excess Shin energy into regeneration.</string>
									<string>He is using his superior constitution to prevent nausea.</string>
									<string>She is using his superior constitution to prevent nausea.</string>
									<string>He has softened the focus of his eyes.</string>
									<string>She has softened the focus of her eyes.</string>
									<string>His hands are gripping his wielded items tightly.</string>
									<string>Her hands are gripping her wielded items tightly.</string>
									<string>You are attempting to deflect arrows toward less vital areas.</string>
									<string>He has earned the blessing of the gods.</string>
									<string>She has earned the blessing of the gods.</string>
									<string>He is concentrating on maintaining control over his faculties.</string>
									<string>She is concentrating on maintaining control over his faculties.</string>
									<string>He has augmented his own body for enhanced defence.</string>
									<string>She has augmented his own body for enhanced defence.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ignore</name>
								<script>ak.deleteFull()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>She has the following defences:</string>
									<string>He has the following defences:</string>
									<string>Her wounds are being staunched by the moss tattoo.</string>
									<string>His wounds are being staunched by the moss tattoo.</string>
									<string>Mentally bolstered by the power of the megalith.</string>
									<string>The endurance of the great ox flows through you.</string>
									<string>She is feeling extremely energetic.</string>
									<string>He is feeling extremely energetic.</string>
									<string>She is walking on a small cushion of air.</string>
									<string>He is walking on a small cushion of air.</string>
									<string>Her senses are magically heightened.</string>
									<string>His senses are magically heightened.</string>
									<string>She possess the sight of the third eye.</string>
									<string>He possess the sight of the third eye.</string>
									<string>She is tempered against fire damage.</string>
									<string>He is tempered against fire damage.</string>
									<string>He is holding his breath.</string>
									<string>She is holding her breath.</string>
									<string>^He is protected by \d+ defences\.$</string>
									<string>^She is protected by \d+ defences\.$</string>
									<string>He is extremely heavy and difficult to move.</string>
									<string>She is extremely heavy and difficult to move.</string>
									<string>Benefitting from the stolen life aura of your fallen foes.</string>
									<string>Her resistance to damage by poison has been increased.</string>
									<string>His resistance to damage by poison has been increased.</string>
									<string>Her mind has been attuned to the realm of Death.</string>
									<string>His mind has been attuned to the realm of Death.</string>
									<string>He has enhanced his vision to be able to see traces of lifeforce.</string>
									<string>She has enhanced her vision to be able to see traces of lifeforce.</string>
									<string>A curseward has been established about his person.</string>
									<string>A curseward has been established about her person.</string>
									<string>She is enchanted against magic damage.</string>
									<string>He is enchanted against magic damage.</string>
									<string>He is enchanted against cold damage.</string>
									<string>She is enchanted against cold damage.</string>
									<string>She is enchanted against electric damage.</string>
									<string>He is enchanted against electric damage.</string>
									<string>She is protected from the fangs of serpents.</string>
									<string>He is protected from the fangs of serpents.</string>
									<string>He has insomnia, and cannot easily go to sleep.</string>
									<string>She has insomnia, and cannot easily go to sleep.</string>
									<string>He is surrounded by draconic armour.</string>
									<string>She is surrounded by draconic armour.</string>
									<string>She is coated in an insulating unguent.</string>
									<string>He is coated in an insulating unguent.</string>
									<string>She has summoned her draconic breath weapon.</string>
									<string>He has summoned his draconic breath weapon.</string>
									<string>You will not go quietly into death.</string>
									<string>His mind is racing with enhanced speed.</string>
									<string>Her mind is racing with enhanced speed.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ignore</name>
								<script>ak.deleteFull()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^He is benefitting from a \d+\% bonus to experience gain\.$</string>
									<string>^She is benefitting from a \d+\% bonus to experience gain\.$</string>
									<string>She is enchanted against fire damage.</string>
									<string>He is enchanted against fire damage.</string>
									<string>You walk with the grace of the relic Lifegiver.</string>
									<string>Illuminated by the light of the moon.</string>
									<string>The vitality of the boar is energising you.</string>
									<string>She is feeling quite selfish.</string>
									<string>He is feeling quite selfish.</string>
									<string>Her body is weathering the storm of life a little better.</string>
									<string>His body is weathering the storm of life a little better.</string>
									<string>She is resisting magical damage.</string>
									<string>He is resisting magical damage.</string>
									<string>He is walking with the grace of the stars.</string>
									<string>She is walking with the grace of the stars.</string>
									<string>His vision is heightened to see in the dark.</string>
									<string>Her vision is heightened to see in the dark.</string>
									<string>His actions are cloaked in secrecy.</string>
									<string>Her actions are cloaked in secrecy.</string>
									<string>He is acknowledged by Jy'Barrak Golgotha, Emperor of Chaos.</string>
									<string>She is acknowledged by Jy'Barrak Golgotha, Emperor of Chaos.</string>
									<string>You are able to scout passed obstructions.</string>
									<string>His skin is hard and tough like the bark of an oak tree.</string>
									<string>Her skin is hard and tough like the bark of an oak tree.</string>
									<string>He is concentrating on clotting his wounds.</string>
									<string>She is concentrating on clotting her wounds.</string>
									<string>He has used great guile to conceal himself.</string>
									<string>She has used great guile to conceal herself.</string>
									<string>He is able to navigate forests more easily.</string>
									<string>She is able to navigate forests more easily.</string>
									<string>A jaguar spirit co-habits your body.</string>
									<string>He will call upon his fortitude in need.</string>
									<string>She will call upon her fortitude in need.</string>
									<string>His senses are attuned to nearby movement.</string>
									<string>Her senses are attuned to nearby movement.</string>
									<string>The devilmark is upon his breast.</string>
									<string>The devilmark is upon her breast.</string>
									<string>He is aware of movement in the skies.</string>
									<string>She is aware of movement in the skies.</string>
									<string>He is aware of movement on the ground.</string>
									<string>She is aware of movement on the ground.</string>
									<string>He is watching the trees or rigging above for signs of movement.</string>
									<string>She is watching the trees or rigging above for signs of movement.</string>
									<string>He has distorted his own aura.</string>
									<string>She has distorted her own aura.</string>
									<string>The spirit of a Chaos Lord lies dormant in his soul.</string>
									<string>The spirit of a Chaos Lord lies dormant in her soul.</string>
									<string>He has accepted a blessing for aid in times of need.</string>
									<string>She has accepted a blessing for aid in times of need.</string>
									<string>He is focussing on quelling his bleeding more efficiently.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ignore</name>
								<script>ak.deleteFull()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>Travelling the world more quickly due to time dilation.</string>
									<string>He is highfavoured by </string>
									<string>She is highfavoured by </string>
									<string>He is performing retaliatory strikes against his attackers.</string>
									<string>She is performing retaliatory strikes against her attackers.</string>
									<string>^He has engaged ([\w'\-]+)\.$</string>
									<string>^She has engaged ([\w'\-]+)\.$</string>
									<string>He is protected from the creation of physical images of himself.</string>
									<string>She is protected from the creation of physical images of herself.</string>
									<string>He is protected from damage by a tune of safety.</string>
									<string>She is protected from damage by a tune of safety.</string>
									<string>She is vigilantly watching for potential danger.</string>
									<string>He is vigilantly watching for potential danger.</string>
									<string>She is protected by the bell tattoo.</string>
									<string>He is protected by the bell tattoo.</string>
									<string>She has augmented her own body for enhanced defence.</string>
									<string>He has augmented his own body for enhanced defence.</string>
									<string>He is poised to glide across the surface of water.</string>
									<string>She is poised to glide across the surface of water.</string>
									<string>He has a great affinity with his spirit form.</string>
									<string>She has a great affinity with his spirit form.</string>
									<string>He is bonded to his spirit totem.</string>
									<string>She is bonded to his spirit totem.</string>
									<string>Diamond-hard skin protects her.</string>
									<string>Diamond-hard skin protects him</string>
									<string>Magically supple granite coats her body.</string>
									<string>Magically supple granite coats his body.</string>
									<string>Her water weird allows her to walk on water.</string>
									<string>His water weird allows him to walk on water.</string>
									<string>He is attuned to local telepathic interference.</string>
									<string>She is attuned to local telepathic interference.</string>
									<string>He is concentrating on maintaining distance from the dreamworld.</string>
									<string>She is concentrating on maintaining distance from the dreamworld.</string>
									<string>He is utilising hypersight.</string>
									<string>She is utilising hypersight.</string>
									<string>He is concentrating on mastery of bladecraft.</string>
									<string>She is concentrating on mastery of bladecraft.</string>
									<string>^He has a critical hit bonus lasting \d+ hour and \d+ minutes\.$</string>
									<string>^She has a critical hit bonus lasting \d+ hour and \d+ minutes\.$</string>
									<string>^He is truefavoured by [\w'\-]+ for over \d+ Achaean month \(which is about \d+ hours\)\.$</string>
									<string>^She is truefavoured by [\w'\-]+ for over \d+ Achaean month \(which is about \d+ hours\)\.$</string>
									<string>^([\w'\-]+) is protected by the power of a [\w'\-]+ Spiritshield\.$</string>
									<string>^[\w'\-]+ is regenerating [\w'\-]+ at an increased rate\.$</string>
									<string>^[\w'\-]+ limbs are suffused with divinely-inspired strength\.$</string>
									<string>^[\w'\-]+ is using [\w'\-]+ superior constitution to prevent nausea\.$</string>
									<string>^[\w'\-]+ is regenerating lost health through the power of Kaido\.$</string>
									<string>^[\w'\-]+ is cloaking [\w'\-]+ attempts at establishing a mindlock\.$</string>
									<string>^[\w'\-]+ is utilising the trance to store Kai energy\.$</string>
									<string>^[\w'\-]+ has boosted the power of [\w'\-]+ Kai Trance\.$</string>
									<string>^[\w'\-]+ has tentacles flailing from [\w'\-]+ body\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>0</integer>
									<integer>0</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Ignore</name>
								<script>ak.deleteFull()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^[\w'\-]+ is bouncing around acrobatically\.$</string>
									<string>A songbird is perched upon his shoulder.</string>
									<string>A songbird is perched upon her shoulder.</string>
									<string>He has sworn vengeance upon those who would slay him.</string>
									<string>She has sworn vengeance upon those who would slay her.</string>
									<string>He is bathed in the glorious protection of decaying flesh.</string>
									<string>She is bathed in the glorious protection of decaying flesh.</string>
									<string>He is enhancing his ocular prowess.</string>
									<string>She is enhancing her ocular prowess.</string>
									<string>^She has a small [\w'\-]+ bonus lasting another \d+ days\, \d+ hours and \d+ minutes\.$</string>
									<string>^He has a small [\w'\-]+ bonus lasting another \d+ days\, \d+ hours and \d+ minutes\.$</string>
									<string>^He has been granted a bonus to [\w'\-]+ regeneration\.$</string>
									<string>^She has been granted a bonus to [\w'\-]+ regeneration\.$</string>
									<string>He will lose less experience in the event of death.</string>
									<string>She will lose less experience in the event of death.</string>
									<string>He has been granted the ability to levitate above the ground.</string>
									<string>She has been granted the ability to levitate above the ground.</string>
									<string>He has been granted the boon of travelling to mutual allies.</string>
									<string>She has been granted the boon of travelling to mutual allies.</string>
									<string>The vitality of the boar is energising him.</string>
									<string>The vitality of the boar is energising her.</string>
									<string>^(Fae|He|She) is benefitting from a \d+\% bonus to critical hits\.$</string>
									<string>^(Fae|He|She) is blocking the exit [\w'\-]+\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>1</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>3</integer>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Bm Stance</name>
								<script>ak.limbs.blademaster.stance[target] = matches[2]:title()
ak.deleteFull()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^He is in the ([\w'\-]+) stance\.$</string>
									<string>^She is in the ([\w'\-]+) stance\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Shielded</name>
								<script>ak.defs.shield = true
ak.deleteFull()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>He is surrounded by a nearly invisible magical shield.</string>
									<string>She is surrounded by a nearly invisible magical shield.</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>3</integer>
									<integer>3</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Parry Initializer</name>
								<script>ak.deleteFull()</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^[\w'\-]+ is aiming [\w'\-]+ attacks to the (.*)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Domination</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Gremlin Shield</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   ak.defs.shield = false
end
ak.scoreup(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) has no shield for your gremlin to shatter, occultist\.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bloodleech</name>
						<script>if ak.ai() then return end
local aff = "haemophilia"
OppGainedAff(aff)
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You command your bloodleech to corrupt the blood of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Firelord</name>
						<script>if ak.ai() then return end
affstrack.score.recklessness = affstrack.score.asthma
affstrack.score.dementia = affstrack.score.paralysis
affstrack.score.stupidity = affstrack.score.recklessness
affstrack.score.claustrophobia = affstrack.score.haemophilia
affstrack.score.shyness = affstrack.score.clumsiness
affstrack.score.agoraphobia = affstrack.score.healthleech
affstrack.score.paranoia = affstrack.score.sensitivity
affstrack.score.confusion = affstrack.score.darkshade
affstrack.score.asthma = 0
affstrack.score.paralysis = 0
affstrack.score.recklessness = 0
affstrack.score.haemophilia = 0
affstrack.score.clumsiness = 0
affstrack.score.healthleech = 0
affstrack.score.sensitivity = 0
affstrack.score.darkshade = 0
ak.resetbacktrack()
ak.scoreup(matches[2])

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You command your firelord to bring down a portion of the power of Pyradius against ([\w'\-]+)\.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Ba-Humbug</name>
						<script>if ak.ai() then return end
local aff = "addiction"
OppGainedAff(aff)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You command your humbug to instill a ravenous hunger in [\w'\-]+\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Storm(Danaes)</name>
						<script>if ak.ai() then return end
OppGainedAff("vertigo")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You command your chaos storm to bring down the curse of vertigo upon [\w'\-]+\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Sycophant(Rixil)</name>
						<script>if ak.ai() then return end
OppGainedAff("rixil")
tempTimer(30,[[affstrack.score.rixil = 0;ak.scoreup(]]..matches[2]..[[)]])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You command your sycophant to weaken the mind of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Cadmus(Bubonis)</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	OppGainedAff("asthma")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A bubonis reaches out and strokes the side of (\w+)\'s face\, and boils form and rupture in an instant as \w+ begins hacking up black fluid\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Slime</name>
						<script>if ak.ai() then return end
if IsTargetted(multimatches[2][2]) then
   OppGainedAff("slime")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>1</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You command your slime to envelop</string>
							<string>^You command your slime to envelop ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>New Line</name>
							<script>if string.find(matches[1],"You command your slime") then
  return
elseif string.find(matches[1],"mouth") or string.find(matches[1],"paralysis") then
  if ak.HandleSlime then
    ak.HandleSlime(true)
  end
else
  if ak.HandleSlime then
    ak.HandleSlime(false)
  end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^.+$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Worm(Palpatar)</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	OppGainedAff("worm")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You command your worm to infest (\w+) with maggots\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Chimera Deaf(Buul)</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	affstrack.score.deaf = 0
  ak.scoreup(target)
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A chimera throws forward all three of its heads and roars at (\w+), but \w+ seems completely unphased\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Worm Tick</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	OppGainedAff("healthleech")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Many somethings writhe beneath the skin of (\w+)\, and the sickening sound of chewing can be heard\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Gremlin Periodic</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	OppGainedAff("dizziness")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The gremlin races around and between the legs of (\w+)\, \w+ eyes tracking it as \w+ sways unsteadily\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Worm Periodic</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	OppGainedAff("nausea")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The worm burrowing into (\w+) writhes and undulates\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Paladin Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Ablaze</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
  ak.flameon("additive")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^.+ grows warm in your hands as fire flares down its length to sear (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Flare</name>
					<script>local aff = "darkshade"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^At your command a beam of radiance strikes down from on high\, smiting the heretic (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Tenderskin</name>
					<script>local aff = "tenderskin"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You beckon forth the cleansing fire\, and flames burst into being to scour away (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Hellsight</name>
					<script>local aff = "hellsight"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You stare intently at ([\w'\-]+), opening [\w'\-]+ mind to the unspeakable visions that spew from the bowels of hell\.$</string>
						<string>^(w+) claws at \w+ eyes, fingers scrabbling frantically.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Dazzle</name>
					<script>--confusion --dizziness
local aff = "confusion"
local aff2 = "dizziness"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
   OppGainedAff(aff2)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You direct a dazzling ray of divine light at ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Pariah Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Epitaph Advance</name>
					<script>local PariahConv = {
  ["hungering scarab"] = "scarab",
  ["skein"] = "skein",
  ["rotting nest"] = "nest",
  ["striking serpent"] = "serpent",
  ["balanced scales"] = "scales",
  ["savage bear"] = "bear",
  ["shining sun"] = "sun",
  ["leaping jackal"] = "jackal",
  ["striking scorpion"] = "scorpion",
  }
if not PariahConv[multimatches[2][2]] then return end
ak.pariah.epitaph = PariahConv[multimatches[2][2]]
ak.pariah.epitaphadd = false
enableTrigger("Epitaph Mid")
enableTrigger("Epitaph End")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Your knife moves in perfect harmony with your mind as you trace the image of</string>
						<string>^Your knife moves in perfect harmony with your mind as you trace the image of the (savage bear|shining sun|leaping jackal|hungering scarab|skein|rotting nest|striking scorpion|striking serpent|balanced scales) before (.+)\, the logograph (?:outlined in crimson fire|bursting into crimson fire as you complete your epitaph)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Epitaph Mid</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Serpent Instant</name>
						<script>if IsTargetted(matches[2]) then
  ak.pariah.epitaphadd = "serpent"
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^As the logograph becomes fully formed it lashes out at (\w+)\, ethereal fangs plunging into \w+ throat\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Serpent Heartbeats</name>
						<script>if IsTargetted(matches[2]) then
  ak.pariah.heartbeatit("paralysis")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^As the logograph becomes fully formed\, it leaps from air to (\w+)\, sinking into \w+ chest just over \w+ heart\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Nest Instant</name>
						<script>if IsTargetted(matches[2]) then
  ak.pariah.epitaphadd = "nest"
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) suddenly sways\, \w+ eyes drooping as \w+ sags\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Nest Heartbeats</name>
						<script>if IsTargetted(matches[2]) then
  ak.pariah.heartbeatit("weariness")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The logograph floats almost listlessly towards (\w+)\, sinking into \w+ and vanishing\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Scales Instant</name>
						<script>if IsTargetted(matches[2]) then
  ak.pariah.epitaphadd = "scales"
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^As the logograph becomes fully formed it suddenly shatters\, (\w+) staggering drunkenly backwards\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Scales Heartbeat</name>
						<script>if IsTargetted(matches[2]) then
  ak.pariah.heartbeatit("clumsiness")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^As the logograph becomes fully formed it suddenly shatters\, an expression of trepidation overcoming (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Scarab Instant</name>
						<script>if IsTargetted(matches[2]) then
  ak.pariah.epitaphadd = "scarab"
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Something undulates grotesquely within the stomach of (\w+)\, and a ravenous gleam enters \w+ eyes\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Scarab Heartbeats</name>
						<script>if IsTargetted(matches[2]) then
  ak.pariah.heartbeatit("addiction")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^An expression of mild nausea overcomes (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Sun Instant</name>
						<script>if IsTargetted(matches[2]) then
  ak.pariah.epitaphadd = "sun"
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^As the logograph becomes fully formed it burns with a terrible crimson light\, and (\w+) recoils back from its arcane brilliance\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Sun Heartbeats</name>
						<script>if IsTargetted(matches[2]) then
  ak.pariah.heartbeatit("epilepsy")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^As the logograph becomes fully formed it leaps from air to the brow of (\w+)\, burning with an ominous bloody light as it blazes there\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bear Instant</name>
						<script>if IsTargetted(matches[2]) then
  ak.pariah.epitaphadd = "bear"
  if affstrack.score.haemophilia == 100 then
    ak.bleeding = ak.bleeding + 100
  else
    ak.bleeding = ak.bleeding + 50
  end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Even as the logograph becomes fully formed it leaps from the air to (\w+)\, ephemeral claws plunging into \w+ chest\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bear Heartbeats</name>
						<script>if IsTargetted(matches[2]) then
  ak.pariah.heartbeatit("haemophilia")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Even as the logograph becomes fully formed it leaps from the air to (\w+)\, sinking into \w+ chest and vanishing\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Jackal Instant</name>
						<script>if IsTargetted(matches[2]) then
  ak.pariah.epitaphadd = "jackal"
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^As the logograph becomes fully formed it leaps for (\w+)\, ephemeral fangs closing about \w+ throat\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Jackal  Heartbeats</name>
						<script>if IsTargetted(matches[2]) then
  ak.pariah.heartbeatit("asthma")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^As the logograph becomes fully formed it leaps for (\w+)\, sinking into \w+ skin just below \w+ throat\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Scorpion Instant/Heartbeat</name>
						<script>if IsTargetted(matches[2]) then
  ak.pariah.epitaphadd = "scorpion"
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The logograph is still solidifying as it leaps from the air to (\w+)\, an insubstantial stinger rising and falling thrice in terrible succession before the logograph is gone\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Skein Instant</name>
						<script>if IsTargetted(matches[2]) then
  ak.pariah.epitaphadd = "skein"
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^As you complete the logograph you deliberately bring your knife slashing down\, severing it in twain and cursing (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Skein Heartbeats</name>
						<script>if IsTargetted(matches[2]) then
  ak.pariah.heartbeatit("impatience")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^As you complete the logograph you deliberately bring your knife slashing down\, severing it in twain and cursing the future of (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Epitaph End</name>
					<script>ak.pariah.logograph = tonumber(multimatches[2][2])
if ak.pariah.epitaphadd then 
  ak.pariah.parseEpitaph(ak.pariah.epitaphadd)
end
ak.scoreup(target)
disableTrigger("Epitaph Mid")
disableTrigger("Epitaph End")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Your epitaph now consists of</string>
						<string>^Your epitaph now consists of (\d+) logographs\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Heartbeats</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Serpent</name>
						<script>if IsTargetted(matches[2]) then
  ak.pariah.heartbeatadd("paralysis")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A bright red light shines from within the chest of (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bear</name>
						<script>if IsTargetted(matches[2]) then
  ak.pariah.heartbeatadd("haemophilia")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Ephemeral claws suddenly thrust from the chest of (\w+)\, their ghostly edges slicing and rending\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Nest</name>
						<script>if IsTargetted(matches[2]) then
  ak.pariah.heartbeatadd("weariness")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) suddenly sways\, \w+ eyes drooping as \w+ sags\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Scales</name>
						<script>if IsTargetted(matches[2]) then
  ak.pariah.heartbeatadd("clumsiness")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) staggers suddenly\, eyes rolling back in \w+ skull\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Scarab</name>
						<script>if IsTargetted(matches[2]) then
  ak.pariah.heartbeatadd("addiction")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Something writhes within the stomach of (\w+)\, \w+ face contorting in a strangely hungry expression\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Sun</name>
						<script>if IsTargetted(matches[2]) then
  ak.pariah.heartbeatadd("epilepsy")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The glowing logograph upon the brow of (\w+) suddenly explodes into searing red light\, winking out almost immediately\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Jackal</name>
						<script>if IsTargetted(matches[2]) then
  ak.pariah.heartbeatadd("asthma")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) coughs\, \w+ face starting to turn blue\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Skein</name>
						<script>if IsTargetted(matches[2]) then
  ak.pariah.heartbeatadd("impatience")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) gasps a great lungful of air\, \w+ face flushing with sudden colour\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Blood Fade</name>
					<script>ak.pariah.bladeblood = false</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^The last of (\w+)\'s blood has dried upon your ritual blade\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Crux Flux</name>
					<script>ak.pariah.bladeblood = matches[2]</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Your ritual blade grows warm in your hand as you strike out at (\w+)\, \w+ life\'s blood glistening upon the arcane bronze\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Ensorcell</name>
					<script>local aff = "ensorcell"
ak.pariah.bladeblood = matches[2]
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You sweep your blade in a circle above your head\, the point coming to rest pointed at (\w+)\. A fine crimson spray follows the arc of your blade\, and you know that your ensorcelment has born fruit\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Ensorcell End</name>
					<script>OppLostAff("ensorcell")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You sense that your ensorcelment of (\w+) has broken\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Current Flux</name>
					<script>ak.pariah.bladeblood = matches[2]</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^The blood of (\w+) glistens upon your ritual blade\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Logograph Fade</name>
					<script>ak.pariah.logograph = 0
ak.scoreup(target)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Your focus on chaining together traceries falters.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Swarm Sting</name>
					<script>if IsTargetted(matches[3]) then
  ak.pariah.weakness = nil
  OppGainedAff(matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You sense your (\w+) plague take hold of (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Swarm Burrow</name>
					<script>ak.pariah.swarmBurrow = matches[2]</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You direct your swarm to burrow into (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Virulence</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Slickness</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Foul slime drips from the pores of (w+)\, and \w+ blood drips with it\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Healthleech or darkshade</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A terrible rash begins to form on the skin of (\w+), the slime that drips from \w+ steaming\.$</string>
							<string>^As sweat rolls down the face of (\w+), \w+ seems to grow ever more diminished\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Weakness</name>
					<script>ak.pariah.weakness = matches[2]
ak.scoreup(target)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You sense the weakness in (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Weaken End</name>
					<script>ak.pariah.weakness = nil
ak.scoreup(target)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You sense that (\w+) is no longer exposed to your sorcery\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Burrow</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Pyramides Burrow</name>
						<script>ak.pariah.burrowed.pyramidesb = matches[2]
ak.scoreup(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A tide of writhing bodies boils up from the ground\, descending upon (\w+) and burrowing into \w+ flesh in a gnawing chittering mass\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Burrow End</name>
						<script>ak.pariah.burrowed.pyramidesb = false
ak.scoreup(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You sense that (\w+) has escaped your burrowing swarm\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Latency</name>
					<script>if IsTargetted(matches[2]) then
   OppGainedAff("latency")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) looks suddenly nauseous\, a ghostly pallor suffusing \w+ features\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Latency Fail</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w) looks nauseous for a moment\, but quickly recovers\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Transpose</name>
					<script>if IsTargetted(matches[3]) then
   OppGainedAff(matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You drip some (\w+) onto a leaf\-bladed ritual knife\, allowing it to mix with the blood of (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Priest Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Diagnose Triggers</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Disruption</name>
						<script>local aff = matches[2].."disrupt"
OppGainedAff(aff)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>disrupted by ([\w'\-]+) energy.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Impatience</name>
						<script>local aff = "impatience"
OppGainedAff(aff)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>impatient.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Justice</name>
						<script>local aff = "justice"
OppGainedAff(aff)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>surrounded by the aura of justice.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Recklessness</name>
						<script>local aff = "recklessness"
OppGainedAff(aff)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>reckless.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Confusion</name>
						<script>local aff = "confusion"
OppGainedAff(aff)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>confused.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dizziness</name>
						<script>local aff = "dizziness"
OppGainedAff(aff)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>overcome by dizziness.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Stupidity</name>
						<script>local aff = "stupidity"
OppGainedAff(aff)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>unnaturally stupid</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Nausea</name>
						<script>local aff = "nausea"
OppGainedAff(aff)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>violently ill</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Epilepsy</name>
						<script>local aff = "epilepsy"
OppGainedAff(aff)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>suffering from epilepsy.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Weariness</name>
						<script>local aff = "weariness"
OppGainedAff(aff)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>wearied in body.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Clumsiness</name>
						<script>local aff = "clumsiness"
OppGainedAff(aff)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>afflicted with clumsiness.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Paralysis</name>
						<script>local aff = "paralysis"
OppGainedAff(aff)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>paralysed.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Blind</name>
						<script>diagblind = true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>blind.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Deaf</name>
						<script>diagdeaf = true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>deaf.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Vertigo</name>
						<script>local aff = "vertigo"
OppGainedAff(aff)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>afraid of heights.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hallucination</name>
						<script>local aff = "hallucinations"
OppGainedAff(aff)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>hallucinating.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Priest Prompt</name>
						<script>disableTrigger("Diagnose Triggers")
if diagdeaf == false then
   local aff = "deaf"
   OppGainedAff(aff)
end
if diagblind == false then
   local aff = "blind"
   OppGainedAff(aff)
end
ak.scoreup(target)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string></string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>7</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Chasten</name>
					<script>local aff = matches[3]
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You direct a dark bolt of energy through your mace towards ([\w'\-]+)\. The curse of ([\w'\-]+) is brought down on to your victim\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Disrupt</name>
					<script>local aff = matches[2].."disrupt"
if IsTargetted(matches[3]) then
   OppGainedAff(aff)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You direct your ([\w'\-]+) channel to disrupt ([\w'\-]+)\.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Diagnosed! --This is safer to run on a toggle</name>
					<script>if IsTargetted(matches[2]) then
   for k,v in pairs(affstrack.score) do
      if v &gt; 1 then
         affstrack.score[k] = 0
      end
   end
   diagblind = false
   diagdeaf = false
   enableTrigger("Diagnose Triggers")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) is\:$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Sprit Wrack</name>
					<script>local aff = matches[3]
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Your angel informs you that it has struck down ([\w'\-]+) with ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Visions</name>
					<script>local aff = "hallucinations"
if IsTargetted(multimatches[2][2]) then
   OppGainedAff(aff)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You condemn</string>
						<string>^You condemn ([\w'\-]+) to see the fate of the enemies of creation\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Guilt</name>
					<script>local aff = "guilt"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^\"Know the pain which you have caused\,\" you proselytise to (\w+)\.$</string>
						<string>^\"And your guilt will be made plain\,\" you proselytise to (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Spiritburn</name>
					<script>local aff = "spiritburn"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^\"Return to ash\,\" you decree\, focusing your holy might upon (\w+)\.$</string>
						<string>^\"And you shall be naught but cinders\,\" you decree\, focusing your holy might upon (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Tenderskin</name>
					<script>local aff = "tenderskin"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^\"Burn\!\" you command (\w+)\, fire leaping forth to sear \w+.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Inquisition</name>
					<script>if not IsTargetted(matches[2]) then return end
if affstrack.score.spiritburn == 100 and affstrack.score.guilt == 100 then
   OppGainedAff("inquisition")
   inquisitiontimer = tempTimer(19, [[OppLostAff("inquisition")]])
end

</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You draw ([\w'\-]+) into your gaze, lowering your brow and glaring at \w+ with righteous fury</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Paranoia</name>
					<script>local aff = "paranoia"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You decree that (\w+) shall know the truth of darkness, and all that it may bring.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Hallucinations</name>
					<script>local aff = "hallucinations"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You decree that (\w+) shall see the truth of Chaos for the aberration that it is.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Masochism</name>
					<script>local aff = "masochism"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You decree that (\w+) shall see the horror of Evil, and be unable to look away.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>This gives ablaze and CURES spiritburn</name>
					<script>local aff = "aflame"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
   OppLostAff("spiritburn")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^"I deem you unfit for Creation!" you proclaim, pointing imperiously at (\w+)\.$</string>
						<string>^"And thus I deem you unfit for Creation!" you proclaim, pointing imperiously at (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Hellsight</name>
					<script>local aff = "hellsight"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You stare intently at ([\w'\-]+), opening [\w'\-]+ mind to the unspeakable visions that spew from the bowels of hell\.$</string>
						<string>^(w+) claws at \w+ eyes, fingers scrabbling frantically.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Dazzle</name>
					<script>--confusion --dizziness
local aff = "confusion"
local aff2 = "dizziness"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
   OppGainedAff(aff2)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You direct a dazzling ray of divine light at ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Psion Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Weaving</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Cleave</name>
						<script>if IsTargetted(matches[2]) then
   OppGainedAff("Prone")
   ak.defs.shield = false
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Your blow cleaves through the magical shield surrounding ([\w'\-]+)\, continuing on to drive \w+ from \w+ feet\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Cleave (miss)</name>
						<script>if IsTargetted(matches[2]) then
   ak.defs.shield = false
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your blow scythes through the air in front of ([\w'\-]+), missing entirely\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hamstring (prone)</name>
						<script>if IsTargetted(matches[3]) then
   OppGainedAff("Prone")
   local smashlimb = matches[2].."leg"
   if affstrack.score[smashlimb] &lt; 200 then
      affstrack.score[smashlimb] = 200
   end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>1</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You duck low, your blade slicing into the (left|right) leg of ([\w'\-]+)\.$</string>
							<string>^([\w'\-]+) stumbles, falling to the ground\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Entwine (standing)</name>
						<script>if IsTargetted(matches[2]) then
   OppGainedAff("Prone")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You lash out with a translucent lash, entangling it about the feet of ([\w'\-]+) and sending \w+ tumbling to the ground with a sharp tug\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Entwine (prone)</name>
						<script>if IsTargetted(matches[2]) then
   OppGainedAff("Prone")
   OppGainedAff("Entangled")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You lash out with a translucent lash, expertly wrapping it about the prone form of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Weaving</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Transcendence</name>
							<script>deleteLine()
ak.psion.transcend = tonumber(matches[2])
if sinister and sinister.gagging then return end
cecho("&lt;LightGoldenrod&gt;\n " ..matches[2].. "\% Transcendance\n")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Your body and mind continue to harmonise\: you are (\d+) percent of the way to full transcendence\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Transcendance fading</name>
							<script>deleteLine()
ak.psion.transcend = tonumber(matches[2])
if sinister and sinister.gagging then return end
cecho("&lt;LightGoldenrod&gt;\n " ..matches[2].. "\% Transcendance\n")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Your inaction causes the harmonisation of your body and mind to falter\: you are now only (\d+) percent of the way to transcendence\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Prepared</name>
							<script>ak.psion.prepared = matches[2]</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You prepare to alter future creations to possess the (\w+) modification\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Transcendence Full</name>
							<script>deleteLine()
ak.psion.transcend = 100
if sinister and sinister.gagging then return end
cecho("&lt;LightGoldenrod&gt;\nTranscended!\n")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You have achieved transcendence\: your body and mind operate as one\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Limbs</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Attack Clumsy</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Your blow strikes ([\w'\-]+) but is robbed of much of its impact by your faulty technique\.$</string>
								<string>^([\w'\-]+)\'s blow lands upon you but is robbed of much of its impact by ([\w'\-]+) flawed technique\.$</string>
								<string>^([\w'\-]+) lashes out with a clumsy blow at ([\w'\-]+)\, landing with far reduced force\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hamstring</name>
							<script>if IsTargetted(matches[3]) then
  local smashlimb = matches[2].."leg"
	ak.limbs.LimbHit(matches[3], "Me", "psion", smashlimb, "percent")
  if affstrack.score[smashlimb] &lt; 100 then
		OppGainedAff(smashlimb)
  end
	if IsTargetted(matches[3]) and affstrack.score.haemophilia &gt; 0 then 	
		local bleedr = ak.PsionBleed("hamstring")
		ak.bleeding = ak.bleeding + bleedr
		ak.scoreup(matches[3])
	end
end



      
-- LIMB HIT: leg</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You duck low, your blade slicing into the (left|right) leg of ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Backhand</name>
							<script>if IsTargetted(matches[2]) then
   OppGainedAff("Stupidity")
   OppGainedAff("Dizziness")
	 ak.limbs.LimbHit(matches[2], "Me", "psion", "head", "percent")	
end
if IsTargetted(matches[2]) and affstrack.score.haemophilia &gt; 0 then 	
	local bleedr = ak.PsionBleed("backhand")
	ak.bleeding = ak.bleeding + bleedr
	ak.scoreup(matches[2])
end
-- LIMB HIT: head
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You deliver a savage backhanded blow with a translucent mace to the face of ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Sever</name>
							<script>if IsTargetted(matches[3]) then
	 local smashlimb = matches[2].."arm"
   OppGainedAff("Clumsiness")
	 ak.limbs.LimbHit(matches[3], "Me", "psion", smashlimb, "percent")
end
if IsTargetted(matches[3]) and affstrack.score.haemophilia &gt; 0 then 	
	local bleedr = ak.PsionBleed("sever")
	ak.bleeding = ak.bleeding + bleedr
	ak.scoreup(matches[3])
end
-- LIMB HIT: arm
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^With a precise strike you sever the muscles in the (right|left) arm of ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Puncture</name>
							<script>if IsTargetted(matches[3]) then
	 local smashlimb = matches[2].."arm"
	 ak.limbs.LimbHit(matches[3], "Me", "psion", smashlimb, "percent")
   OppGainedAff("Weariness")
end
if IsTargetted(matches[3]) and affstrack.score.haemophilia &gt; 0 then 	
	local bleedr = ak.PsionBleed("puncture")
	ak.bleeding = ak.bleeding + bleedr
	ak.scoreup(matches[3])
end
-- LIMB HIT: arm
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^With a lightning-fast jab of your blade you puncture the cluster of nerves just below the (right|left) shoulder of ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Exsanguinate</name>
							<script>if IsTargetted(matches[2]) then
   OppGainedAff("Nausea")
	 if ak.bleeding &gt;= 150 then
	 	OppGainedAff("Anorexia")
	 end
	 ak.limbs.LimbHit(matches[2], "Me", "psion", "torso", "percent")
end
if IsTargetted(matches[2]) and affstrack.score.haemophilia &gt; 0 then 	
	local bleedr = ak.PsionBleed("exsanguinate")
	ak.bleeding = ak.bleeding + bleedr
	ak.scoreup(matches[2])
end
-- LIMB HIT: torso

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Stepping forward, you brutally drive a translucent sword into ([\w'\-]+)'s guts, ripping it free in a spray of crimson\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Deathblow</name>
							<script>if IsTargetted(matches[2]) then
   OppGainedAff("Asthma")
	 ak.limbs.LimbHit(matches[2], "Me", "psion", "head", "percent")
end
if IsTargetted(matches[2]) and affstrack.score.haemophilia &gt; 0 then 
	local bleedr = ak.PsionBleed("deathblow")
	if affstrack.score.prone == 100 then
		bleedr = ak.PsionBleed("deathblowprone")
	end
	ak.bleeding = ak.bleeding + bleedr
	ak.scoreup(matches[2])
end
-- LIMB HIT: head
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Striking like coiled lightning, your hand flashes out and lays open the throat of ([\w'\-]+) with a translucent dagger in a spray of crimson\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Overhand</name>
							<script>if IsTargetted(matches[2]) then
	 ak.limbs.LimbHit(matches[2], "Me", "psion", "head", "percent")
	 if affstrack.score.prone == 100 then 
	 		OppGainedAff("Impatience") 
	 else 
	    OppGainedAff("Stupidity")
	 end	 
	 if affstrack.score.head &gt; 0 then
	 		OppGainedAff("Impatience")
	 end
end
if IsTargetted(matches[2]) and affstrack.score.haemophilia &gt; 0 then 	
	local bleedr = ak.PsionBleed("overhand")
	ak.bleeding = ak.bleeding + bleedr
	ak.scoreup(matches[2])
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You bring a translucent mace around in a savage overhand strike, smashing it into the face of ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Unweave</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Unweave</name>
							<script>if IsTargetted(matches[2]) then
   local Uaff = matches[3]
   local unweave = "unweaving"..matches[3]
   ak.psion.unweaving[Uaff] = 1
	 OppGainedAff("Prone "..unweave)
   if Uaff == "mind" or Uaff == "body" then
    ak.psion.secondaryTick(unweave)
   end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You lash at ([\w'\-]+) with a translucent lash, directing the fundamental weave of \w+ (mind|body|spirit) to begin unwinding\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Unweave Stacks</name>
							<script>local Uaff = matches[3]
if IsTargetted(matches[2]) then
  if ak.psion.unweaving[Uaff] &lt; 3 then
      ak.psion.unweaving[Uaff] = 3
   end
   if ak.psion.unweaving[Uaff] &lt; 5 then
      ak.psion.unweaving[Uaff] = ak.psion.unweaving[Uaff] + 1
   end
   cecho("\n&lt;cyan&gt;Unweaving "..Uaff.." stacks at &lt;yellow&gt;"..ak.psion.unweaving[Uaff])
   local unweave = "unweaving"..Uaff
   if Uaff == "mind" or Uaff == "body" then
     OppGainedAdditive(unweave,100,500,300)
   else
     OppGainedAff(unweave)
   end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You detect fluctuations in the essence of ([\w'\-]+) as \w+ (mind|body|spirit) becomes critically close to unweaving utterly\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Invert</name>
							<script>if IsTargetted(matches[2]) then
  local un = affstrack.score["unweaving"..matches[3]] + 0
  local don = affstrack.score["unweaving"..matches[4]] + 0
  affstrack.score["unweaving"..matches[3]] = don+0
  affstrack.score["unweaving"..matches[4]] = un+0
  ak.scoreup(target)
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You pluck at the weave of (\w+), swapping the states of \w+ (\w+) and (\w+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Prepare</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Disruption</name>
							<script>if IsTargetted(matches[2]) then
   OppGainedAff("Paralysis")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Lightning explodes from your weapon as it smashes into ([\w'\-]+), \w+ body locking up in agony as it rips through \w+\.$</string>
								<string>^Lightning explodes from your blade as you hack into ([\w'\-]+), \w+ body locking up as the current rips through \w+\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Laceration</name>
							<script>if IsTargetted(matches[2]) then
   OppGainedAff("Haemophilia")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The spikes adorning your [\w'\-]+ tear bloody furrows in the flesh of ([\w'\-]+)\.$</string>
								<string>^Your blade tears into ([\w'\-]+), a spray of crimson exploding from the wound as your weapon strikes bone\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Dazzle</name>
							<script>if IsTargetted(matches[2]) then
   OppGainedAff("Clumsiness")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^As your weapon strikes ([\w'\-]+) a brilliant flash of light explodes forth\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Rattle</name>
							<script>if IsTargetted(matches[2]) then
   OppGainedAff("Epilepsy")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^As your weapon strikes ([\w'\-]+), power blasts outward in a concussive wave\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Vapours</name>
							<script>if IsTargetted(matches[2]) then
   OppGainedAff("Asthma")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^As your weapon strikes ([\w'\-]+) a wave of cloying vapours rolls over \w+\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Blast</name>
					<script>if ak.ai() then return end
aff = "mindravaged"
if IsTargetted(matches[2]) then
   OppGainedAff(aff)
end

</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Bringing your formidable mental facilities to bear against ([\w'\-]+), you summon up and hurl a terrible unfocused blast of psionic might to ravage (\w+) mind.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Lost Blasted</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) shakes (\w+) head, (\w+) dull eyes slightly less vacant\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Runewarden Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Propping</name>
					<script>if ak.ai() then return end
ak.pause = true 
ak.propped = true</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You strain to hold a tall totem pole in an upright position for your enemies to see.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Unpropped</name>
					<script>if ak.ai() then return end
ak.pause = false 
ak.propped = false</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You cease to prop up a tall totem pole.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Cold Rune</name>
					<script>if ak.ai() then return end
OppGainedAff("deepfreeze")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Cold blue flames wreathe your runeblade, emanating an icy, penetrating chill.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Othala Sketched</name>
					<script>ak.othala = true
tempTimer(8, [[ak.othala = false]])
enableTrigger("Othala fade")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>With a flourish, you finish sketching an othala rune.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Othala fade</name>
					<script>ak.othala = false
disableTrigger("Othala fade")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A rune resembling a mountain range fades from the ground.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Sleezy Nausea</name>
					<script>if ak.ai() then return end
OppGainedAff("nausea")
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^The sleizak rune flashes upon .+ as you channel energy into it\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Inguz</name>
					<script>if IsTargetted(matches[2]) then
	ak.twoh.ribs = ak.twoh.ribs + 1
	if ak.twoh.ribs &gt; 7 then ak.twoh.ribs = 7 end
	cecho("&lt;yellow&gt;ribs:&lt;cyan&gt; "..ak.twoh.ribs)
	ak.ribHit()
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Bones are broken by the might of inguz as .+ cleaves the flesh of (\w+).$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Sentinel Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Gouge</name>
					<script>if IsTargetted(matches[2]) then 
   OppGainedAff("weariness")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You savagely gouge into ([\w'\-]+) with (.*)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Gouge limb weariness</name>
					<script>if IsTargetted(matches[2]) then 
   OppGainedAff("weariness")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You savagely gouge the .+ of ([\w'\-]+) with .+\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>RiveStrike</name>
					<script>if IsTargetted(matches[2]) then 
   ak.defs.reRebounding = true
   ak.defs.shield = false
   ak.defs.rebounding = false
   weaponattack = weaponattack or {}
   enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
   enableTrigger("Confirmed Hit")  
   table.insert(weaponattack, ak.spear)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^The point of .* strikes the aura of rebounding surrounding ([\w'\-]+)\, and rapid cracks begin to spread outward from the point of impact\. Moments later\, the protection shatters\.$</string>
						<string>^Stepping forward\, you continue the motion of your initial thrust\, performing a second quick jab at ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Lacerate</name>
					<script>if IsTargetted(matches[2]) then
  weaponattack = weaponattack or {}
  enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
  enableTrigger("Confirmed Hit")  
  table.insert(weaponattack, ak.spear)
  OppGainedAff("haemophilia")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You viciously lacerate ([\w'\-]+) with .+\.$</string>
						<string>^You viciously lacerate the .+ of ([\w'\-]+) with .+\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Double Strike</name>
					<script>if IsTargetted(matches[2]) then
   if affstrack.score.impatience == 0 then 
      OppGainedAff("impatience")
   elseif affstrack.goldenscore &gt; 1 or affstrack.score.impatience == 100 then
      OppGainedAff("epilepsy")
   end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Turning with the motion of your strike\, you come back around and slam the haft of your weapon into the temple of ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>ensnare transfixed</name>
					<script>if IsTargetted(matches[2]) then 
   OppGainedAff("transfixed")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You expertly flourish a .* in front of the eyes of ([\w'\-]+)\, mesmerising \w+ with your skill\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Thrust Venom</name>
					<script>if IsTargetted(matches[2]) then
   weaponattack = weaponattack or {}
   enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
   enableTrigger("Confirmed Hit")  
   table.insert(weaponattack, ak.spear)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Stepping forward\, you continue the motion of your initial thrust\, performing a second quick jab at ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Petrified</name>
					<script>if IsTargetted(matches[2]) then 
   OppGainedAff("petrified")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) freezes suddenly\, [\w'\-]+ eyes locked in a state of frozen horror as [\w'\-]+ becomes stone\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>ensnare blinded</name>
					<script>if IsTargetted(matches[2]) then 
   OppGainedAff("blind")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You flourish a .* before the eyes of ([\w'\-]+)\, restoring \w+ blindness\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Petrify Wore Off</name>
					<script>if IsTargetted(matches[2]) then 
   OppLostAff("petrified")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) sucks in a gasp of air and begins to move normally once more\.$</string>
						<string>^You gaze into the eyes of ([\w'\-]+)\, projecting your implacable will\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>DoubleSlash Venoms</name>
					<script>if IsTargetted(matches[2]) then
   weaponattack = weaponattack or {}
   enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
   enableTrigger("Confirmed Hit")  
   table.insert(weaponattack, matches[3])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You lay open the flesh of ([\w'\-]+) with an expert lateral slice with (.*)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Doubleslash Venom Limb</name>
					<script>if IsTargetted(matches[3]) then
   weaponattack = weaponattack or {}
   enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
   enableTrigger("Confirmed Hit")  
   table.insert(weaponattack, matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You draw the blade of (.+) in an expert lateral slice across the \w+ of (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Parry Bypass'd</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   if ak.ProTrackingConfirmed then 
      ak.ProTrackingConfirmed("haemophilia") 
   else
      affstrack.score.haemophilia = 100
      ak.scoreup(matches[2])
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You strike through the weakened defences of (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Meta</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Basilisk gaze confusion</name>
						<script>OppGainedAff("confusion")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You gaze at ([\w'\-]+) with the eyes of the basilisk\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Trumpet fail</name>
						<script>if IsTargetted(matches[2]) then 
   OppLostAff("deaf")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You trumpet mightly at (\w+) but \w+ is unaffected\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Trumpet</name>
						<script>if IsTargetted(matches[2]) then 
   OppGainedAff("prone")
   if ak.track.flown then
      ak.track.flown = false
      OppGainedAff("disrupt")
   end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You raise your trunk into the air before (\w+) and trumpet mightily, knocking \w+ to the ground\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Woodlore</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Sentinel Pets</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Raven</name>
							<script>ak.animalsup = ak.animalsup or {}
table.insert(ak.animalsup, "raven")
ak.scoreup(target)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A thrilling sensation overcomes you as you concentrate on the image of a flying raven, soaring high in the clouds.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Butterfly</name>
							<script>ak.animalsup = ak.animalsup or {}
table.insert(ak.animalsup, "butterfly")
ak.scoreup(target)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You close your eyes and visualise a serene glade full of fluttering butterflies, yearning for the companionship of the delicate creatures.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Fox</name>
							<script>ak.animalsup = ak.animalsup or {}
table.insert(ak.animalsup, "fox")
ak.scoreup(target)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You pause and concentrate on the image of a sly fox, sending your thoughts into the forest around you.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Wolf</name>
							<script>ak.animalsup = ak.animalsup or {}
table.insert(ak.animalsup, "wolf")
ak.scoreup(target)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The call of the hunt overtakes you for a moment as you call the image of a wolf to your mind.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Badger</name>
							<script>ak.animalsup = ak.animalsup or {}
table.insert(ak.animalsup, "badger")
ak.scoreup(target)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>A momentary feeling of annoyance takes hold of you as you picture the image of a badger.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Badger(Addiction)</name>
							<script>if IsTargetted(matches[2]) then 
   OppGainedAff("addiction")
end
ak.animalsup = ak.animalsup or {}
local animaltoremove = "badger"
if table.contains(ak.animalsup, animaltoremove) then
   for i = 1, #ak.animalsup do
      if ak.animalsup[i] == animaltoremove then
         table.remove(ak.animalsup,i)
      end
   end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A grumpy badger carves great gouges in the flesh of ([\w'\-]+) with its claws\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Butterfly Blind Strip</name>
							<script>if IsTargetted(matches[2]) then 
   OppGainedAff("blind")
end
ak.animalsup = ak.animalsup or {}
local animaltoremove = "butterfly"
if table.contains(ak.animalsup, animaltoremove) then
   for i = 1, #ak.animalsup do
      if ak.animalsup[i] == animaltoremove then
         table.remove(ak.animalsup,i)
      end
   end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A gossamer butterfly goes into a frenzy of motion in front of the eyes of ([\w'\-]+)\, and [\w'\-]+ blinks rapidly\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Butterfly Dizziness</name>
							<script>if IsTargetted(matches[2]) then 
   OppGainedAff("dizziness")
end
ak.animalsup = ak.animalsup or {}
local animaltoremove = "butterfly"
if table.contains(ak.animalsup, animaltoremove) then
   for i = 1, #ak.animalsup do
      if ak.animalsup[i] == animaltoremove then
         table.remove(ak.animalsup,i)
      end
   end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A gossamer butterfly goes into a frenzy of motion in front of the eyes of ([\w'\-]+)\, and [\w'\-]+ sways unsteadily\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Fox HealthLeech</name>
							<script>if IsTargetted(matches[2]) then 
   OppGainedAff("healthleech")
end
ak.animalsup = ak.animalsup or {}
local animaltoremove = "fox"
if table.contains(ak.animalsup, animaltoremove) then
   for i = 1, #ak.animalsup do
      if ak.animalsup[i] == animaltoremove then
         table.remove(ak.animalsup,i)
      end
   end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A cunning red fox leaps upon ([\w'\-]+)\, sinking its teeth into [\w'\-]+ skin\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Wolf Hallucinations</name>
							<script>if IsTargetted(matches[2]) then 
   OppGainedAff("hallucinations")
end
ak.animalsup = ak.animalsup or {}
local animaltoremove = "wolf"
if table.contains(ak.animalsup, animaltoremove) then
   for i = 1, #ak.animalsup do
      if ak.animalsup[i] == animaltoremove then
         table.remove(ak.animalsup,i)
      end
   end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A grey wolf lets out a baying howl at ([\w'\-]+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Butterfly Transfix</name>
							<script>if IsTargetted(matches[2]) then 
   OppGainedAff("transfixed")
end
ak.animalsup = ak.animalsup or {}
local animaltoremove = "butterfly"
if table.contains(ak.animalsup, animaltoremove) then
   for i = 1, #ak.animalsup do
      if ak.animalsup[i] == animaltoremove then
         table.remove(ak.animalsup,i)
      end
   end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A gossamer butterfly goes into a frenzy of movement before the eyes of ([\w'\-]+)\, mesmerising [\w'\-]+\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Raven</name>
							<script>if IsTargetted(matches[2]) then 
 if affstrack.score.deaf == 100 then
	OppGainedAff("prefarar")
 else 
	OppGainedAff("deaf")
 end
end
ak.animalsup = ak.animalsup or {}
local animaltoremove = "raven"
if table.contains(ak.animalsup, animaltoremove) then
   for i = 1, #ak.animalsup do
      if ak.animalsup[i] == animaltoremove then
         table.remove(ak.animalsup,i)
      end
   end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^An ebony raven dives down upon ([\w'\-]+)\, pecking at [\w'\-]+ face and eyes\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Passive attacks</name>
							<script></script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList />
							<regexCodePropertyList />
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Lemming passive</name>
								<script>if IsTargetted(matches[2]) then 
   OppGainedAff("vertigo")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The lemming races between the legs of (\w+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>Raven passive</name>
								<script>if IsTargetted(matches[2]) then 
   OppGainedAff("paranoia")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^The raven dives at (\w+) and pulls up short, making (.*) uneasy\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
							<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
								<name>butterfly</name>
								<script>if IsTargetted(matches[2]) then 
   OppGainedAff("blind")
end</script>
								<triggerType>0</triggerType>
								<conditonLineDelta>0</conditonLineDelta>
								<mStayOpen>0</mStayOpen>
								<mCommand></mCommand>
								<packageName></packageName>
								<mFgColor>#ff0000</mFgColor>
								<mBgColor>#ffff00</mBgColor>
								<mSoundFile></mSoundFile>
								<colorTriggerFgColor>#000000</colorTriggerFgColor>
								<colorTriggerBgColor>#000000</colorTriggerBgColor>
								<regexCodeList>
									<string>^A huge gossamer butterfly flutters wildly about ([\w'\-]+)\.$</string>
								</regexCodeList>
								<regexCodePropertyList>
									<integer>1</integer>
								</regexCodePropertyList>
							</Trigger>
						</TriggerGroup>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Butterfly Blind</name>
							<script>if IsTargetted(matches[2]) then 
   OppGainedAff("blind")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A gossamer butterfly goes into a frenzy of motion in front of the eyes of ([\w'\-]+)\, and [\w'\-]+ sways unsteadily\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>badger Asthma</name>
							<script>if IsTargetted(matches[2]) then 
   OppGainedAff("asthma")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A grumpy badger lunges at (\w+), claws raking across \w+ throat\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Serpent Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Double Stab</name>
					<script>if ak.ai() then return end
enableTrigger("Missed Dstab Removal")                --DO NOT CHANGE!
enableTrigger("Confirmed Dstab")                        --DO NOT CHANGE!
weaponattack = weaponattack or {}               
table.insert(weaponattack, ak.odirk)
--table.insert(weaponattack, ak.odirk)     --change</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You prick ([\w'\-]+) twice in rapid succession with your dirk.$</string>
						<string>^You quickly prick ([\w'\-]+) with your dirk\.$</string>
						<string>^Striking like a snake\, you prick ([\w'\-]+) a second time with your dirk\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Missed Dstab Removal</name>
					<script>if ak.ai() then return end
weaponattack = weaponattack or {}
if #weaponattack &gt; 0 then
   table.remove(weaponattack, #weaponattack)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) dodges nimbly out of the way\.$</string>
						<string>^([\w'\-]+) quickly jumps back, avoiding the attack\.$</string>
						<string>^([\w'\-]+) twists \w+ body out of harm's way\.$</string>
						<string>^A reflection of ([\w'\-]+) blinks out of existence.$</string>
						<string>^([\w'\-]+) parries the attack with a deft manoeuvre.$</string>
						<string>^([\w'\-]+) steps into the attack, grabs your arm, and throw</string>
						<string>^A chaos orb intercepts the attack against (\+) and renders it harmless\.$</string>
						<string>^([\w'\-]+) moves into your attack, knocking your blow aside before viciously countering with a strike to your head\.$</string>
						<string>^Cracks spider across the surface of the crimson shield surrounding ([\w'\-]+)\, before it abruptly winks out of existence\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Confirmed Dstab</name>
					<script>if ak.ai() then return end
cecho("&lt;cyan&gt;.")
hitrelay = {"1"}
currentvenoms = currentvenoms or {}
weaponattack = weaponattack or {}
if #weaponattack &gt; 0 then 
   for i = 1, #weaponattack do
      currentvenoms[weaponattack[i]] = currentvenoms[weaponattack[i]] or {1}
      table.insert(hitrelay, affstrack.venoms[currentvenoms[weaponattack[i]][1]])
      table.remove(currentvenoms[weaponattack[i]], 1)  
   end
end
if #hitrelay &gt; 1 then 
   if table.contains(hitrelay, "1") then table.remove(hitrelay, "1") end
   OppGainedAff(table.concat(hitrelay, " ")) 
end
weaponattack = nil
disableTrigger("Missed Dstab Removal")                --DO NOT CHANGE!
disableTrigger("Confirmed Dstab")  
deleteLine()
ak.showPrompt()
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string></string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>7</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Bite</name>
					<script>if ak.ai() then return end
OppGainedAff(matches[3])
ak.scoreup(matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You sink your fangs into ([\w'\-]+), injecting just the proper amount of ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Dirk Changeup</name>
					<script>if ak.ai() then return end
if string.findPattern(matches[2],"dirk") then
   ak.odirk = matches[2]
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You begin to wield (.*) in your (left|right) hand\.$</string>
						<string>^You start to wield (.*) in your (right|left) hand\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Thoths</name>
					<script>if ak.ai() then return end
ak.odirk = "Thoth's fang" </script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You start to wield Thoth's fang in your right hand.</string>
						<string>You start to wield Thoth's fang in your left hand.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Shaman Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Vodun</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Confusion</name>
						<script>if ak.ai() then return end
OppGainedAff("confusion")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You wave your hands quickly in front of the eyes of your doll of ([\w'\-]+).</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bound</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   affstrack.score.bound = 100
   ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You tie up a doll of ([\w'\-]+) with a piece of string.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Slow</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   affstrack.score.aeon = 100
   ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) seems to be moving in slow motion suddenly.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Imbibe</name>
						<script>if ak.ai() then return end
OppGainedAff(imbibedraw)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You laugh sadistically as you jab an envenomed pin into your doll of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Reckless</name>
						<script>if ak.ai() then return end
OppGainedAff("recklessness")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You whisper soothing words of false comfort to a doll of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dizzy</name>
						<script>if ak.ai() then return end
OppGainedAff("dizziness")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You spin a doll of ([\w'\-]+) rapidly in a circle\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Concussion</name>
						<script>if ak.ai() then return end
affstrack.score.head = 100
ak.scoreup(multimatches[2][2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You flick the temple of a doll of </string>
							<string>^You flick the temple of a doll of ([\w'\-]+)\, hard\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Cripple</name>
						<script>if ak.ai() then return end
ak.mounted = false
if IsTargetted(multimatches[2][2]) then
   aff = "leftleg rightleg rightarm leftarm prone"
   OppGainedAff(aff) 
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>With a prayer to the spirits, you break all the limbs on your doll of </string>
							<string>With a prayer to the spirits, you break all the limbs on your doll of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Speed Stripped</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   ak.defs.speed = false
   ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You curse your doll to move slowly and tardily\, and ([\w'\-]+)\'s speed defence is removed\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bleed</name>
						<script>ak.bleeding = ak.bleeding + 220
ak.scoreup(target)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You draw a sharp fingernail across the torso of the doll.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Curses</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Curse Add</name>
						<script>if ak.ai() then return end
if not IsTargetted(multimatches[2][2]) then return end
ak.bleedincrease = 40 --curse
local curse = multimatches[2][3]
if curse then
	 curse = curse:lower()
   if curse ~= "breach" and curse ~= "tzantza" and curse ~= "inflame" then
	 		if affstrack.score[curse] then
				OppGainedAff(curse)
			elseif curse == "peace" then 
         curse = "pacifism"
				 OppGainedAff(curse)  
      elseif curse == "paralyse" then 
         curse = "paralysis"
				 OppGainedAff(curse)  
      elseif curse == "plague" then
          curse = "voyria"
					OppGainedAff(curse)
      elseif curse == "clumsy" then
          curse = "clumsiness" 
					OppGainedAff(curse)
      elseif curse == "dizzy" then
          curse = "dizziness" 
					OppGainedAff(curse)
      elseif curse == "stupid" then
          curse = "stupidity" 
					OppGainedAff(curse)
      elseif curse == "vomiting" then
          curse = "nausea" 
					OppGainedAff(curse)
      elseif curse == "reckless" then
          curse = "recklessness"
					OppGainedAff(curse)
			elseif curse == "fear" then
          ak.tumbling = false
					ak.scoreup(multimatches[2][2])
			elseif curse == "bleed" then
			
			else
				cecho("Unknown Curse &lt;cyan&gt;"..curse) 
      end
   end
end
if ak.shaman and ak.shaman.pararedo and ak.shaman.pararedo == "init" then 
	ak.shaman.pararedo = true 
elseif ak.shaman and ak.shaman.pararedo then
	ak.shaman.pararedo = false	
end


</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You point an imperious finger at</string>
							<string>^You point an imperious finger at ([\w'\-]+)\, bringing the curse of ([\w'\-]+) down upon [\w'\-]+\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Jinx Gone</name>
						<script>if ak.ai() then return end
if not ak.shaman.jinx then 
  ak.scoreup(target)
  return 
end
ak.shaman.jinx = ak.shaman.jinx - 1
if ak.shaman.jinx == 0 then
  ak.shaman.jinx = false
end
ak.scoreup(target)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You have not built up enough malign power to unleash a jinx.</string>
							<string>Your malign power dissipates back to normal levels.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Jinx Charged</name>
						<script>if ak.ai() then return end
local addto = ak.shaman.jinx or 0
ak.shaman.jinx = addto + 1
ak.scoreup(target)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your malign power may be unleashed in the form of a jinx against your victim.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Jinx</name>
						<script>if ak.ai() then return end

if string.find(multimatches[3][1], "is protected from your") then
  return
end

local conversion = {
	["paralyse"] = "paralysis",
	["plague"] = "voyria",
	["clumsy"] = "clumsiness",
	["dizzy"] = "dizziness",
	["stupid"] = "stupidity",
	["vomiting"] = "nausea",
	["reckless"] = "recklessness",
	["nausea"] = "nausea",

}
ak.bleedincrease = 80
local setter = ""
ak.shaman.jinx = ak.shaman.jinx - 1
if ak.shaman.jinx == 0 then
  ak.shaman.jinx = false
end
if multimatches[1][2] ~= "breach" and multimatches[1][2] ~= "tzantza" then
	 if table.contains(conversion,multimatches[1][2]) then
	 	setter = setter.." "..conversion[multimatches[1][2]]
	 else
	 	setter = setter.." "..multimatches[1][2]
	 end
end
if multimatches[1][3] ~= "breach" and multimatches[1][3] ~= "tzantza" then
	 if table.contains(conversion,multimatches[1][3]) then
	 	setter = setter.." "..conversion[multimatches[1][3]]
	 else
	 	setter = setter.." "..multimatches[1][3]
	 end
end
if multimatches[1][2] == "tzantza" or multimatches[1][3] == "tzantza" then
	ak.tzantzajinxed = true
end
OppGainedAff(setter)



</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Summoning your malign power, you direct a twin assault of the curses ([\w'\-]+) and ([\w'\-]+) at ([\w'\-]+)\.$</string>
							<string>1</string>
							<string>^(.*)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>5</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>No affliction</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   local nohave = matches[3]
   if nohave == "paralyse" then nohave = "paralysis" end  
   if nohave == "plague" then nohave = "voyria" end
   if nohave == "clumsy" then nohave = "clumsiness" end
   if nohave == "dizzy" then nohave = "dizziness" end
   if nohave == "stupid" then nohave = "stupidity" end
   if ak.thoughtIhad then ak.thoughtIhad(nohave) else affstrack.score[nohave] = 0 end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>([\w'\-]+) does not suffer from ([\w'\-]+) \- you may not relapse it.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Coagulation</name>
						<script>if ak.ai() then return end
cecho("\n&lt;dodger_blue&gt;Coagulated!")
ak.shaman.coagulation = false
ak.bleeding = ak.bleeding - 140
if ak.bleeding &lt; 0 then
	ak.bleeding = 0 
end
if invoked~= nil then
   OppGainedAff(invoked)
end

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#00aaff</mFgColor>
						<mBgColor>#ffffff</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^With methodical ruthlessness you cast your hand at [\w'\-]+, a wash of cold causing [\w'\-]+ blood to evolve</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bloodlet</name>
						<script>if ak.ai() then return end
cecho("\n&lt;medium_violet_red&gt;Bloodlet!")
ak.shaman.bloodlet = false
if affstrack.score.haemophilia &gt; 0 then
	ak.bleeding = ak.bleeding + ak.bloodletbleed()
	echo(ak.bleeding)
end
OppGainedAff("haemophilia")
ak.dontremovehaemo = true
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ffffff</mFgColor>
						<mBgColor>#ff557f</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Lacerations appear upon ([\w'\-]+) form, as if slashed by an invisible blade\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Relapse CD</name>
						<script>if ak.ai() then return end
ak.shaman.relapse = true
ak.scoreup(target)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You may utilise spiritual energy to relapse afflictions once again\.$</string>
							<string>^A sinister sensation washes over you for the briefest instant, but quickly fades into little more</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bloodlet CD</name>
						<script>if ak.ai() then return end
ak.shaman.bloodlet = true
ak.scoreup(target)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You may let your victim's blood once again\.$</string>
							<string>The realisation that none can match you with the blade suddenly dawns upon you.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Coagulate CD</name>
						<script>if ak.ai() then return end
ak.shaman.coagulation = true
ak.scoreup(target)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You may channel spiritual energy to cause a coagulation once again.</string>
							<string>A clinical, ruthless presence overcomes you for an instant, before you reassert control.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bloodlet used</name>
						<script>if ak.ai() then return end
ak.shaman.bloodlet = false
ak.scoreup(target)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You may not let the blood of your victim again so soon\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Relapse used</name>
						<script>if ak.ai() then return end
ak.shaman.relapse = false
ak.scoreup(target)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#55aa00</mFgColor>
						<mBgColor>#ffffff</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You may not yet channel spiritual energy to cause a relapse again\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Inflamed</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffffff</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^[\w'\-]+ writhes in agony as steam begins rising from [\w'\-]+ skin\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Relapsing</name>
						<script>if ak.ai() then return end
cecho("&lt;LawnGreen&gt;\nRelapsed!")
ak.shaman.relapse = false
ak.shaman.Relapseaff = matches[2]
local currentrelapse = matches[2]
if ak.ProTrackingConfirmed then 
	ak.ProTrackingConfirmed(currentrelapse) 
end 

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#55aa00</mFgColor>
						<mBgColor>#ffffff</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You manipulate the ([\w'\-]+) affliction affecting ([\w'\-]+), altering it to relapse at a later time.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Relapsed</name>
						<script>ak.shaman.Relapseaff = "none"
OppGainedAff(matches[3])
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You sense the insidious power of Syvis strike down ([\w'\-]+) with ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Spiritlore</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Arius</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) and affstrack.score.deaf == 100 then
	EchoForMajorAff("PRONE")
	OppGainedAff("prone disrupt")
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A terrible cold fills your chest\, constricting your lungs\. Your mouth falls open and an unearthly\, terrible roar emanates forth at ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Sword &amp; Board Group</name>
				<script>--
--Everything that follows was originally written by Klendathu

--I have mildly modified portions of be more up to date with my current offense tracking system,
--while attempting to leave the majority of it in place so he has to do very little to maintain
--continued functionality.  If you are a using this section, I strongly encourage you to make sure
--to spend a few extra seconds and drop him a thank you.

--Thank you.
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName>sword_and_board</packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Trip</name>
					<script>if ak.ai() then return end
boardaffs = boardaffs or {}
local aff = "prone"
if IsTargetted(matches[2]) then
   table.insert(boardaffs, aff)
end
enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
enableTrigger("Confirmed Hit")                        --DO NOT CHANGE!</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You duck low and smash your shield into the knees of ([\w'\-]+), causing them to buckle underneath \w+\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Drive</name>
					<script>if ak.ai() then return end
boardaffs = boardaffs or {}
local aff = "asthma"
if IsTargetted(matches[2]) then
   table.insert(boardaffs, aff)
end
enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
enableTrigger("Confirmed Hit")                        --DO NOT CHANGE!</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Planting your feet\, you drive the edge of your shield with vicious precision into the throat of ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Smash Low</name>
					<script>if ak.ai() then return end
boardaffs = boardaffs or {}
local aff = "clumsiness"
if IsTargetted(matches[2]) then
   table.insert(boardaffs, aff)
end
enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
enableTrigger("Confirmed Hit")                        --DO NOT CHANGE!</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You smash the edge of .* into the kneecaps of ([\w'\-]+), causing \w+ to stumble\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Smash Mid</name>
					<script>if ak.ai() then return end
boardaffs = boardaffs or {}
local aff = "paralysis"
if IsTargetted(matches[2])then
   table.insert(boardaffs, aff)
end
enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
enableTrigger("Confirmed Hit")                        --DO NOT CHANGE!</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You quickly lunge to the side\, bringing your shield around to smash into the spine of ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Smash High (In Progress{Please Submit if You Complete}]</name>
					<script>if ak.ai() then return end
boardaffs = boardaffs or {}
if IsTargetted(matches[2]) then
   table.insert(boardaffs, "HIGH")
end
enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
enableTrigger("Confirmed Hit")                        --DO NOT CHANGE!</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You swing your shield around\, smashing the temple of ([\w'\-]+) with a backhanded blow\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Strike Low</name>
					<script>if ak.ai() then return end
affstrack.ferocity = 0
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#55aa7f</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You lunge downward, slamming the edge of .+ into the shins of ([\w'\-]+)\.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Strike Mid</name>
					<script>if ak.ai() then return end
boardaffs = boardaffs or {}
local aff = "sensitivity"
affstrack.ferocity = 0
if IsTargetted(matches[2]) then
   table.insert(boardaffs, aff)
end
enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
enableTrigger("Confirmed Hit")                        --DO NOT CHANGE!
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#55aa7f</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You draw .* back\, then lunge forward with a savage strike to the ribs of ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Strike High</name>
					<script>if ak.ai() then return end
affstrack.ferocity = 0
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#55aa7f</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You spin in a quick circle\, using the momentum to savagely strike the chin of ([\w'\-]+) with the edge of .*\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Ferocity</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Ferocity 1</name>
						<script>if ak.ai() then return end
affstrack.ferocity = 1</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You batter at your enemy's defences, seeking an opening.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Ferocity 2</name>
						<script>if ak.ai() then return end
affstrack.ferocity = 2</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The strength of your blows continues to rise as you hammer at your enemy.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Ferocity 3</name>
						<script>if ak.ai() then return end
affstrack.ferocity = 3</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The ferocity of battle drives you to yet greater heights.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Ferocity 4</name>
						<script>if ak.ai() then return end
affstrack.ferocity = 4</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#55aa00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The ferocity of your blows renders any defence useless against you.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Ferocity Decay 1</name>
						<script>if ak.ai() then return end
affstrack.ferocity = affstrack.ferocity or 0
affstrack.ferocity = affstrack.ferocity - 1
if affstrack.ferocity &lt; 0 then affstrack.ferocity = 0 end
ak.scoreup(target)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#00aa00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your ferocity decreases.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Ferocity Decay All</name>
						<script>if ak.ai() then return end
affstrack.ferocity = 0
ak.scoreup(target)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#55aa00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You have lost all of your gained ferocity.</string>
							<string>Your attacks lack sufficient ferocity to carry out such an attack.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Sylvan Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Static (paralysis)</name>
					<script>local aff = "paralysis"
if IsTargetted(matches[2]) then
  OppGainedAff(aff)
  if affstrack.overcharge == true then
    OppGainedAff("paralysis, focusextend")
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Channeling arcane power through your air and earth channels, you summon forth a burst of arcane static directed at ([\w'\-]+).$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Thunderclap (sensitivity)</name>
					<script>local aff = "sensitivity"
if IsTargetted(matches[2]) then
  OppGainedAff(aff)
  if affstrack.overcharge == true then
    OppGainedAff("paralysis, focusextend")
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Channeling large quantities of arcane power through your air channel, you direct a localised explosion of pure sound at ([\w'\-]+)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Flash (unblind)</name>
					<script>if IsTargetted(matches[2]) then
   OppGainedAff("blind")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Summoning forth power through your air and earth channels, you conjure forth a brilliant flash of light at ([\w'\-]+), who blinks rapidly.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Flash (transfix)</name>
					<script>if IsTargetted(matches[2]) then
   OppGainedAff("transfixed")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Summoning forth power through your air and earth channels, you conjure forth a brilliant flash of light at ([\w'\-]+), who freezes in place.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Razorwind (healthleech)</name>
					<script>if IsTargetted(matches[2]) then
	OppGainedAff("healthleech")
	if affstrack.overcharge == true then
		OppGainedAff("asthma")
	end
end

</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Tapping into your air channel, you summon forth a vicious wind to lacerate the body of ([\w'\-]+).$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Cyclone (dizziness)</name>
					<script>if IsTargetted(matches[2]) then
	OppGainedAff("dizziness")
	if affstrack.overcharge == true then
		OppGainedAff("asthma")
	end
end


</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Summoning forth energy that you have gathered, you conjure forth a terrible cyclone of wind, picking up ([\w'\-]+) and whipping \w+ about in a frenzy.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Cyclone (impatience)</name>
					<script>if IsTargetted(matches[2]) then
	affstrack.score.dizziness = 100
	OppGainedAff("impatience")
	if affstrack.overcharge == true then
		OppGainedAff("asthma")
	end
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Summoning forth energy that you have gathered, you conjure forth a terrible cyclone of wind, picking up the disorientated form of ([\w'\-]+) and whipping \w+ about in a frenzy, dashing \w+ against any available surfaces.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Hailstone (clumsiness)</name>
					<script>if IsTargetted(matches[2]) then
	OppGainedAff("clumsiness")
	if affstrack.overcharge == true then
		OppGainedAff("weariness")
	end
end

</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) stumbles clumsily as the blow lands.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Hailstone (epilepsy)</name>
					<script>if IsTargetted(matches[2]) then
	if affstrack.score.clumsiness &lt; 100 and affstrack.score.clumsiness &gt; 0 then
      if ak.ProTrackingConfirmed then 
         ak.ProTrackingConfirmed("clumsiness") 
      else 
         affstrack.score.clumsiness = 100
         ak.scoreup(matches[2])
      end
	end
	affstrack.score.clumsiness = 100
	OppGainedAff("epilepsy")
	if affstrack.overcharge == true then
		OppGainedAff("weariness")
	end
end

</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) begins to shake uncontrollably.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Hailstone (imaptience)</name>
					<script>if IsTargetted(matches[2]) then
	if affstrack.score.clumsiness &lt; 100 and affstrack.score.clumsiness &gt; 0 then
      if ak.ProTrackingConfirmed then 
         ak.ProTrackingConfirmed("clumsiness")
      else 
         affstrack.score.clumsiness = 100
         ak.scoreup(matches[2])
      end
	elseif affstrack.score.epilepsy &lt; 100 and affstrack.score.epilepsy &gt; 0 then
      if ak.ProTrackingConfirmed then 
         ak.ProTrackingConfirmed("epilepsy") 
      else 
         affstrack.score.epilepsy = 100
         ak.scoreup(matches[2])
      end
	end
	OppGainedAff("impatience")
	if affstrack.overcharge == true then
		OppGainedAff("weariness")
	end
end

</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^A puzzled expression crosses the face of ([\w'\-]+).$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Shear (break shield)</name>
					<script>if IsTargetted(matches[2]) then
   ak.defs.shield = false
end
ak.scoreup(matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You summon a blade of condensed air and shear cleanly through the protective shield surrounding (.*).$</string>
						<string>^You summon a blade of wind to shear at the magical shield of (.*), but find no such barrier.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Bolt (blackout)</name>
					<script>if IsTargetted(matches[2]) then
   OppGainedAff("blackout")
   tempTimer(4,[[affstrack.score.blackout = 0;ak.scoreup(]]..matches[2]..[[)]])
	if affstrack.overcharge == true then
		OppGainedAff("paralysis")
	end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Raising your hands above your head, you channel power through your earth and air channels. Focusing upon (.*), you direct your arcane might in a focused burst, bringing down lightning to smite \w+\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Sylvan Rend Venoms</name>
					<script>enableTrigger("Missed Single Removal")                --DO NOT CHANGE!
enableTrigger("Confirmed Hit")                        --DO NOT CHANGE!
weaponattack = weaponattack or {}
table.insert(weaponattack, "the thorny vines covering your arms")
if affstrack.crushedherb then
   currentvenoms = currentvenoms or {}
   currentvenoms["the thorny vines covering your arms"] = currentvenoms["the thorny vines covering your arms"] or {}
   table.insert(currentvenoms["the thorny vines covering your arms"], affstrack.crushedherb)
   table.insert(weaponattack, "the thorny vines covering your arms")
end
--display(weaponattack)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You command the razor-edged thorny ([\w'\-]+) around you to lash out and rend the (right leg|left leg|right arm|left arm|head|torso) of .*\.$</string>
						<string>^You command the razor\-edged thorny (\w+) around you to lash out and rend the flesh of (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Overcharge Tracker</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Not overcharged</name>
						<script>disableTrigger("Not overcharged")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string></string>
							<string>^Channeling arcane power through your air and earth channels, you summon forth a burst of arcane static directed at ([\w'\-]+).$</string>
							<string>^Channeling large quantities of arcane power through your air channel, you direct a localised explosion of pure sound at ([\w'\-]+).$</string>
							<string>^Summoning forth power through your air and earth channels, you conjure forth a brilliant flash of light at ([\w'\-]+), who blinks rapidly.$</string>
							<string>^Summoning forth power through your air and earth channels, you conjure forth a brilliant flash of light at ([\w'\-]+), who freezes in place.$</string>
							<string>^Tapping into your air channel, you summon forth a vicious wind to lacerate the body of ([\w'\-]+).$</string>
							<string>^Summoning forth energy that you have gathered, you conjure forth a terrible cyclone of wind, picking up ([\w'\-]+) and whipping \w+ about in a frenzy.$</string>
							<string>^Summoning forth energy that you have gathered, you conjure forth a terrible cyclone of wind, picking up the disorientated form of ([\w'\-]+) and whipping \w+ about in a frenzy, dashing \w+ against any available surfaces.$</string>
							<string>^([\w'\-]+) stumbles clumsily as the blow lands.$</string>
							<string>^([\w'\-]+) begins to shake uncontrollably.$</string>
							<string>^A puzzled expression crosses the face of ([\w'\-]+).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>7</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Overcharged</name>
						<script>OppGainedAff("clumsiness")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You have (.*) units of arcane energy stored.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Crushed Pots</name>
					<script>affstrack.crushedherb = affstrack.crushedpots[matches[2]] or false</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Crushing a (.*) in your hand\, you absorb the remnants of natural energy stored within\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Vine Wreathe Enabled</name>
					<script>if IsTargetted(matches[2]) then
   affstrack.vinewreathe = true
   ak.scoreup()
end
tempTimer(25, [[ affstrack.vinewreathe = false ]])


</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Uttering a quiet recitation, you gesture towards ([\w'\-]+). A mass of writhing vines burst forth from the ground, grabbing hold of \w+ form\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Vine Wreathe Disabled</name>
					<script>if IsTargetted(matches[2]) then
   affstrack.vinewreathe = false
   ak.scoreup()
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^The vines flailing about ([\w'\-]+)\'s form recede\.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Disturbed</name>
					<script>ak.disturbed = true
ak.scoreup(target)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Clouds boil into existence above you, their dark mass seething.</string>
						<string>The weather here has already been disturbed by a practitioner of your craft.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Arcane Energy</name>
					<script>ak.ae = matches[2]+0
ak.scoreup(target)
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You have (\d+) units of arcane energy built up\.</string>
						<string>^You have (\d+) units of arcane energy stored\.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Disturb Gone</name>
					<script>ak.disturbed = false
ak.ae = 0
ak.feedback = false
ak.scoreup(target)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>The clouds overhead abruptly wink out of existence.</string>
						<string>The weather here is not disturbed - you cannot redirect the feedback of your spells.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Feedback</name>
					<script>ak.feedback = matches[2]
ak.ae = 0
ak.scoreup(matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Directing a sliver of power through your air and earth channels, you create a conduit between the clouds above and ([\w'\-]+)\.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Heartseed</name>
					<script>if IsTargetted(matches[2]) then
  OppGainedAff("heartseed")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Lunging forward with one palm outstretched and a singular purpose in mind\, you strike a blow to (\w+)\'s heart\. Willing Nature\'s ire into \w+ very soul\, a warm pulse accompanies your attack as it connects\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Eclipse</name>
					<script>if IsTargetted(matches[2]) then
   OppGainedAff("blackout")
   tempTimer(6,[[affstrack.score.blackout = 0;ak.scoreup(]]..matches[2]..[[)]])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^A flare of sunlight streaks forward to engulf (\w+)\.$</string>
						<string>^A flare of moonlight streaks forward to engulf (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Tarot Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Aeon</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   aeonreset = false
   OppGainedAff("aeon")
   AeonTimer = tempTimer(15,[[aeonreset = true]])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Standing the Aeon on your open palm\, you blow it lightly at ([\w'\-]+) and watch as it seems to slow [\w'\-]+ movement through the time stream\.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Aeon Speed</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   ak.defs.speed = false
   ak.scoreup(matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You stand an Aeon tarot on your palm\, and blow it lightly at ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Moon</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) and ak.nextmoon and ak.nextmoon ~= "DOPPLEGANGER" then
   OppGainedAff(ak.nextmoon)
else
	ak.occie.aura.mental = ak.occie.aura.mental + 1
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^As you fling the Moon tarot at ([\w'\-]+)\, it turns an ominous\, sickly red\, before striking \w+ in the head\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Hierophant</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   OppGainedAff("hierophant")
   if ak.timers.Hiero then killTimer(ak.timers.Hiero) end
   ak.timers.Hiero = tempTimer(60,[[
      if affstrack.score.hierophant &gt; 0 then 
         OppLostAff("hierophant")
      end
      killTimer(ak.timers.Hiero)
   ]])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You quickly fling a Hierophant tarot card at ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Hierophant Used</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   OppLostAff("hierophant")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^By the power of the Hierophant\, you command ([\w'\-]+)\.$</string>
						<string>^You issue the command\, but ([\w'\-]+) just ignores you\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Justice</name>
					<script>if ak.ai() then return end
if IsTargetted(multimatches[2][2]) then
   OppGainedAff("justice")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>With a prayer to Miramar, the Just, you fling your tarot card at </string>
						<string>^With a prayer to Miramar\, the Just\, you fling your tarot card at ([\w'\-]+)\. A set of scales appears above [\w'\-]+ head and one side of the scale quickly descends\. Justice will be done\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Lovers</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   OppGainedAff("lovers")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You throw a Lovers tarot at ([\w'\-]+) and as it strikes true\, a look of utter love covers [\w'\-]+ face\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Hangedman</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   affstrack.score.bound = 100
   ak.scoreup(matches[2])
   --8secs
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You toss the Hanged Man tarot card at ([\w'\-]+) and as it reaches [\w'\-]+\, a huge mass of rope bursts out of it to entrap and hinder [\w'\-]+\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Undead Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Unslaught</name>
					<script>if not IsTargetted(matches[2]) then 
   return
end

if ak.ai() then return end
local augment = "claws"
local weapon = "dragonrend"
local limb = ak.limbs.standardizeLimb(matches[2])
if limb == "rightleg" or limb == "leftleg" then
  if affstrack.score.paralysis == 0 then
    OppGainedAff("paralysis")
  elseif affstrack.score.weariness == 0 then
    OppGainedAff("weariness")
  else
    OppGainedAff("clumsiness")
  end
  if affstrack.score.paralysis == 0 then
    OppGainedAff("paralysis")
  elseif affstrack.score.weariness == 0 then
    OppGainedAff("weariness")
  else
    OppGainedAff("clumsiness")
  end
elseif limb == "rightarm" or limb == "leftarm" then
  if affstrack.score.paralysis == 0 then
    OppGainedAff("paralysis")
  elseif affstrack.score.nausea == 0 then
    OppGainedAff("nausea")
  else
    OppGainedAff("darkshade")
  end
  if affstrack.score.paralysis == 0 then
    OppGainedAff("paralysis")
  elseif affstrack.score.nausea == 0 then
    OppGainedAff("nausea")
  else
    OppGainedAff("darkshade")
  end
elseif limb == "head" then
  if affstrack.score.anorexia == 0 then
    OppGainedAff("weariness")
  elseif affstrack.score.anorexia == 0 then
    OppGainedAff("weariness")
  else
    OppGainedAff("confusion")
  end
  if affstrack.score.anorexia == 0 then
    OppGainedAff("weariness")
  elseif affstrack.score.anorexia == 0 then
    OppGainedAff("weariness")
  else
    OppGainedAff("confusion")
  end
elseif limb == "torso" then
  if affstrack.score.paralysis == 0 then
    OppGainedAff("paralysis")
  elseif affstrack.score.asthma == 0 then
    OppGainedAff("asthma")
  else
    OppGainedAff("healthleech")
  end
  if affstrack.score.paralysis == 0 then
    OppGainedAff("paralysis")
  elseif affstrack.score.asthma == 0 then
    OppGainedAff("asthma")
  else
    OppGainedAff("healthleech")
  end
end
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[3])
table.insert(ak.limbs.currentbreak.augment,augment)
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You unleash a flurry of vicious strikes with your blades at the (?:right leg|left leg|torso|head|left arm|right arm) of (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Water Lord Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Perspire</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	OppGainedAff("slickness")
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You force ([\w'\-]+) into a state of heightened perspiring\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Roil Nausea</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
  if affstrack.score.nausea &gt; 0 then
		ak.thoughtIhad("nausea") 
	end
	OppGainedAff("nausea")
	ak.fluxcheck = "roil"
	ak.fluxline = matches[1]
	enableTrigger("Flux Enhance")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You wave a hand casually in the direction of ([\w'\-]+)\, violently roiling the liquid within [\w'\-]+ stomach\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Roil Unkown</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	ak.ProTrackingConfirmed("nausea")
	ak.fluxcheck = "roil"
	ak.fluxline = matches[1]
	enableTrigger("Flux Enhance")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You wave a hand in the direction of ([\w'\-]+) roiling the liquid that flows throughout [\w'\-]+ and disrupting [\w'\-]+ mental stability\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Choke</name>
					<script>if ak.ai() then return end
if not IsTargetted(matches[2]) then
	return 
end
if affstrack.score.asthma == 100 then
	OppGainedAff("hallucinations")
else	
	OppGainedAff("asthma")
end
ak.pervasion.hitcount = ak.pervasion.hitcount + 1
ak.fluxline = matches[1]
ak.fluxcheck = "choke"
enableTrigger("Flux Enhance")	
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You manifest water inside the lungs of ([\w'\-]+)\, causing [\w'\-]+ to hack and cough violently\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Drench Weariness</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
  if affstrack.score.weariness &gt; 0 then
		ak.thoughtIhad("weariness") 
	end
	OppGainedAff("weariness")
	ak.fluxline = matches[1]
	ak.fluxcheck = "drench"
	enableTrigger("Flux Enhance")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You call down a deluge to drench the impudent ([\w'\-]+)\, soaking [\w'\-]+ with icy water\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Drench Confusion</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	ak.ProTrackingConfirmed("weariness")
	OppGainedAff("confusion")
end
ak.fluxline = matches[1]
ak.fluxcheck = "drench"
enableTrigger("Flux Enhance")	</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You call down a deluge to drench the impudent ([\w'\-]+)\, leaving [\w'\-]+ dazed and confused\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Parch</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	OppGainedAff("Lethargy")
end
ak.fluxline = matches[1]
ak.fluxcheck = "parch"
enableTrigger("Flux Enhance")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You leech the water from ([\w'\-]+)\, making [\w'\-]+ skin dry and cracked\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Thin</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
  if affstrack.score.haemophilia &gt; 0 then
		ak.thoughtIhad("haemophilia") 
	end
	OppGainedAff("haemophilia")
	ak.pervasion.initialbleed = false
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You exert your limited control of the blood that flows through the veins of ([\w'\-]+)\, thinning it\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Thin</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
ak.ProTrackingConfirmed("haemophilia")
ak.pervasion.initialbleed = true
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You violently pull on the thinned blood flowing through the inferior form of ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Latch</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Level 1</name>
						<script>if ak.ai() then return end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Tendrils of water lash out from you\, latching themselves to ([\w'\-]+) and hindering [\w'\-]+ attempts to flee\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Latch 2</name>
						<script>if ak.ai() then return end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You reach for the blood that flows through the inferior form of ([\w'\-]+)\, latching on and drawing it out\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Latch 3</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	affstrack.score.latched = 300
	ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^With an exertion of will\, you reach past flesh and viscera\, seizing control of every drop of water that flows throughout the walking corpse that is ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Latch Cure</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	affstrack.score.latched = 0
	ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Colour floods back into the face of ([\w'\-]+)\, [\w'\-]+ unhealthy pallor a thing of the past\.$</string>
							<string>^You have not taken dominion over the water that flows through ([\w'\-]+)\.$</string>
							<string>^You reach for the water that courses throughout ([\w'\-]+)\, but it slips through your grasp like smoke\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Flux Enhance</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Parch</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	--cecho("&lt;cyan&gt;Flux: &lt;white&gt;"..ak.fluxcheck)
	if affstrack.score.haemophilia ~= 100 then
		ak.ProTrackingConfirmed("haemophilia")
		affstrack.score.weariness = 100
		ak.scoreup(matches[2])
	else
		ak.ProTrackingConfirmed("weariness")
	end
	OppGainedAff("addiction")
end
disableTrigger("Flux Enhance")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A ravenous gleam enters the eyes of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Roil</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	--cecho("&lt;cyan&gt;Flux: &lt;white&gt;"..ak.fluxcheck)
	if affstrack.score.weariness ~= 100 then
		ak.ProTrackingConfirmed("asthma")
		affstrack.score.weariness = 100
		ak.scoreup(matches[2])
	else
		ak.ProTrackingConfirmed("weariness")
	end
	OppGainedAff("anorexia")
end
disableTrigger("Flux Enhance")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The skin of ([\w'\-]+) takes on a green tinge\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Drench</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	--cecho("&lt;cyan&gt;Flux: &lt;white&gt;"..ak.fluxcheck)
	if affstrack.score.asthma ~= 100 then
		ak.ProTrackingConfirmed("asthma")
		affstrack.score.slickness = 100
		affstrack.score.anorexia = 100
		ak.scoreup(matches[2])
	elseif affstrack.score.slickness ~= 100 then
		ak.ProTrackingConfirmed("slickness")
		affstrack.score.anorexia = 100
		ak.scoreup(matches[2])
	else
	  ak.ProTrackingConfirmed("anorexia")
	end
end
disableTrigger("Flux Enhance")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Tendrils of water writhe and burrow into the eyes and nose of ([\w'\-]+)\, seeking and questing\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Choke</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	--cecho("&lt;cyan&gt;Flux: &lt;white&gt;"..ak.fluxcheck)
	if affstrack.score.nausea ~= 100 then
		ak.ProTrackingConfirmed("nausea")
		affstrack.score.weariness = 100
		ak.scoreup(matches[2])
	elseif affstrack.score.weariness ~= 100 then
		ak.ProTrackingConfirmed("weariness")
	end
end
disableTrigger("Flux Enhance")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The head of a servant of Sllshya erupts from your chest\, its fangs sinking into the exposed throat of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>No Flux Finish</name>
						<script>if ak.ai() then return end
local checks = {
	["choke"] = {[1] = "weariness",[2] = "nausea"},
	["roil"] = {[1] = "weariness",[2] = "asthma"},
	["parch"] = {[1] = "weariness",[2] = "haemophilia"},
	["drench"] = {[1] = "asthma",[2] = "slickness",[3] = "anorexia"},
}
if ak.fluxline and ak.fluxline == matches[1] then return end
ak.fluxcheck = ak.fluxcheck or "unknown"
if not table.contains(checks, ak.fluxcheck) then
	disableTrigger("Flux Enhance")
	return 
end
--cecho("&lt;cyan&gt;Non-Flux: &lt;white&gt;"..ak.fluxcheck)
if ak.fluxcheck == "drench" then

else
	if affstrack.score[checks[ak.fluxcheck][1]] == 100 and affstrack.score[checks[ak.fluxcheck][2]] &lt; 100 then
		--cecho("&lt;cyan&gt;\nCheck Flux: &lt;white&gt;"..checks[ak.fluxcheck][2])
		ak.thoughtIhad(checks[ak.fluxcheck][2])
	elseif affstrack.score[checks[ak.fluxcheck][1]] &lt; 100 and affstrack.score[checks[ak.fluxcheck][2]] == 100 then
		--cecho("&lt;cyan&gt;\nCheck Flux: &lt;white&gt;"..checks[ak.fluxcheck][1])
		ak.thoughtIhad(checks[ak.fluxcheck][1])
	else
	
	end	
end
disableTrigger("Flux Enhance")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You force ([\w'\-]+) into a state of heightened perspiring\.$</string>
							<string>^You wave a hand casually in the direction of ([\w'\-]+)\, violently roiling the liquid within [\w'\-]+ stomach\.$</string>
							<string>^You wave a hand in the direction of ([\w'\-]+) roiling the liquid that flows throughout [\w'\-]+ and disrupting [\w'\-]+ mental stability\.$</string>
							<string>^You manifest water inside the lungs of ([\w'\-]+)\, causing [\w'\-]+ to hack and cough violently\.$</string>
							<string>^You call down a deluge to drench the impudent ([\w'\-]+)\, soaking [\w'\-]+ with icy water\.$</string>
							<string>^You call down a deluge to drench the impudent ([\w'\-]+)\, leaving [\w'\-]+ dazed and confused\.$</string>
							<string>^You leech the water from ([\w'\-]+)\, making [\w'\-]+ skin dry and cracked\.$</string>
							<string>^You exert your limited control of the blood that flows through the veins of ([\w'\-]+)\, thinning it\.$</string>
							<string>^You violently pull on the thinned blood flowing through the inferior form of ([\w'\-]+)\.$</string>
							<string>^Tendrils of water lash out from you\, latching themselves to ([\w'\-]+) and hindering [\w'\-]+ attempts to flee\.$</string>
							<string>^You reach for the blood that flows through the inferior form of ([\w'\-]+)\, latching on and drawing it out\.$</string>
							<string>^With an exertion of will\, you reach passed flesh and viscera\, seizing control of every drop of water that flows throughout the walking corpse that is ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Non-Fluxed Attack</name>
						<script>if ak.ai() then return end
ak.fluxcheck = false
disableTrigger("Flux Enhance")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string></string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>7</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Downpour</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	OppGainedAff("frozen")
  OppGainedAff("prone")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Water thunders down upon ([\w'\-]+)\, leaving [\w'\-]+ shivering beneath its chill\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Wreck</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	OppGainedAff("stupidity recklessness")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Bringing forth a spinning cyclone of water\, you pick up ([\w'\-]+) in it and repeatedly dash [\w'\-]+ against the ground\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Torrent</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   OppGainedAff("rightarm leftarm frozen") 
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You send a concentrated torrent of water at the utterly helpless form of (\w+)\, smashing \w+ limbs with the might of Sllshya\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>2h Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Perceive Enable</name>
					<script>ak = ak or {}
ak.twoh = ak.twoh or {}
enableTrigger("Enemy Fractures")
ak.deleteFull()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Narrowing your gaze upon</string>
						<string>^Narrowing your gaze upon ([\w'\-]+)\, you take stock of [\w'\-]+ current injuries\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Enemy Fractures</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Fracture Count</name>
						<script>ak.twoh[matches[3]] = matches[2] + 0
if ak.twoh[matches[3]] == 0 then
	ak.deleteFull()
else
	cecho("&lt;yellow&gt;"..matches[3]..":&lt;cyan&gt; "..ak.twoh[matches[3]])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^[\w'\-]+ suffers from (\d+) ([\w'\-]+) fractures\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Ribs</name>
						<script>ak.twoh["ribs"] = matches[2] + 0
if ak.twoh["ribs"] == 0 then
	ak.deleteFull()
else
	cecho("&lt;yellow&gt;ribs:&lt;cyan&gt; "..ak.twoh["ribs"])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^[\w'\-]+ suffers from (\d+) cracked ribs\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Tendons</name>
						<script>ak.twoh["tendons"] = matches[2] + 0
if ak.twoh["tendons"] == 0 then
	ak.deleteFull()
else
	cecho("&lt;yellow&gt;tendons:&lt;cyan&gt; "..ak.twoh["tendons"])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^[\w'\-]+ suffers from (\d+) torn tendons\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Parry</name>
						<script>targetparry = ak.limbs.standardizeLimb(matches[3])
disableTrigger("Enemy Fractures")
ak.scoreup(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) is attempting to parry blows directed at [\w'\-]+ (.*)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>No Parry</name>
						<script>targetparry = "none"
ak.deleteFull()
disableTrigger("Enemy Fractures")
ak.scoreup(target)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>He does not seem to be parrying anything.</string>
							<string>She does not seem to be parrying anything.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Precision</name>
					<script>ak.twoh.modifier = 2
ak.limbs.twoh.stance["Me"] = "precision"</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You shift your stance, poising yourself for a precise strike against your foe.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Speed</name>
					<script>ak.twoh.modifier = 1
ak.limbs.twoh.stance["Me"] = "knight"</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Channeling the fury of battle, you prepare to unleash a brutally swift stroke against your foe.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Devastate</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Level 1</name>
						<script>if IsTargetted(multimatches[2][3]) then
	if multimatches[2][2] == "legs" then
		affstrack.score.rightleg = 100
		affstrack.score.leftleg = 100
		ak.twoh.tendons = 0
		ak.tendonHit()
		ak.scoreup(multimatches[2][3])
	elseif multimatches[2][2] == "arms" then
		affstrack.score.rightarm = 100
		affstrack.score.leftarm = 100
		ak.twoh.wrist = 0
		ak.wristHit()
		ak.scoreup(multimatches[2][3])
	end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Bracing your feet, you launch a devastating slash at the</string>
							<string>^Bracing your feet\, you launch a devastating slash at the ([\w'\-]+) of ([\w'\-]+)\, delivering a glancing blow\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Level 2</name>
						<script>if IsTargetted(multimatches[2][3]) then
	if multimatches[2][2] == "legs" then
		affstrack.score.rightleg = 200
		affstrack.score.leftleg = 200
		ak.twoh.tendons = 0
		ak.tendonHit()
		ak.scoreup(multimatches[2][3])
	elseif multimatches[2][2] == "arms" then
		affstrack.score.rightarm = 200
		affstrack.score.leftarm = 200
		ak.twoh.wrist = 0
		ak.wristHit()
		ak.scoreup(multimatches[2][3])
	end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You whip</string>
							<string>^You whip .* in a vicious arc\, hewing savagely into the ([\w'\-]+) of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Level 3</name>
						<script>if IsTargetted(multimatches[2][3]) then
	if multimatches[2][2] == "legs" then
		affstrack.score.rightleg = 300
		affstrack.score.leftleg = 300
		ak.twoh.tendons = 0
		ak.tendonHit()
		ak.scoreup(multimatches[2][3])
	elseif multimatches[2][2] == "arms" then
		affstrack.score.rightarm = 300
		affstrack.score.leftarm = 300
		ak.twoh.wrist = 0
		ak.wristHit()
		ak.scoreup(multimatches[2][3])
	end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Adjusting your footing, you unleash a horrific slash at the</string>
							<string>^Adjusting your footing\, you unleash a horrific slash at the ([\w'\-]+) of ([\w'\-]+)\, cleaving flesh and shattering bone in a savage display of your supremacy\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Added</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hew Legs</name>
						<script>if IsTargetted(matches[2]) then
	ak.twoh.tendons = ak.twoh.tendons + ak.twoh.modifier
	if ak.twoh.tendons &gt; 7 then ak.twoh.tendons = 7 end
	cecho("&lt;yellow&gt;tendons:&lt;cyan&gt; "..ak.twoh.tendons)
	ak.tendonHit()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) almost falls as the blade savagely bites into [\w'\-]+ lower ([\w'\-]+) leg\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hew Arms</name>
						<script>if IsTargetted(matches[3]) then
	ak.twoh.wrist = ak.twoh.wrist + ak.twoh.modifier
	if ak.twoh.wrist &gt; 8 then ak.twoh.wrist = 8 end
	cecho("&lt;yellow&gt;wrist:&lt;cyan&gt; "..ak.twoh.wrist)
	ak.wristHit()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The sickening crunch of bone can be heard as the blade smashes into the ([\w'\-]+) arm of ([\w'\-]+)\.$</string>
							<string>^The wet crunch of bone can be heard as the hammer smashes into the (right|left) arm of ([\w'\-]+).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Overhand</name>
						<script>if IsTargetted(matches[2]) then
	ak.twoh.skull = ak.twoh.skull + ak.twoh.modifier
	if ak.twoh.skull &gt; 7 then ak.twoh.skull = 7 end
	cecho("&lt;yellow&gt;skull:&lt;cyan&gt; "..ak.twoh.skull)
	ak.skullHit()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) staggers as the blade strikes [\w'\-]+ in the side of the head\.$</string>
							<string>^([\w'\-]+) staggers back as the hammer catches \w+ a glancing blow to the head.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Underhand</name>
						<script>if IsTargetted(matches[2]) then
	ak.twoh.ribs = ak.twoh.ribs + ak.twoh.modifier
	if ak.twoh.ribs &gt; 7 then ak.twoh.ribs = 7 end
	cecho("&lt;yellow&gt;ribs:&lt;cyan&gt; "..ak.twoh.ribs)
	ak.ribHit()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) doubles over as the blade slams into [\w'\-]+ side\.$</string>
							<string>^([\w'\-]+) doubles over as the hammer savagely crunches into \w+ ribcage.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Did brain</name>
					<script>ak.didBrain = true
tempTimer(20, [[
ak.didBrain = false
]])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You feel the satisfying crunch of bone as a Siroccian warhammer smashes home.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Riding Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Trample</name>
					<script>if IsTargetted(matches[4]) then
local limbcheck = matches[2]..""..matches[3]
if affstrack.score[limbcheck] &lt; 100 then
   affstrack.score[limbcheck] = 100
   ak.scoreup(matches[4])
end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>An alabaster pegasus breaks the ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+)\.</string>
						<string>An alabaster pegasus crushes the ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+)\.</string>
						<string>An alabaster pegasus pulverises the ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+)\.</string>
						<string>An alabaster pegasus smashes the ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+)\.</string>
						<string>^The ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+) is smashed to a bloody pulp\.$</string>
						<string>A steppe eagle breaks the ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+)\.</string>
						<string>A steppe eagle crushes the ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+)\.</string>
						<string>A steppe eagle pulverises the ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+)\.</string>
						<string>A steppe eagle smashes the ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+)\.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Defenses(i)</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>CurseWard Down</name>
					<script>if IsTargetted(matches[2]) then
if ak.ai() then return end
ak.defs.curseward = false
ak.scoreup(matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>([\w'\-]+)'s curseward shatters!</string>
						<string>^Your attempt to breach (\w+)\'s curseward has no effect\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>CurseWard Up</name>
					<script>if IsTargetted(matches[2]) then
if ak.ai() then return end
ak.defs.curseward = true
ak.scoreup(matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A shimmering curseward appears around ([\w'\-]+).</string>
						<string>^You try to curse ([\w'\-]+)\, but [\w'\-]+ is warded\.$</string>
						<string>^You stare at ([\w'\-]+)\, giving [\w'\-]+ the evil eye\, but [\w'\-]+ is warded\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>CurseWard Down2</name>
					<script>if ak.ai() then return end
ak.defs.curseward = false
ak.scoreup(target)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Your attempt to breach finds no curseward.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Breathing Up!</name>
					<script>if ak.ai() then return end
ak.defs.holdbreath = true
ak.scoreup(target)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You attempt to squeeze the life out of the effigy in your hands, but find the torso too tight.</string>
						<string>You feel some resistance against your choking attempt.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Breathing Down</name>
					<script>if IsTargetted(matches[2]) then
	 if ak.ai() then return end
   ak.defs.holdbreath = false
   ak.scoreup(matches[2])
end
--ak.deleteFull()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>([\w'\-]+) exhales loudly.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Breathing Up</name>
					<script>if IsTargetted(matches[2]) then
	 if ak.ai() then return end
   ak.defs.holdbreath = true
   ak.scoreup(matches[2])
end
--ak.deleteFull()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>([\w'\-]+) inhales and begins holding [\w'\-]+ breath.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Sileris Up</name>
					<script>if IsTargetted(multimatches[2][2]) then
	 if ak.ai() then return end
   ak.defs.sileris = true
   if affstrack.score.slickness&gt;0 then 
     if ak.thoughtIhad then ak.thoughtIhad("slickness") else affstrack.score.slickness = 0 end
     if silerisaktime then killTimer(silerisaktime) end
   end
	 ak.scoreup(multimatches[2][2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A supple</string>
						<string>^A supple .* has formed around ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Sileris Apply</name>
					<script>if IsTargetted(matches[2]) then
	 if ak.ai() then return end
   ak.defs.sileris = false
   if affstrack.score.slickness&gt;0 then 
     if ak.thoughtIhad then ak.thoughtIhad("slickness") else affstrack.score.slickness = 0 end 
   end
   if silerisaktime then killTimer(silerisaktime) end
   silerisaktime = tempTimer(9,[[ak.defs.sileris = true]])
	 ak.scoreup(matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) applies a sileris berry to \w+\.$</string>
						<string>^([\w'\-]+) applies a quicksilver droplet to [\w'\-]+\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Sileris Down</name>
					<script>if IsTargetted(multimatches[2][2]) then
	 if ak.ai() then return end
   ak.defs.sileris = false
   ak.scoreup(multimatches[2][2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You try to flay a non-existent sileris coating from</string>
						<string>^You try to flay a non-existent sileris coating from ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Sileris Down</name>
					<script>if IsTargetted(matches[2]) and ak.defs.sileris then 
	 if ak.ai() then return end
   ak.defs.sileris = false
   ak.scoreup(matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^A (.+) lunges for the throat of ([\w'\-]+)\, fangs sinking through [\w'\-]+ fang barrier defence\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Sileris Down</name>
					<script>if IsTargetted(multimatches[2][2]) then
	 if ak.ai() then return end
   ak.defs.sileris = false
   ak.scoreup(multimatches[2][2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You flay the metallic coating from</string>
						<string>^You flay the metallic coating from ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Sileris Up</name>
					<script>if IsTargetted(multimatches[2][2]) then
	 if ak.ai() then return end
   ak.defs.sileris = true
   ak.scoreup(multimatches[2][2])
   if silerisaktime then killTimer(silerisaktime) end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You try to bite </string>
						<string>^You try to bite ([\w'\-]+)\, but your fangs are stopped by an odd metallic coating\.$</string>
						<string>^You try to bite ([\w'\-]+)\, but your fangs are stopped by an odd waxy coating\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Serpent Flay Third</name>
					<script>if IsTargetted(matches[2]) then
	 if ak.ai() then return end
   ak.defs.sileris = false
   ak.scoreup(matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) seems to jolt to a halt suddenly as [\w'\-]+ flays h(?:im|er)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Sileris Down</name>
					<script>if IsTargetted(multimatches[2][2]) then
	 if ak.ai() then return end
   ak.defs.sileris = false
   ak.scoreup(multimatches[2][2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You flay away</string>
						<string>^You flay away ([\w'\-]+)\'s speed defence\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Aria</name>
					<script>local mehdo = matches[2]
if not _G[mehdo.."ariatimer"] then
	ak.limbs.ariaUp(mehdo)
end
_G[mehdo.."ariatimer"] = tempTimer(5, [[
	cecho("\n\n\n&lt;cyan&gt;Correcting ]] .. mehdo .. [[ aria!\n\n\n")
	ak.limbs.ariaDown(]]..mehdo..[[)
	_G["]] .. mehdo .. [[ariatimer"] = nil   
]])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+)\'s voice and instrument rise to the heavens in an Aria of healing for ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Speed Stripped</name>
					<script>if IsTargetted(matches[2]) then
	 if ak.ai() then return end
   ak.defs.speed = false
   ak.scoreup(matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You stand an Aeon tarot on your palm, and blow it lightly at ([\w'\-]+)\.$</string>
						<string>^[\w'\-]+ razes ([\w'\-]+)\'s speed defence with .*\.$</string>
						<string>^([\w'\-]+) suddenly seems less dexterous\, [\w'\-]+ reactions becoming noticeably slower\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Riding</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dismounted</name>
						<script>if IsTargetted(matches[2]) then
	 if ak.ai() then return end
   ak.mounted = false
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) steps down off of .*\.$</string>
							<string>^The instep of your foot smashes into the \w+ underarm of ([\w'\-]+)\, throwing \w+ from \w+ steed\.$</string>
							<string>^([\w'\-]+) begins to tumble towards the [\w'\-]+\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Mounted</name>
						<script>if matches[2] and IsTargetted(matches[2]) then
	 if ak.ai() then return end
   ak.mounted = true  
   affstrack.score.hamstring = 0
	 affstrack.score.prone = 0
	 affstrack.score.paralysis = 0
   ak.scoreup(matches[2])
elseif not matches[2] then
	 if ak.ai() then return end
   ak.mounted = true
   ak.scoreup(target)
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) easily vaults onto the back of .*\.$</string>
							<string>You cannot sweep kick a mounted opponent.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Kai Surge</name>
						<script>if IsTargetted(matches[2]) then
	 if ak.ai() then return end
   EchoForMajorAff("PRONE")
   affstrack.score.surge = 100
   OppGainedAff("prone")
   ak.mounted = false
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^As the power of your kai builds within you\, you lift a hand towards ([\w'\-]+)\. A searing bolt of power leaps forth\, blasting [\w'\-]+ backwards and leaving [\w'\-]+ lying\, twitching\, upon the ground\.$</string>
							<string>^As [\w'\-]+ lifts a hand in the direction of ([\w'\-]+)\, [\w'\-]+ summons forth a bolt of incandescent power\. As it strikes ([\w'\-]+)\, [\w'\-]+ is flung helplessly through the air\, landing in a twitching heap\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Surge Gone</name>
						<script>if IsTargetted(matches[2]) then
	if ak.ai() then return end
	ak.mounted = false
	OppLostAff("surge")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The muscles of ([\w'\-]+) cease violently spasming\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>BM Stances Friendly</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Sanya</name>
						<script>ak.limbs.blademaster.stance[matches[2]] = "Sanya"</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) sinks into the Sanya stance\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Thyr</name>
						<script>ak.limbs.blademaster.stance[multimatches[2][2]] = "Thyr"</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>With a flourish, </string>
							<string>^With a flourish\, ([\w'\-]+) enters the Thyr stance\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Arash</name>
						<script>ak.limbs.blademaster.stance[matches[2]] = "Arash"</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) takes up the Arash stance\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Mir</name>
						<script>ak.limbs.blademaster.stance[matches[2]] = "Mir"</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) enters the flowing Mir stance\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Doya</name>
						<script>ak.limbs.blademaster.stance[matches[2]] = "Doya"</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) drops into the Doya stance\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Unstanced</name>
						<script>ak.limbs.blademaster.stance[matches[2]] = "None"</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) shifts [\w'\-]+ weight\, adopting a neutral stance\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Rebounding</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Rebounding Down</name>
						<script>if IsTargetted(matches[2]) then 
if ak.ai() then return end
ak.defs.reRebounding = true
ak.defs.rebounding = false
ak.scoreup(matches[2])
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#55ffff</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>([\w'\-]+)'s aura of weapons rebounding disappears.</string>
							<string>You flay away ([\w'\-]+)'s aura of rebounding defence.</string>
							<string>You call upon Whiirh to empower your staff and strike ([\w'\-]+), the power of air dispersing [\w'\-]+ aura of rebounding.</string>
							<string>You call upon Whiirh and unleash a forceful blow towards ([\w'\-]+) with your trusty staff.</string>
							<string>You call upon Whiirh and unleash a forceful blow towards ([\w'\-]+)'s .* with your trusty staff.</string>
							<string>^You raze ([\w'\-]+)\'s aura of rebounding with .+\.$</string>
							<string>^You raze ([\w'\-]+)\'s speed defence with .+\.$</string>
							<string>^You whip .+ through the air in front of ([\w'\-]+)\, to no effect\.$</string>
							<string>^You try to flay a non-existent aura of rebounding from ([\w'\-]+)\.$</string>
							<string>^[\w'\-]+ razes ([\w'\-]+)\'s aura of rebounding with .*\.$</string>
							<string>^You flay away ([\w'\-]+)\'s speed defence\.$</string>
							<string>^You whip .* through the air in front of ([\w'\-]+)\, to no effect\.$</string>
							<string>^[\w'\-]+ delivers a terrible stroke with .*\, scything straight through the aura of rebounding surrounding ([\w'\-]+)\.$</string>
							<string>^Lunging forward\, you bring .* in a savage diagonal blow\, carving through ([\w'\-]+)\'s aura of rebounding\.$</string>
							<string>^You lunge toward ([\w'\-]+) with .*\, but finding no resistance\, you stumble hopelessly off balance\.$</string>
							<string>^Continuing your assault\, you whip .* in a vicious rising slash at ([\w'\-]+)\.$</string>
							<string>^You lurch forward at ([\w'\-]+)\, swinging .* in a wildly innacurate blow\.$</string>
							<string>^[\w'\-]+\'s cantata shatters the defences surrounding ([\w'\-]+)\.$</string>
							<string>^[\w'\-]+ calls upon Whiirh and strikes ([\w'\-]+) with [\w'\-]+ staff\, the power of air dispersing [\w'\-]+ aura of rebounding\.$</string>
							<string>^The falcon dives at ([\w'\-]+)\, ripping apart [\w'\-]+ aura of rebounding with its talons\.$</string>
							<string>^[\w'\-]+ lunges toward ([\w'\-]+)\, but stumbles off balance as if expecting some barrier\.$</string>
							<string>^Planting your feet, you whirl .+ over your head before bringing it down with terrible force upon ([\w'\-]+), shattering \w+ aura of rebounding\.$</string>
							<string>^[\w'\-]+ whips .+ through the air in front of ([\w'\-]+)\, to no effect\.$</string>
							<string>^You lurch forward at ([\w'\-]+)\, swinging .* in a wildly innacurate blow\.$</string>
							<string>^You deliver a single\, powerful blow against the aura of rebounding surrounding ([\w'\-]+)\, fracturing it\.$</string>
							<string>^The daegger cuts through (\w+)\'s skullcap\-formed aura\.$</string>
							<string>^Your mace ignites in holy flame\, burning away (\w)\'s protective aura\.$</string>
							<string>^You deliver a single, powerful blow against the aura of rebounding surrounding (\w+)\, fracturing it\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Rebounding Up</name>
						<script>if IsTargetted(matches[2]) and reboundingaccountak then 
	if ak.ai() then return end
  ak.defs.rebounding = true
  ak.scoreup(matches[2])
end

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You suddenly perceive the vague outline of an aura of rebounding around ([\w'\-]+).</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Rebounding Up2</name>
						<script>if ak.ai() then return end
ak.defs.rebounding = true
weaponattack = {}
ak.scoreup(target)
attacklimb = {}
attackweapon = {} 
weaponattack = {}
boardaffs = {}</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The attack rebounds onto you!</string>
							<string>The attack rebounds back onto you!</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Rebounding Up3</name>
						<script>if IsTargetted(matches[2]) then 
	if ak.ai() then return end
  echo("\n")
  echo("\n")
  cecho("&lt;cyan&gt; REBOUNDING UP, WATCH OUT!!!!!!!!!")
  echo("\n")
  cecho("&lt;cyan&gt; REBOUNDING UP, WATCH OUT!!!!!!!!!")
  echo("\n")
  cecho("&lt;cyan&gt; REBOUNDING UP, WATCH OUT!!!!!!!!!")
  echo("\n")
  echo("\n")
  ak.defs.rebounding = true
  ak.scoreup(matches[2])
end

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You would be unable to pierce through the aura of rebounding protecting ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Shielded</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Shielded</name>
						<script>if IsTargetted(matches[2]) then
	 if ak.ai() then return end
   ak.shieldwhore = true
   tempTimer(5,[[ak.shieldwhore = false]])
   ak.defs.shield = true
   ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A nearly invisible magical shield forms around ([\w'\-]+).$</string>
							<string>^A dizzying beam of energy strikes you as your attack rebounds off of ([\w'\-]+)\'s shield\.$</string>
							<string>^The magical shield surrounding ([\w'\-]+) makes that impossible\.$</string>
							<string>^A shimmering barrier of crystal forms about ([\w'\-]+)\.$</string>
							<string>^A guardian angel surrounds ([\w'\-]+) with a protective shield\.$</string>
							<string>^A gentle hum arises from (\w+)\'s angel, as it raises a shield to protect \w+\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Shield Down</name>
						<script>if ak.ai() then return end
if matches[2] then
  if IsTargetted(matches[2]) then
   ak.defs.shield = false
   ak.scoreup(matches[2])
  end
else
   ak.defs.shield = false
   ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You try to flay a non-existent shield from ([\w'\-]+)\.$</string>
							<string>^You flay away ([\w'\-]+)'s shield defence\.$</string>
							<string>^Calling upon Garash, you unleash a crushing blow at the magical shield surrounding ([\w'\-]+)\, shattering it\.$</string>
							<string>^Your cantata shatters the defences surrounding ([\w'\-]+)\.$</string>
							<string>([\w'\-]+)'s aura of weapons rebounding disappears.</string>
							<string>^You whip .* through the air in front of ([\w'\-]+)\, to no effect\.$</string>
							<string>^You command your gremlin to shatter the defences surrounding ([\w'\-]+)\.$</string>
							<string>^([\w'\-]+) has no shield for your gremlin to shatter\, occultist\.$</string>
							<string>^As the kick strikes the magical shield surrounding ([\w'\-]+)\, it shatters into glimmering fragments\.$</string>
							<string>^[\w'\-]+\'s cantata shatters the defences surrounding ([\w'\-]+)\.$</string>
							<string>^The othala rune on the ground suddenly erupts in a great gout of boiling magma\, the concussive blast smashing into the magical shield surrounding ([\w'\-]+) and rendering it asunder\.$</string>
							<string>^Lunging forward\, you bring .* in a savage diagonal blow\, carving through ([\w'\-]+)\'s shield\.$</string>
							<string>^Continuing your assault\, you whip .* in a vicious rising slash at ([\w'\-]+)\.$</string>
							<string>^You lunge toward ([\w'\-]+) with .*\, but finding no resistance\, you stumble hopelessly off balance\.$</string>
							<string>^[\w'\-]+\'s cantata shatters the defences surrounding ([\w'\-]+)\.$</string>
							<string>^The end of your staff smashes the magical shield surrounding ([\w'\-]+) in an explosion of translucent shards\.$</string>
							<string>^Your shadow leaps for ([\w'\-]+), hammering [\w'\-]+ shield in a silent frenzy that causes it to explode in a shower of prismatic shards\.$</string>
							<string>^([\w'\-]+) is not surrounded by a magical shield\.$</string>
							<string>^Following the momentum of your initial strike, you come back around with a crushing blow that makes the magical shield surrounding ([\w'\-]+) explode into myriad shards\.$</string>
							<string>^Bleeding off the momentum from your initial blow, you come around again, slicing cleanly through ([\w'\-]+)\'s magical shield\.$</string>
							<string>^You prepare yourself to flick your tail at ([\w'\-]+) before realising that doing so would not actually do anything\.$</string>
							<string>^You flick your tail at ([\w'\-]+)\, dismissively brushing aside the paltry shield protecting [\w'\-]+\.$</string>
							<string>^[\w'\-]+ dismissively flicks [\w'\-]+ tail at ([\w'\-]+)\, annihilating the magical shield surrounding [\w'\-]+ with casual ease\.$</string>
							<string>^You raze ([\w'\-]+)\'s magical shield with .+\.$</string>
							<string>^You conjure a blade of ice and send it to lacerate the flesh of ([\w'\-]+)\.$</string>
							<string>^You conjure a blade of ice and drive it straight through the magical shield surrounding ([\w'\-]+)\, causing it to explode in a shower of prismatic shards\.$</string>
							<string>^You lurch forward at ([\w'\-]+)\, swinging .* in a wildly innacurate blow\.$</string>
							<string>^You deliver a single\, powerful blow against the magical shield surrounding ([\w'\-]+)\, fracturing it\.$</string>
							<string>^You twist your torso and send a roundhouse towards ([\w'\-]+)\.$</string>
							<string>^A miriad image of [\w'\-]+ brings a translucent battleaxe down in a powerful overhanded blow upon([\w'\-]+)\.$</string>
							<string>^[\w'\-]+ brings a translucent battleaxe down in a powerful overhanded blow upon([\w'\-]+)\.$</string>
							<string>^Bracing your feet\, you drive .+ towards ([\w'\-]+)\.$</string>
							<string>^Your blow scythes through the air in front of ([\w'\-]+)\, missing entirely\.$</string>
							<string>^Your blow cleaves through the magical shield surrounding ([\w'\-]+), continuing on to drive him from \w+ feet\.$</string>
							<string>^You find no magical shield surrounding ([\w'\-]+), and your power is unable to take hold\.$</string>
							<string>^A savage slash of your knife trails crimson fire as you carve the logograph of the fissure into the air before (\w+)\.$</string>
							<string>^You cast a spell of erosion at (\w+)\.$</string>
							<string>^In your mind\'s eye\, you see your meteor shatter (\w+)\'s shield\.$</string>
							<string>^A violent cracking sound from the air in front of (\w+) heralds \w+ magical shield exploding into a shower of translucent shards\.$</string>
							<string>You touch your tattoo and summon the hammer but find nothing to strike.</string>
							<string>^You touch your tattoo and a massive, translucent hammer rises up and shatters the magical shield surrounding (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>3</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Shield Illusion</name>
						<script>if IsTargetted(multimatches[2][2]) then
   ak.defs.shield = false
   ak.scoreup(multimatches[2][2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>** Illusion **</string>
							<string>^A nearly invisible magical shield forms around ([\w'\-]+).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Shield Illusion 2</name>
						<script>if IsTargetted(multimatches[1][2]) then
   ak.defs.shield = false
   ak.scoreup(multimatches[2][2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A nearly invisible magical shield forms around ([\w'\-]+).$</string>
							<string>** Illusion **</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Lemming shield pop</name>
						<script>local defstrip = matches[2]
--echo(defstrip)
if IsTargetted(matches[3]) then
  if ak.ai() then return end
  if defstrip == "magical shield defence" then
    ak.defs.shield = false
    ak.scoreup(matches[3])
  elseif defstrip == "aura of rebounding defence" then
    ak.defs.reRebounding = true
    ak.defs.rebounding = false
    ak.scoreup(matches[3])
  else
    ak.defs.reRebounding = true
    ak.defs.rebounding = false
    ak.defs.shield = false
    ak.scoreup(matches[3])
  end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A small brown lemming rips apart the (.+) of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Lyre</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Lyred Up</name>
						<script>if IsTargetted(matches[2]) and targetlyred == 0 then
	 if ak.ai() then return end
   targetlyred = 1
   ak.scoreup(matches[2])
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) strums a few notes on .+\, and a prismatic barrier forms around \w+\.$</string>
							<string>^Your attack is repelled by the prismatic barrier surrounding ([\w'\-]+)\.$</string>
							<string>^(\w+) is surrounded by a sudden rush of feathers\, and a prismatic barrier forms around him\.$</string>
							<string>^With a steady, sweeping motion, (\w+) paints a broad stroke with \w+ quarterstaff, leaving a wall of transparent, prismatic light hanging in mid\-air\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Lyred Down</name>
						<script>if IsTargetted(matches[2])and targetlyred == 1 then
	 if ak.ai() then return end
   targetlyred = 0
   ak.scoreup(matches[2])
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+)\'s prismatic barrier dissolves into nothing\.$</string>
							<string>^The breath weapon rips apart ([\w'\-]+)\'s prismatic barrier\.$</string>
							<string>^The othala rune on the ground suddenly erupts in a great gout of boiling magma\, the concussive blast smashing into the prismatic barrier surrounding ([\w'\-]+) and rendering it asunder\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Look Mount Tracking</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Look Prompt</name>
						<script>ak.MountLookPrompt()</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string></string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>7</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Shield and Rebounding Gone</name>
					<script>if IsTargetted(matches[2]) then 
  if ak.ai() then return end
  ak.defs.reRebounding = true
  ak.defs.rebounding = false
  ak.defs.shield = false
  ak.scoreup(matches[2])
end

</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You lurch forward at (\w+)\, swinging .+ in a wildly innacurate blow\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Limb Counter</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Limb Hit Weapon Last</name>
					<script>if ak.ai() then return end
local augment = "none"
local weapon = matches[3]
local limb = ak.limbs.standardizeLimb(matches[2])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,augment)
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Lightning-quick, you jab [\w'\-]+'s (right leg|left leg|right arm|left arm|head|torso) with (.*)\.</string>
						<string>^Lightning-quick, you stab [\w'\-]+'s (right leg|left leg|right arm|left arm|head|torso) with (.*)\.</string>
						<string>^You slash into [\w'\-]+\'s (right leg|left leg|right arm|left arm|head|torso) with (.*)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Limb Hit Weapon First</name>
					<script>if ak.ai() then return end
if matches[3] == "flesh" then 
   return 
end
local augment = "none"
local weapon = matches[2]
if weapon == "claws" then
   augment = "percent"
   weapon = "dragonrend"
elseif weapon == "maul" then
   augment = "percent"
   weapon = "maul"
elseif weapon == "vines" then
  augment = "percent"
	if affstrack.vinewreathe then
   weapon = "wreathed"
	else
   weapon = "viridianrend"
	end
end
local limb = ak.limbs.standardizeLimb(matches[3])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,augment)
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You viciously jab (.*) into [\w'\-]+'s (right leg|left leg|right arm|left arm|head|torso)\.$</string>
						<string>^You viciously stab (.*) into [\w'\-]+'s (right leg|left leg|right arm|left arm|head|torso)\.$</string>
						<string>^Lunging forward with long, flashing ([\w'\-]+) extended, you tear into the flesh of [\w'\-]+\'s (right leg|left leg|right arm|left arm|head|torso)\.$</string>
						<string>^You command the razor-edged thorny ([\w'\-]+) around you to lash out and rend the (right leg|left leg|right arm|left arm|head|torso) of .*\.$</string>
						<string>^You spring forwards and (\w+) \w+'s (right leg|left leg|right arm|left arm|head|torso)\.$</string>
						<string>^You swing (.*) at [\w'\-]+\'s (right leg|left leg|right arm|left arm|head|torso) with all your might\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Parry locate</name>
					<script>if not IsTargetted(matches[2]) then return end
if ak.ai() then return end
if ak.limbs.currentbreak.limb and #ak.limbs.currentbreak.limb &gt; 0 and ak.limbs.currentbreak.who[#ak.limbs.currentbreak.who] == target then 
   targetparry = ak.limbs.currentbreak.limb[#ak.limbs.currentbreak.limb]
   cecho("&lt;cyan&gt;\n\n YOU HIT PARRY(&lt;white&gt;"..targetparry:title().."&lt;cyan&gt;)!!\n\n")
   cecho("&lt;yellow&gt;\n\n YOU HIT PARRY(&lt;white&gt;"..targetparry:title().."&lt;yellow&gt;)!!\n\n") 
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) parries the attack with a deft manoeuvre.$</string>
						<string>^([\w'\-]+) steps into the attack, grabs your arm, and throw</string>
						<string>^A chaos orb intercepts the attack against (\+) and renders it harmless\.$</string>
						<string>^([\w'\-]+) moves into your attack, knocking your blow aside before viciously countering with a strike to your head\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Missed Single Removal Limbs</name>
					<script>if string.findPattern(matches[1],"rebounds") then
   ak.limbs.blademaster.rebound = true
   ak.limbs.currentbreak.who[#ak.limbs.currentbreak.who] = ak.limbs.currentbreak.attacker[#ak.limbs.currentbreak.attacker]
elseif #ak.limbs.currentbreak.who &gt; 0 then
   table.remove(ak.limbs.currentbreak.weapon, #ak.limbs.currentbreak.who)
   table.remove(ak.limbs.currentbreak.limb, #ak.limbs.currentbreak.who)
   table.remove(ak.limbs.currentbreak.attacker,#ak.limbs.currentbreak.who)
   if #ak.limbs.currentbreak.augment == #ak.limbs.currentbreak.who then
      table.remove(ak.limbs.currentbreak.augment,#ak.limbs.currentbreak.who)
   end
   table.remove(ak.limbs.currentbreak.who,#ak.limbs.currentbreak.who)
end

</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) dodges nimbly out of the way\.$</string>
						<string>^([\w'\-]+) quickly jumps back, avoiding the attack\.$</string>
						<string>^([\w'\-]+) twists \w+ body out of harm's way\.$</string>
						<string>^A reflection of ([\w'\-]+) blinks out of existence.$</string>
						<string>^([\w'\-]+) parries the attack with a deft manoeuvre.$</string>
						<string>^([\w'\-]+) steps into the attack, grabs your arm, and throw</string>
						<string>^A chaos orb intercepts the attack against (\+) and renders it harmless\.$</string>
						<string>^([\w'\-]+) moves into your attack, knocking your blow aside before viciously countering with a strike to your head\.$</string>
						<string>^The attack rebounds onto [\w'\-]+\!$</string>
						<string>^The attack rebounds back onto [\w'\-]+\!$</string>
						<string>You parry the attack with a deft manoeuvre.</string>
						<string>^You move inside [\w'\-]+\'s guard\, deflecting \w+ attack to one side with your forearm before countering with a swift blow to \w+ temple\.$</string>
						<string>The attack rebounds off your rebounding aura!</string>
						<string>You twist your body out of harm's way.</string>
						<string>^Cracks spider across the surface of the crimson shield surrounding ([\w'\-]+)\, before it abruptly winks out of existence\.$</string>
						<string>^You step into the attack\, grab ([\w'\-]+) by the arm\, and throw [\w'\-]+ violently to the ground\.$</string>
						<string>You miss.</string>
						<string>^One of your reflections has been destroyed\! You have \d+ left\.$</string>
						<string>He misses.</string>
						<string>She misses.</string>
						<string>You quickly jump back, avoiding the attack.</string>
						<string>^You lash out at ([\w'\-]+) with .*\, but miss\.$</string>
						<string>^\w+\'s blow lands upon you but is robbed of much of its impact by \w+ flawed technique\.$</string>
						<string>^Your blow strikes \w+ but is robbed of much of its impact by your faulty technique\.$</string>
						<string>([\w'\-]+) lashes out with a clumsy blow at ([\w'\-]+)\, landing with far reduced force\.$</string>
						<string>You fumble your strike, the attack going wide.</string>
						<string>^(\w+) stumbles\, \w+ attack going wide\.$</string>
						<string>You dodge nimbly out of the way.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>3</integer>
						<integer>1</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>3</integer>
						<integer>1</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>3</integer>
						<integer>1</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Confirmed Hit Limbs</name>
					<script>if ak.ai() then
	ak.limbs.currentbreak.weapon = {}
	ak.limbs.currentbreak.limb = {}
	ak.limbs.currentbreak.attacker = {}
	ak.limbs.currentbreak.who = {}
	ak.limbs.currentbreak.augment = {}
	ak.limbs.absorbed = false
	disableTrigger("Missed Single Removal Limbs")                --DO NOT CHANGE!
  disableTrigger("Parry locate")
  disableTrigger("Monk Parry")
elseif isPrompt() then
	ak.limbs.parseBreaksPrompt()
else
	ak.limbs.parseBreaks()
end


</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string></string>
						<string>^He connects to the .*\!$</string>
						<string>^She connects to the .*\!$</string>
						<string>^You connect to the .*\!$</string>
						<string>^You direct a crystalline golem to (.*)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>7</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>SoA</name>
					<script>if ak.ai() then return end
ak.limbs.absorbed = true</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Your shield completely absorbs the damage.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Monk</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>SDK</name>
						<script>if ak.ai() then return end
table.insert(ak.limbs.currentbreak.weapon,"sdk")
table.insert(ak.limbs.currentbreak.limb, "torso")
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"none")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
disableTrigger("Monk Parry")


</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You pump out at</string>
							<string>^You pump out at ([\w'\-]+) with a powerful side kick\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>HKP</name>
						<script>if ak.ai() then return end
table.insert(ak.limbs.currentbreak.weapon,"hkp")
table.insert(ak.limbs.currentbreak.limb, "torso")
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"none")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
disableTrigger("Monk Parry")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You unleash a powerful hook towards</string>
							<string>^You unleash a powerful hook towards ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>UCP</name>
						<script>if ak.ai() then return end
table.insert(ak.limbs.currentbreak.weapon,"ucp")
table.insert(ak.limbs.currentbreak.limb, "head")
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"none")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
disableTrigger("Monk Parry")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You launch a powerful uppercut at</string>
							<string>^You launch a powerful uppercut at ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>WWK</name>
						<script>if ak.ai() then return end
table.insert(ak.limbs.currentbreak.weapon,"wwk")
table.insert(ak.limbs.currentbreak.limb, "head")
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"none")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
disableTrigger("Monk Parry")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You spin into the air and throw a whirlwind kick towards</string>
							<string>^You spin into the air and throw a whirlwind kick towards ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>AXK</name>
						<script>if ak.ai() then return end
if axkpunch1 then killTrigger(axkpunch1) end
if ak.monk.axkpunch then axkpunch1 = tempTrigger("You have recovered balance on your", [[ak.monk.axkpunch();killTrigger(axkpunch1)]]) end
table.insert(ak.limbs.currentbreak.weapon,"axk")
table.insert(ak.limbs.currentbreak.limb, "head")
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"none")
enableTrigger("Parry locate")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
disableTrigger("Monk Parry")

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You kick your leg high and scythe downwards at ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>HFP</name>
						<script>if ak.ai() then return end
disableTrigger("Missed Single Removal Limbs")  
disableTrigger("Parry locate")
enableTrigger("Monk Parry")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>2</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You ball up one fist and hammerfist</string>
							<string>^You ball up one fist and hammerfist ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Left Leg</name>
							<script>if ak.ai() then return end
ak.deleteFull()
enableTrigger("Confirmed Hit Limbs")
if #ak.limbs.parriedlimbs&gt;0 then
	table.remove(ak.limbs.parriedlimbs,1)
end
disableTrigger("Monk Parry")
ak.limbs.ScoreRun = false
ak.limbs.LimbHit(target, "Me", "hfp", "leftleg", "none")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You connect to the left leg!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Right Leg</name>
							<script>if ak.ai() then return end
ak.deleteFull()
enableTrigger("Confirmed Hit Limbs")
if #ak.limbs.parriedlimbs&gt;0 then
	table.remove(ak.limbs.parriedlimbs,1)
end
disableTrigger("Monk Parry")
ak.limbs.ScoreRun = false
ak.limbs.LimbHit(target, "Me", "hfp", "rightleg", "none")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You connect to the right leg!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>SNK</name>
						<script>if ak.ai() then return end
disableTrigger("Missed Single Removal Limbs") 
disableTrigger("Parry locate") 
enableTrigger("Monk Parry")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>2</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You let fly at </string>
							<string>^You let fly at ([\w'\-]+) with a snap kick\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Left Leg</name>
							<script>if ak.ai() then return end
ak.deleteFull()
enableTrigger("Confirmed Hit Limbs")
if #ak.limbs.parriedlimbs&gt;0 then
	table.remove(ak.limbs.parriedlimbs,1)
end
disableTrigger("Monk Parry")
ak.limbs.ScoreRun = false
ak.limbs.LimbHit(target, "Me", "snk", "leftleg", "none")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You connect to the left leg!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Right Leg</name>
							<script>if ak.ai() then return end
ak.deleteFull()
enableTrigger("Confirmed Hit Limbs")
if #ak.limbs.parriedlimbs&gt;0 then
	table.remove(ak.limbs.parriedlimbs,1)
end
disableTrigger("Monk Parry")
ak.limbs.ScoreRun = false
ak.limbs.LimbHit(target, "Me", "snk", "rightleg", "none")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You connect to the right leg!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>SPP</name>
						<script>if ak.ai() then return end
disableTrigger("Missed Single Removal Limbs")
disableTrigger("Parry locate")  
enableTrigger("Monk Parry")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>2</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You form a spear hand and stab out towards</string>
							<string>^You form a spear hand and stab out towards ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Left Arm</name>
							<script>if ak.ai() then return end
ak.deleteFull()
enableTrigger("Confirmed Hit Limbs")
if #ak.limbs.parriedlimbs&gt;0 then
	table.remove(ak.limbs.parriedlimbs,1)
end
disableTrigger("Monk Parry")
ak.limbs.ScoreRun = false
ak.limbs.LimbHit(target, "Me", "spp", "leftarm", "none")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You connect to the left arm!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Right Arm</name>
							<script>if ak.ai() then return end
ak.deleteFull()
enableTrigger("Confirmed Hit Limbs")
if #ak.limbs.parriedlimbs&gt;0 then
	table.remove(ak.limbs.parriedlimbs,1)
end
disableTrigger("Monk Parry")
ak.limbs.ScoreRun = false
ak.limbs.LimbHit(target, "Me", "spp", "rightarm", "none")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You connect to the right arm!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>MNK</name>
						<script>if ak.ai() then return end
disableTrigger("Missed Single Removal Limbs") 
disableTrigger("Parry locate") 
enableTrigger("Monk Parry")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>2</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You hurl yourself towards</string>
							<string>^You hurl yourself towards ([\w'\-]+) with a lightning-fast moon kick\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Left Arm</name>
							<script>if ak.ai() then return end
ak.deleteFull()
enableTrigger("Confirmed Hit Limbs")
if #ak.limbs.parriedlimbs&gt;0 then
	table.remove(ak.limbs.parriedlimbs,1)
end
disableTrigger("Monk Parry")
ak.limbs.ScoreRun = false
ak.limbs.LimbHit(target, "Me", "mnk", "leftarm", "none")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You connect to the left arm!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Right Arm</name>
							<script>if ak.ai() then return end
ak.deleteFull()
enableTrigger("Confirmed Hit Limbs")
if #ak.limbs.parriedlimbs&gt;0 then
	table.remove(ak.limbs.parriedlimbs,1)
end
disableTrigger("Monk Parry")
ak.limbs.ScoreRun = false
ak.limbs.LimbHit(target, "Me", "mnk", "rightarm", "none")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You connect to the right arm!</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Monk Parry</name>
						<script>if ak.ai() then return end
ak.limbs.parriedlimbs = ak.limbs.parriedlimbs or {}
if not IsTargetted(matches[2]) then return end
if #ak.limbs.parriedlimbs == 0 then return end
targetparry = ak.limbs.parriedlimbs[1]
cecho("&lt;cyan&gt;\n\n YOU HIT PARRY(&lt;white&gt;"..targetparry:title().."&lt;cyan&gt;)!!\n\n")
cecho("&lt;yellow&gt;\n\n YOU HIT PARRY(&lt;white&gt;"..targetparry:title().."&lt;yellow&gt;)!!\n\n")
disableTrigger("Parry locate") 
disableTrigger("Monk Parry")
ak.scoreup(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) steps into the attack, grabs your arm, and throw</string>
							<string>^([\w'\-]+) parries the attack with a deft manoeuvre.$</string>
							<string>^A chaos orb intercepts the attack against (\+) and renders it harmless\.$</string>
							<string>^([\w'\-]+) moves into your attack, knocking your blow aside before viciously countering with a strike to your head\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Sent Queue</name>
						<script>local combodraw = multimatches[2][2]
if not string.findPattern(combodraw,"hfp") and not string.findPattern(combodraw,"snk") and not string.findPattern(combodraw,"spp") and not string.findPattern(combodraw,"mnk") and not string.findPattern(combodraw,"drawslash") then
	return
end
combodraw = string.gsub(combodraw, "/", " ")
combodraw = combodraw:split(" ")
ak.limbs.parriedlimbs = {}
for i = 1, #combodraw do
   if string.findPattern(combodraw[i],"hfp") then
      table.insert(ak.limbs.parriedlimbs,combodraw[i+1]:lower().."leg")
   elseif string.findPattern(combodraw[i],"snk") then
      table.insert(ak.limbs.parriedlimbs,combodraw[i+1]:lower().."leg")
   elseif string.findPattern(combodraw[i],"spp") then
      table.insert(ak.limbs.parriedlimbs,combodraw[i+1]:lower().."arm")
   elseif string.findPattern(combodraw[i],"mnk") then
      table.insert(ak.limbs.parriedlimbs,combodraw[i+1]:lower().."arm")
	 elseif string.findPattern(combodraw[i],"drawslash") and combodraw[i+2] then
      table.insert(ak.limbs.parriedlimbs,combodraw[i+2]:lower().."arm")
   end 
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Alias "</string>
							<string>Alias \"\w+\" will now execute\: \"(.*)\"</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Queued Combo</name>
						<script>local combodraw = multimatches[2][2]:lower()
if not string.findPattern(combodraw,"hfp") and not string.findPattern(combodraw,"snk") and not string.findPattern(combodraw,"spp") and not string.findPattern(combodraw,"mnk") and not string.findPattern(combodraw,"drawslash") then
	return
end
combodraw = string.gsub(combodraw, "|", " ")
combodraw = combodraw:split(" ")
ak.limbs.parriedlimbs = {}
for i = 1, #combodraw do
   if string.findPattern(combodraw[i],"hfp") then
      table.insert(ak.limbs.parriedlimbs,combodraw[i+1]:lower().."leg")
   elseif string.findPattern(combodraw[i],"snk") then
      table.insert(ak.limbs.parriedlimbs,combodraw[i+1]:lower().."leg")
   elseif string.findPattern(combodraw[i],"spp") then
      table.insert(ak.limbs.parriedlimbs,combodraw[i+1]:lower().."arm")
   elseif string.findPattern(combodraw[i],"mnk") then
      table.insert(ak.limbs.parriedlimbs,combodraw[i+1]:lower().."arm")
	 elseif string.findPattern(combodraw[i],"drawslash") then
      table.insert(ak.limbs.parriedlimbs,combodraw[i+2]:lower().."arm")
   end 
end
ak.monkcombodraw = combodraw</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Running queued</string>
							<string>^Running queued \w+ command\: (.*)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>BladeMaster</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Stancing</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Arash</name>
							<script>ak.limbs.blademaster.stance.Me = "Arash"
ak.scoreup(target)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Mind set on the dancing flame, you take up the Arash stance.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Thyr</name>
							<script>ak.limbs.blademaster.stance.Me = "Thyr"
ak.scoreup(target)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Readying yourself with a flourish, you flow into the Thyr stance.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Mir</name>
							<script>ak.limbs.blademaster.stance.Me = "Mir"
ak.scoreup(target)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Resolving to move as water, you enter the Mir stance.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Doya</name>
							<script>ak.limbs.blademaster.stance.Me = "Doya"
ak.scoreup(target)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Lowering your centre of gravity, you drop into the Doya stance.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Sanya</name>
							<script>ak.limbs.blademaster.stance.Me = "Sanya"
ak.scoreup(target)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>Clearing your mind, you sink into the Sanya stance.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Unstanced</name>
							<script>ak.limbs.blademaster.stance["Me"] = "None"
ak.scoreup(target)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You adopt a neutral stance.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>0</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Drawslash</name>
						<script>if ak.ai() then return end
local limb = ak.limbs.standardizeLimb(multimatches[2][3])
table.insert(ak.limbs.currentbreak.weapon,"drawslash")
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"blademaster")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>4</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^With expert precision\, you draw .* from its scabbard and unleash a vicious slash towards ([\w'\-]+)\.$</string>
							<string>^Your blade bites deep into \w+ (.*)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>CompassSlash</name>
						<script>if ak.ai() then return end
local augment = "none"
local limb = ak.limbs.standardizeLimb(matches[2])
table.insert(ak.limbs.currentbreak.weapon,"compassslash")
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"blademaster")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Whispering a prayer to the [\w'\-]+ winds\, you draw .* and unleash a slash towards [\w'\-]+\'s (.*)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Centre Slash</name>
						<script>if ak.ai() then return end
local augment = "none"
local limb = ak.limbs.standardizeLimb(matches[3])
table.insert(ak.limbs.currentbreak.weapon,"centreslash")
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"blademaster")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^In a single motion, you draw .* from its scabbard and loose a vicious (rising|falling) slash at [\w'\-]+\'s ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>LegSlash</name>
						<script>if ak.ai() then return end
local augment = "none"
local limb = ak.limbs.standardizeLimb(matches[2].."leg")
table.insert(ak.limbs.currentbreak.weapon,"legslash")
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"blademaster")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^With a smooth lunge to the ([\w'\-]+)\, you draw .* from its scabbard and deliver a powerful slash across [\w'\-]+\'s legs\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>ArmSlash</name>
						<script>if ak.ai() then return end
local augment = "none"
local limb = ak.limbs.standardizeLimb(matches[2].."arm")
table.insert(ak.limbs.currentbreak.weapon,"armslash")
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"blademaster")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Spinning to the ([\w'\-]+) as you draw .* from its sheath\, you unleash a precise slash across ([\w'\-]+)\'s arms\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Blunt</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Limb Hit Weapon Last</name>
						<script>if ak.ai() then return end
local weapon = matches[3]
local limb = ak.limbs.standardizeLimb(matches[2])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"blunt")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^With a steady hand\, you batter [\w'\-]+\'s (right leg|left leg|right arm|left arm|head|torso) with (.*)\.$</string>
							<string>^You smash [\w'\-]+\'s (right leg|left leg|right arm|left arm|head|torso) with (.*)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Limb Hit Weapon First</name>
						<script>if ak.ai() then return end
local weapon = matches[2]
local limb = ak.limbs.standardizeLimb(matches[3])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"blunt")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You bring (.*) crashing down on [\w'\-]+\'s (right leg|left leg|right arm|left arm|head|torso)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Shatter</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Shattered</name>
						<script>if ak.ai() then return end
local augment = "shattered"
ak.limbs.limb_table_check(matches[3])
local limb = ak.limbs.standardizeLimb(matches[2])
table.insert(ak.limbs.currentbreak.weapon,"shattered")
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,augment)
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")


</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You strike the (right leg|left leg|right arm|left arm|head|torso) of ([\w'\-]+) with a mighty blow\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Mangled</name>
						<script>if IsTargetted(matches[2]) then
	 if ak.ai() then return end
   local limbt = ak.limbs.standardizeLimb(matches[3]) 
   affstrack.score[limbt] = 300
   ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+)\'s (right leg|left leg|right arm|left arm|head|torso) has been beaten into uselessness\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>2H</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hew</name>
						<script>if matches[3] == "flesh" then 
   return 
end
if ak.ai() then return end
local augment = ak.limbs.twoh.stance["Me"] or "knight"
local weapon = matches[2]
local limb = ak.limbs.standardizeLimb(matches[3])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,augment)
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Taking hold of (.+) with a firm two-handed grip\, you hew savagely at [\w'\-]+\'s (right leg|left leg|right arm|left arm|head|torso)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Overhand</name>
						<script>if matches[3] == "flesh" then 
   return 
end
if ak.ai() then return end
local augment = ak.limbs.twoh.stance["Me"] or "knight"
local weapon = matches[2]
local limb = ak.limbs.standardizeLimb(matches[3])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,augment)
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Raising (.+) above your head\, you bring it down upon [\w'\-]+\'s (head) with terrible force\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Undercut</name>
						<script>local augment = ak.limbs.twoh.stance["Me"] or "knight"
local weapon = matches[2]
local limb = "torso"
if ak.ai() then return end
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,augment)
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Bracing your feet\, you lunge upward at [\w'\-]+ with (.+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Pulverise</name>
						<script>if ak.ai() then return end
local augment = ak.limbs.twoh.stance["Me"] or "knight"
local weapon = matches[2]
local limb = ak.limbs.standardizeLimb(matches[4])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,augment)
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Throwing your full weight into the motion\, you bring (.*) across in a terrible blow toward (.*)\'s (right leg|left leg|right arm|left arm|head|torso)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Shikudo</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Thrust</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if ak.shikudo.LimbBlock() then return end
local augment = "none"
local weapon = "thrust"
local limb = ak.limbs.standardizeLimb(matches[2])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[3])
table.insert(ak.limbs.currentbreak.augment,"Shikudo")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Stepping forward\, you drive the end of .+ into the (right leg|left leg|right arm|left arm|head|torso) of ([\w'\-]+)\.$</string>
							<string>^Continuing your kata\, you spin .+ in your hands and drive it in a sharp thrust towards the (right leg|left leg|right arm|left arm|head|torso) of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Needle</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if ak.shikudo.LimbBlock() then return end
local augment = "none"
local weapon = "needle"
local limb = ak.limbs.standardizeLimb("head")
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[2])
table.insert(ak.limbs.currentbreak.augment,"Shikudo")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^With pinpoint precision\, you drive .+ at the throat of ([\w'\-]+)\.$</string>
							<string>^Reversing your grip on .+\, you drive the top of the weapon into the throat of ([\w'\-]+).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dart</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if ak.shikudo.LimbBlock() then return end
local augment = "none"
local weapon = "dart"
local limb = ak.limbs.standardizeLimb(matches[2])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[3])
table.insert(ak.limbs.currentbreak.augment,"Shikudo")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Sharply extending out your arms in front of you\, you deliver a lightning\-fast thrust to the (right leg|left leg|right arm|left arm|head|torso) of ([\w'\-]+) with .+\.$</string>
							<string>^Spinning on one foot you bring .+ around in a lightning fast thrust at the (right leg|left leg|right arm|left arm|head|torso) of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Ruku</name>
						<script>if ak.ai() then return end
--ak.limbs.ParseonLine()
if ak.shikudo.LimbBlock() then return end
local augment = "none"
local weapon = "ruku"
local limb = ak.limbs.standardizeLimb(matches[2])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[3])
table.insert(ak.limbs.currentbreak.augment,"Shikudo")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You spin a full rotation\, bringing .+ around in a blur of motion to smash into the (left arm|right arm|head|torso|left leg|right leg) of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Ruku Combo</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if ak.shikudo.LimbBlock() then return end
local augment = "none"
local weapon = "ruku"
local limb = ak.limbs.standardizeLimb(matches[3])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[2])
table.insert(ak.limbs.currentbreak.augment,"Shikudo")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You whip .+ at ([\w'\-]+) in a controlled arc\, bringing its length to crack against [\w'\-]+ (right leg|left leg|right arm|left arm|head|torso)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Front Kick</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
local augment = "none"
local weapon = "frontkick"
local limb = ak.limbs.standardizeLimb(matches[2].."arm")
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[3])
table.insert(ak.limbs.currentbreak.augment,"Shikudo")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You lash out with a straight kick at the ([\w'\-]+) shoulder of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Kuro</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if ak.shikudo.LimbBlock() then return end
local augment = "none"
local weapon = "kuro"
local limb = ak.limbs.standardizeLimb(matches[2].." leg")
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[3])
table.insert(ak.limbs.currentbreak.augment,"Shikudo")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Falling back into a low crouch\, you lash out with a swift strike at the ([\w'\-]+) thigh of ([\w'\-]+)\.$</string>
							<string>^Dropping into a lower stance\, you sweep a .+ at the ([\w'\-]+) thigh of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Livestrike</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if ak.shikudo.LimbBlock() then return end
local augment = "none"
local weapon = "livestrike"
local limb = ak.limbs.standardizeLimb("torso")
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[2])
table.insert(ak.limbs.currentbreak.augment,"Shikudo")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Lunging forward, you drive the end of .+ viciously into the solar plexus of ([\w'\-]+)\.$</string>
							<string>^Turning with the motion\, you channel the momentum of your previous strike into a thrust at the solar plexus of ([\w'\-]+) with .+\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Nervestrike</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if ak.shikudo.LimbBlock() then return end
local augment = "none"
local weapon = "nervestrike"
local limb = ak.limbs.standardizeLimb("head")
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[2])
table.insert(ak.limbs.currentbreak.augment,"Shikudo")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You whip a .+ at the side of ([\w'\-]+)\'s neck\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Spinkick Torso</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
local augment = "none"
local weapon = "spinkick"
local limb = ak.limbs.standardizeLimb("torso")
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[2])
table.insert(ak.limbs.currentbreak.augment,"Shikudo")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Whirling around\, you bring the ball of your foot smashing into the ribs of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Spinkick Head</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
local augment = "none"
local weapon = "spinkick"
local limb = ak.limbs.standardizeLimb("head")
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[2])
table.insert(ak.limbs.currentbreak.augment,"Shikudo")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>2</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Whirling around\, you bring the ball of your foot crashing into the temple of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>SpinKick Advance</name>
							<script>affstrack.score.head = 200
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You feel something give way under your blow.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Flashheel</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
local augment = "none"
local weapon = "flashheel"
ak.limbs.shikudo.flashed = matches[2]
local limb = ak.limbs.standardizeLimb(matches[2].." leg")
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker, "Me")
table.insert(ak.limbs.currentbreak.who,matches[3])
table.insert(ak.limbs.currentbreak.augment,"Shikudo")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Snapping your leg out to its full extent\, you drive a heel into the ([\w'\-]+) knee of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>RisingKick</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
local augment = "none"
local weapon = "risingkick"
local limb = ak.limbs.standardizeLimb(matches[2])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[3])
table.insert(ak.limbs.currentbreak.augment,"Shikudo")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You drive your foot up in a rising kick at the ([\w'\-]+) of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hiru</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if ak.shikudo.LimbBlock() then return end
local augment = "none"
local weapon = "hiru"
local limb = ak.limbs.standardizeLimb("head")
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker, "Me")
table.insert(ak.limbs.currentbreak.who,matches[2])
table.insert(ak.limbs.currentbreak.augment,"Shikudo")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Whirling .+ in a tight arc\, you bring the weapon around to crash into the side of the head of ([\w'\-]+)\.$</string>
							<string>^Snapping back into a ready stance\, you whirl .+ in a long sweep at the head of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hiraku</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if ak.shikudo.LimbBlock() then return end
local augment = "none"
local weapon = "hiraku"
local limb = ak.limbs.standardizeLimb("head")
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker, "Me")
table.insert(ak.limbs.currentbreak.who,matches[2])
table.insert(ak.limbs.currentbreak.augment,"Shikudo")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Stepping forward\, you drive .+ at the face of ([\w'\-]+)\.$</string>
							<string>^Bracing your back foot\, you lunge forward with .+ at the face of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hyperfocus</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>None</name>
							<script>if ak.ai() then return end
ak.limbs.hyperfocus = false
ak.scoreup()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You are not currently focussing on exploiting flaws in defensive technique.</string>
								<string>You cease to focus on exploiting flaws in defensive technique.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>3</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hyperfocus Chosen</name>
							<script>if ak.ai() then return end
ak.limbs.hyperfocus = ak.limbs.standardizeLimb(multimatches[2][2])
ak.scoreup()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>You will now focus on bypassing attempts to deflect blows when striking the</string>
								<string>^You will now focus on bypassing attempts to deflect blows when striking the (.+)\.$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>2</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>DWB</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Limb Hit Weapon First</name>
						<script>if ak.ai() then return end
local weapon = matches[2]
local limb = ak.limbs.standardizeLimb(matches[3])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"whirl")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You whip (.*) toward the (right leg|left leg|right arm|left arm|head|torso) of [\w'\-]+\.$</string>
							<string>^You skilfully whirl (.*) toward the (right leg|left leg|right arm|left arm|head|torso) of [\w'\-]+\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Sentinel</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Trip</name>
						<script>if ak.ai() then return end
local weapon = matches[3]
local limb = ak.limbs.standardizeLimb(matches[4])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"trip")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You swiftly sweep ([\w'\-]+)'s feet out from beneath [\w'\-]+ with (.*) before driving the point of the weapon into [\w'\-]+ (right leg|left leg|right arm|left arm|head|torso)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Trip (mounted)</name>
						<script>if ak.ai() then return end
local weapon = matches[2]
local limb = ak.limbs.standardizeLimb(matches[5])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"trip")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You deftly hook (.*) behind ([\w'\-]+)'s foot and send [\w'\-]+ tumbling off (.*) before driving the point of the weapon into [\w'\-]+ (right leg|left leg).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Thrust</name>
						<script>if ak.ai() then return end
local weapon = matches[2]
local limb = ak.limbs.standardizeLimb(matches[3])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"sentinel")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You deftly thrust (.*) into the (right leg|left leg|right arm|left arm|head|torso) of [\w'\-]+\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>RiveStrike</name>
						<script>if ak.ai() then return end
local weapon = ak.spear
local limb = ak.limbs.standardizeLimb(matches[2])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"sentinel")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Stepping forward\, you continue the motion of your initial thrust\, performing a second quick jab at the (right leg|left leg|right arm|left arm|head|torso) of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Lacerate</name>
						<script>if ak.ai() then return end
local weapon = matches[3]
local limb = ak.limbs.standardizeLimb(matches[2])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"sentinel")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You viciously lacerate the (right leg|left leg|right arm|left arm|head|torso) of [\w'\-]+ with (.*)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Gouge</name>
						<script>if ak.ai() then return end
local weapon = matches[4]
local limb = ak.limbs.standardizeLimb(matches[2])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[3])
table.insert(ak.limbs.currentbreak.augment,"sentinel")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You savagely gouge the (right leg|left leg|right arm|left arm|head|torso) of ([\w'\-]+) with (.*)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Doublestrike</name>
						<script>if ak.ai() then return end
local weapon = matches[2]
local limb = ak.limbs.standardizeLimb(matches[3])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[4])
table.insert(ak.limbs.currentbreak.augment,"sentinel")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You draw the blade of (.*) in an expert lateral slice across the (right leg|left leg|right arm|left arm|head|torso) of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>SnB</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Slice</name>
						<script>if ak.ai() then return end
local augment = "none"
local weapon = matches[3]
local limb = ak.limbs.standardizeLimb(matches[2])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,"slice")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You slice into the (right leg|left leg|right arm|left arm|head|torso) of [\w'\-]+ with (.*)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Priest</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Smite</name>
						<script>if ak.ai() then return end
local weapon = matches[4]
local limb = ak.limbs.standardizeLimb(matches[3])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[2])
table.insert(ak.limbs.currentbreak.augment,"smite")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You utter a prayer and smite ([\w'\-]+)\'s (right leg|left leg|right arm|left arm|head|torso) with (.*)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Vodun/Puppetry</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Puppet Mangle</name>
						<script>if IsTargetted(matches[3]) then
	 if ak.ai() then return end
   local limbt = ak.limbs.standardizeLimb(matches[2]) 
   if affstrack.score[limbt] &gt; 0 then
	    affstrack.score[limbt] = 300
			ak.vodunmangled = true
			tempTimer(5,[[ak.vodunmangled = false]])
	 else
	    affstrack.score[limbt] = 200
	 end
   ak.scoreup(matches[3])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The (right leg|left leg|right arm|left arm|head|torso) of ([\w'\-]+) is suddenly horribly mangled by an unseen force\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Magi</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Staff Strike</name>
						<script>if ak.ai() then return end
ak.defs.shield = false
if matches[2] == "Sllshya" then
   table.insert(ak.limbs.currentbreak.weapon, "waterstaff")
elseif matches[2] == "Garash" then
   table.insert(ak.limbs.currentbreak.weapon, "earthstaff")
elseif matches[2] == "Kkractle" then
   table.insert(ak.limbs.currentbreak.weapon, "firestaff")
elseif matches[2] == "Whiirh" then
   table.insert(ak.limbs.currentbreak.weapon, "airstaff")
end
local limb = ak.limbs.standardizeLimb(matches[4])
table.insert(ak.limbs.currentbreak.limb, limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[3])
enableTrigger("Missed Single Removal Limbs")
enableTrigger("Parry locate")          
enableTrigger("Confirmed Hit Limbs")




</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You call upon ([\w'\-]+) and unleash a forceful blow towards ([\w'\-]+)'s (right leg|left leg|right arm|left arm|head|torso) with your trusty staff\.*</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Jester</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bop OFF</name>
						<script>if ak.ai() then return
else
return
end
local weapon = matches[4]
local limb = ak.limbs.standardizeLimb(matches[3])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,matches[2])
table.insert(ak.limbs.currentbreak.augment,"sentinel")
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You reach out and bop ([\w'\-]+)\'s (right leg|left leg|right arm|left arm|head|torso) with your blackjack.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>DWC</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Undercut</name>
						<script>if ak.ai() then return end
if matches[3] == "flesh" then 
   return 
end
local augment = "undercut"
local weapon = matches[2]
local limb = ak.limbs.standardizeLimb(matches[3])
table.insert(ak.limbs.currentbreak.weapon,weapon)
table.insert(ak.limbs.currentbreak.limb,limb)
table.insert(ak.limbs.currentbreak.attacker,"Me")
table.insert(ak.limbs.currentbreak.who,target)
table.insert(ak.limbs.currentbreak.augment,augment)
enableTrigger("Missed Single Removal Limbs")          
enableTrigger("Confirmed Hit Limbs")
enableTrigger("Parry locate")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You swing (.*) at the (right leg|left leg|right arm|left arm|head|torso) of [\w'\-]+ with all your might\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Obviously(i)</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Stupidty</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   if FocusCount() == 0 and affstrack.score.impatience == 100 then
      if ak.ProTrackingConfirmed then 
         ak.ProTrackingConfirmed("stupidity") 
      else 
         affstrack.score.stupidity = 100
      end
      affstrack.score.impatience = 0
      ak.scoreup(matches[2])
   elseif affstrack.score.impatience &gt; 0 then
      if ak.ProTrackingConfirmed then 
         ak.ProTrackingConfirmed("stupidity") 
      else 
         affstrack.score.stupidity = 100
         ak.scoreup(matches[2])
      end
      --affstrack.score.impatience = 100
      --ak.scoreup(matches[2])
   else
      if ak.ProTrackingConfirmed then 
         ak.ProTrackingConfirmed("stupidity") 
      else 
         affstrack.score.stupidity = 100
         ak.scoreup(matches[2])
      end
   end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Tears fill ([\w'\-]+)'s eyes and begin to slowly run down ([\w'\-]+) face\.$</string>
						<string>^([\w'\-]+) flaps ([\w'\-]+) arms madly\.$</string>
						<string>^([\w'\-]+) stumbles and pokes ([\w'\-]+) in the eye\.$</string>
						<string>^([\w'\-]+) makes a strangled meowing noise and quickly shuts up, blushing\.$</string>
						<string>^([\w'\-]+) picks ([\w'\-]+) nose absently\.$</string>
						<string>^([\w'\-]+) breaks down and sobs uncontrollably\.$</string>
						<string>^([\w'\-]+) gets down on one knee and serenades the world\.$</string>
						<string>^([\w'\-]+) falls to his knees in worship\.$</string>
						<string>^([\w'\-]+) hugs \w+ compassionately\.$</string>
						<string>^([\w'\-]+) grunts a bit and then lets out a loud \"OINK\!\"$</string>
						<string>^([\w'\-]+) waggles his eyebrows comically\.$</string>
						<string>^([\w'\-]+) wails like an old woman\.$</string>
						<string>^([\w'\-]+) moans, holding his head\.$</string>
						<string>^You cast a net of stupidity over ([\w'\-]+)'s mind\.$</string>
						<string>^([\w'\-]+) twitches spasmodically\.$</string>
						<string>^([\w'\-]+) fondles \w+ absently\.$</string>
						<string>^([\w'\-]+) blinks\.$</string>
						<string>^([\w'\-]+) lets out a loud\, long \"MOOOOOOOOOOO\!\"$</string>
						<string>^([\w'\-]+) attempts to do a standing backflip\, but merely stumbles over [\w'\-]+ own feet\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Impatience</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) and affstrack.score.impatience &lt; 100 then 
   OppGainedAff("impatience")
   if affstrack.score.hypochondria &gt; 0 then

   end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) shuffles ([\w'\-]+) feet in boredom\.$</string>
						<string>^([\w'\-]+) suddenly starts scratching at an itch like mad\.$</string>
						<string>^You glare at ([\w'\-]+)\, cursing ([\w'\-]+) with mental maladies\.$</string>
						<string>^His eyes gleaming\, [\w'\-]+ smiles and quickly sings a jaunty limerick at ([\w'\-]+)\.$</string>
						<string>^Her eyes gleaming\, [\w'\-]+ smiles and quickly sings a jaunty limerick at ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Trample</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   smashlimb = matches[3]..matches[4]
   if affstrack.score[smashlimb] &lt; 100 then
      OppGainedAff(smashlimb)
   end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) screams as \w+ ([\w'\-]+) ([\w'\-]+) is crushed\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Asleep</name>
					<script>if ak.ai() then return end
--ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
   affstrack.score.sleep = 100
   ak.scoreup(matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+)'s eyes close suddenly as \w+ falls asleep\.$</string>
						<string>^([\w'\-]+) tosses back and forth in restless slumber\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Target Standing</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	 ak.limbs.limb_table_check(matches[2])
   affstrack.score.prone = 0
	 if applycure.lastapplied and applycure.lastapplied == "legs" then
      AKcalculateSalve()
	 end
	 if ocured and ocured.bloodroot and ocured.bloodroot.paralysis and ocured.bloodroot.slickness and ak.ProTrackingConfirmed then
	 	ak.ProTrackingConfirmed("slickness")	
	 end
	 affstrack.score.paralysis = 0
   --if affstrack.score.rightleg&gt;0 and affstrack.score.rightleg&lt;100 then
   --   if ak.thoughtIhad then ak.thoughtIhad("rightleg") else affstrack.score.rightleg = 0 end 
   --   --ak.limbs.limbcount[target].rightleg = (ak.limbs.limbcount[target].lastpercentrightleg)
   --   _G[target.."rightlegdisablelimbdamage"] = nil
   --   --ak.limbs.limbcount[target].leftleg = (ak.limbs.limbcount[target].lastpercentleftleg)
   --   _G[target.."leftlegdisablelimbdamage"] = nil
   --   affstrack.score.leftleg = 0
   --elseif affstrack.score.leftleg&gt;0 and affstrack.score.leftleg&lt;100 then
   --   if ak.thoughtIhad then ak.thoughtIhad("leftleg") else affstrack.score.leftleg = 0 end
   --   --ak.limbs.limbcount[target].leftleg = (ak.limbs.limbcount[target].lastpercentleftleg)
   --   _G[target.."leftlegdisablelimbdamage"] = nil
   --   --ak.limbs.limbcount[target].rightleg = (ak.limbs.limbcount[target].lastpercentrightleg)
   --   _G[target.."rightlegdisablelimbdamage"] = nil
   --   affstrack.score.rightleg = 0
   --else
      if applycure and applycure.possiblemendings and #applycure.possiblemendings == 1 and applycure.possiblemendings[1] == "leftleg" then
         AKcalculateSalve()
         if affstrack.score.rightleg &gt;= 100 then
            ak.limbs.limbcount[target].rightleg = ak.limbs.limbcount[target].lastpercentrightleg
            cecho("\n\n&lt;cyan&gt;"..target.."'s &lt;yellow&gt;Right Leg &lt;cyan&gt;Count Is Off! Attempting To Correct!\n\n")
            _G[target.."rightlegdisablelimbdamage"] = nil
            if ak.thoughtIhad then ak.thoughtIhad("rightleg") else affstrack.score.rightleg = 0 end
         end
      elseif applycure and applycure.possiblemendings and #applycure.possiblemendings == 1 and applycure.possiblemendings[1] == "rightleg" then
         AKcalculateSalve()
         if affstrack.score.leftleg &gt;= 100 then
            ak.limbs.limbcount[target].leftleg = ak.limbs.limbcount[target].lastpercentleftleg
            cecho("\n\n&lt;cyan&gt;"..target.."'s &lt;yellow&gt;Left Leg &lt;cyan&gt;Count Is Off! Attempting To Correct!\n\n")
            _G[target.."leftlegdisablelimbdamage"] = nil
            if ak.thoughtIhad then ak.thoughtIhad("leftleg") else affstrack.score.leftleg = 0 end
         end
      else
				if ak.limbs.limbcount[target].maxbreaks.rightleg &lt; ak.limbs.limbcount[target].maxbreaks.leftleg and affstrack.score.leftleg &gt;= 100 and affstrack.score.rightleg &gt;= 100 then
					ak.limbs.limbcount[target].leftleg = ak.limbs.limbcount[target].lastpercentleftleg
					cecho("\n\n&lt;cyan&gt;"..target.."'s &lt;yellow&gt;Left Leg &lt;cyan&gt;Count Is Off! Attempting To Correct!\n\n")
					_G[target.."leftlegdisablelimbdamage"] = nil
					if ak.thoughtIhad then ak.thoughtIhad("leftleg") else affstrack.score.leftleg = 0 end				
				elseif ak.limbs.limbcount[target].maxbreaks.rightleg &gt; ak.limbs.limbcount[target].maxbreaks.leftleg and affstrack.score.rightleg &gt;= 100 and affstrack.score.leftleg &gt;= 100 then
					ak.limbs.limbcount[target].rightleg = ak.limbs.limbcount[target].lastpercentrightleg
					cecho("\n\n&lt;cyan&gt;"..target.."'s &lt;yellow&gt;Right Leg &lt;cyan&gt;Count Is Off! Attempting To Correct!\n\n")
					_G[target.."rightlegdisablelimbdamage"] = nil
					if ak.thoughtIhad then ak.thoughtIhad("rightleg") else affstrack.score.rightleg = 0 end
				else
					if ak.limbs.FindLastBrokenLeg() == "leftleg" and affstrack.score.leftleg &gt; 100 then
         	   ak.limbs.limbcount[target].leftleg = ak.limbs.limbcount[target].lastpercentleftleg
         	   cecho("\n\n&lt;cyan&gt;"..target.."'s &lt;yellow&gt;Left Leg &lt;cyan&gt;Count Is Off! Attempting To Correct!\n\n")
         	   _G[target.."leftlegdisablelimbdamage"] = nil
         	   if ak.thoughtIhad then ak.thoughtIhad("leftleg") else affstrack.score.leftleg = 0 end
					elseif affstrack.score.rightleg &gt; 100 then
         	   ak.limbs.limbcount[target].rightleg = ak.limbs.limbcount[target].lastpercentrightleg
         	   cecho("\n\n&lt;cyan&gt;"..target.."'s &lt;yellow&gt;Right Leg &lt;cyan&gt;Count Is Off! Attempting To Correct!\n\n")
         	   _G[target.."rightlegdisablelimbdamage"] = nil
         	   if ak.thoughtIhad then ak.thoughtIhad("rightleg") else affstrack.score.rightleg = 0 end
					end
				end
      end
   --end
   affstrack.score.leftleg = 0
   affstrack.score.rightleg = 0
   ak.scoreup(matches[2])
   cecho("&lt;cyan&gt;\n\n"..target.. " IS NO LONGER PRONE.  FAE|HE|SHE IS UP!!\n\n")
   cecho("&lt;cyan&gt;"..target.. " IS NO LONGER PRONE.  FAE|HE|SHE IS UP!!\n\n")
   cecho("&lt;cyan&gt;"..target.. " IS NO LONGER PRONE.  FAE|HE|SHE IS UP!!\n\n")
   cecho("&lt;cyan&gt;"..target.. " IS NO LONGER PRONE.  FAE|HE|SHE IS UP!!\n\n")
   if ak.limbs.limbcount[matches[2]] then
      _G[target.."rightlegdisablelimbdamage"] = nil
      _G[target.."leftlegdisablelimbdamage"] = nil
   end
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) stands up\.$</string>
						<string>^([\w'\-]+) rolls smoothly back to [\w'\-]+ feet\.$</string>
						<string>^([\w'\-]+) backs away and out of your reach\.$</string>
						<string>^([\w'\-]+) pushes off the ground, coming back up into a guard position\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Darkshade</name>
					<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then 
   if ak.ProTrackingConfirmed then 
      ak.ProTrackingConfirmed("darkshade") 
   else
      affstrack.score.darkshade = 100
      ak.scoreup(matches[2])
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) stiffens suddenly, \w+ features a masque frozen in agony\.$</string>
						<string>^([\w'\-]+) lets out a piercing scream, as if wounded by the very sunlight\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Awake</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	OppLostAff("sleep")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) wakes up with a gasp of pain\.$</string>
						<string>^([\w'\-]+) opens \w+ eyes and stretches languidly, a smile on \w+ face\.$</string>
						<string>^([\w'\-]+) opens \w+ eyes and yawns mightily\.$</string>
						<string>^([\w'\-]+) awakens with a start\.$</string>
						<string>^([\w'\-]+) opens [\w'\-]+ eyes and yawns mightily\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Prone</name>
					<script>if ak.ai() then
  return
end
--ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
  EchoForMajorAff("PRONE")
  OppGainedAff("prone")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Sweeping out with a blade hand, [\w'\-]+l strikes at the back of ([\w'\-]+)'s knee\.$</string>
						<string>^Drawing an enormous breath\, [\w'\-]+ exhales\, expelling a gale of wind with such force that ([\w'\-]+) is knocked over\.$</string>
						<string>^([\w'\-]+) is knocked forcefully off \w+ feet by the impact of [\w'\-]+\'s huge tail\.$</string>
						<string>^([\w'\-]+)\'s eyes close suddenly as \w+ falls asleep\.$</string>
						<string>^([\w'\-]+) is knocked off \w+ feet by the heaving ground\.$</string>
						<string>^[\w'\-]+ throws \w+ palms forward, releasing a stream of deadly blue light to cripple ([\w'\-]+)\.$</string>
						<string>^Drawing an enormous breath, you exhale, expelling a gale of wind with such force that ([\w'\-]+) is </string>
						<string>([\w'\-]+) is knocked forcefully off \w+ feet by the impact of your huge tail\.$</string>
						<string>^You hear two loud snaps and see ([\w'\-]+) fall to the ground\.$</string>
						<string>^You knock the legs out from under ([\w'\-]+) and send \w+ sprawling\.$</string>
						<string>^You duck low and smash your shield into the knees of ([\w'\-]+)\, causing them to buckle underneath \w+\.$</string>
						<string>^Stepping forward, you grab the useless .* of ([\w'\-]+), wrench \w+ violently forward, and throw \w+ to the ground\.$</string>
						<string>^You lunge downward, slamming the edge of .+ into the shins of ([\w'\-]+)\.</string>
						<string>^You swiftly sweep ([\w'\-]+) feet out from beneath</string>
						<string>^An .* tangles itself in the legs of ([\w'\-]+)\, sending \w+ sprawling to the ground\.$</string>
						<string>^A .* tangles itself in the legs of ([\w'\-]+)\, sending \w+ sprawling to the ground\.$</string>
						<string>^Dropping into a low crouch\, you expertly tangle .* with the legs of ([\w'\-]+)\, sending [\w'\-]+ sprawling\.$</string>
						<string>^The staff sweeps the legs out from under ([\w'\-]+)\, sending [\w'\-]+ sprawling\.$</string>
						<string>^The instep of your foot smashes into the [\w'\-]+ underarm of ([\w'\-]+)\, throwing [\w'\-]+ from [\w'\-]+ feet and sending [\w'\-]+ spinning to the ground\.$</string>
						<string>^[\w'\-]+ drops low\, tangling .+ with the legs of ([\w'\-]+) and sending [\w'\-]+ sprawling\.$</string>
						<string>^[\w'\-]+ drops to the floor and sweeps [\w'\-]+ legs round at ([\w'\-]+)\.$</string>
						<string>^([\w'\-]+) slips on a thin layer of fluid\, [\w'\-]+ feet flying out from under [\w'\-]+\.$</string>
						<string>^Water thunders down upon ([\w'\-]+)\, driving [\w'\-]+ relentlessly to [\w'\-]+ knees\.$</string>
						<string>^The [\w'\-]+ leg of ([\w'\-]+) buckles under the impact\, and [\w'\-]+ goes sprawling\.$</string>
						<string> ^[\w'\-]+ lunges downward, slamming theedge of .* into the shins of ([\w'\-]+)\.$</string>
						<string>^Sweeping out with a blade hand\, [\w'\-]+ strikes at the back of ([\w'\-]+)\'s knee\.$</string>
						<string>^As your blow cuts deeply into the leg of ([\w'\-]+)\, you drive savagely forward\, taking [\w'\-]+ clean off [\w'\-]+ feet\.$</string>
						<string>^You strike a savage blow with your quarterstaff at (\w+)\'s damaged leg\, bringing \w+ crashing to the ground\.$</string>
						<string>^(\w+) is flung violently from \w+ feet\.$</string>
						<string>^([\w'\-]+) has already fallen to the ground\.$</string>
						<string>^You deftly hook .* behind ([\w'\-]+)'s foot and send [\w'\-]+ tumbling off (.*) before driving the point of the weapon into [\w'\-]+ (right leg|left leg).$</string>
						<string>^(\w+) is swept off \w+ feet by the blast\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Expert Diagnose True</name>
					<script>if ak.ai() then return end
if ak.ProTrackingConfirmed then 
   ak.ProTrackingConfirmed(matches[3]) 
else 
   affstrack.score[matches[3]] = 100
   ak.scoreup(matches[2])
end
ak.diagnosingoffbal = true
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Casting a discerning eye over ([\w'\-]+), you determine that \w+ shows the symptoms of ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Expert Diagnose False</name>
					<script>if ak.ai() then return end
if ak.thoughtIhad then 
   ak.thoughtIhad(matches[3]) 
else
   affstrack.score[matches[3]] = 0
   ak.scoreup(matches[2])
end
ak.diagnosingoffbal = true</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Casting a discerning eye over ([\w'\-]+), you can see no symptoms of ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Dustbomb</name>
					<script>if ak.ai() then return end
affstrack.score.blackout = 100

tempTimer(4,[[affstrack.score.blackout = 0;ak.scoreup(target)]])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You lob a dust bomb at the ground and watch it explode.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Nausea</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   if ak.ProTrackingConfirmed then 
      ak.ProTrackingConfirmed("nausea") 
   else
      affstrack.score.nausea = 100
      ak.scoreup(matches[2])
   end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) doubles over\, vomiting violently\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Confusion</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
  if ak.ProTrackingConfirmed then 
     ak.ProTrackingConfirmed("confusion") 
  else
     affstrack.score.confusion = 100
     ak.scoreup(matches[2])
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) looks about bemusedly\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Slickness</name>
					<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(multimatches[2][2]) and not table.contains(ak.slickfucks,multimatches[2][2]) then 
  ak.defs.sileris = false
  if partyRelayed then partyRelayed("slickness") end
  --OppGainedAff("slickness")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>The protective coating covering the skin of</string>
						<string>^The protective coating covering the skin of ([\w'\-]+) sloughs off\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Rolling Getup</name>
					<script>if ak.ai() then return end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) rolls smoothly back to [\w'\-]+ feet\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Diagnosing Off Balance</name>
					<script>if ak.ai() then return end
ak.diagnosingoffbal = true
ak.deleteFull()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You can not do that again so soon.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Diagnosing On Balance</name>
					<script>if ak.ai() then return end
ak.diagnosingoffbal = false
ak.deleteFull()
if currentlydiagnosingak and currentlydiagnosingak ~= "" then
   send(currentlydiagnosingak)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You may check someone for afflictions once again.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Invalid Aff</name>
					<script>if ak.ai() then return end
if currentlydiagnosingak then cecho("&lt;cyan&gt;\n\n\n"..currentlydiagnosingak.." IS NOT A VALID AFF\n\n") end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>That is not a valid affliction to check for.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Mickey</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   ak.mickey = false
   OppGainedAff("nausea")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) pops a mickey into \w+ mouth\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Paranoia</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
  OppGainedAff("paranoia")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>The raven dives at </string>
						<string>^The raven dives at ([\w'\-]+) and pulls up short\, making \w+ uneasy\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Deafness</name>
					<script>if ak.ai() then return end
if IsTargetted(multimatches[2][2]) then   
   affstrack.score.deaf = 100
   tempTimer(5,[[affstrack.score.deaf = 0;ak.scoreup(]]..multimatches[2][2]..[[)]])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A brief look of concentration crosses the face of</string>
						<string>A brief look of concentration crosses the face of ([\w'\-]+)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Snake Bite</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   --ak.defs.sileris = false
   OppGainedAff("scytherus")
   ak.scoreup(matches[2])
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^An .* sinks its fangs into the neck of ([\w'\-]+)\, injecting a potent dose of toxin\.$</string>
						<string>^A .* sinks its fangs into the neck of ([\w'\-]+)\, injecting a potent dose of toxin\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Masochism</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   if ak.ProTrackingConfirmed then 
      ak.ProTrackingConfirmed("masochism") 
   else
      affstrack.score.masochism = 100
      ak.scoreup(matches[2])
   end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) drives a clenched fist into [\w'\-]+ gut\.$</string>
						<string>^([\w'\-]+) uses [\w'\-]+ right foot to stomp on [\w'\-]+ left as hard as possible\.$</string>
						<string>^([\w'\-]+) smiles as [\w'\-]+ rams [\w'\-]+ fist into [\w'\-]+ jaw\.$</string>
						<string>^With the heel of [\w'\-]+ palm\, ([\w'\-]+) smacks [\w'\-]+ upside the head\.$</string>
						<string>^([\w'\-]+) uses [\w'\-]+ [\w'\-]+ foot to stomp on [\w'\-]+ [\w'\-]+ as hard as possible\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Deafness</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   if ak.ProTrackingConfirmed then 
      ak.ProTrackingConfirmed("deaf") 
   else
      affstrack.score.deaf = 100
      ak.scoreup(matches[2])
   end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^The side of ([\w'\-]+)\'s head is lightly struck by [\w'\-]+\'s rapier\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Infestation</name>
					<script>if ak.ai() then
  return
end
if IsTargetted(multimatches[2][2]) then
  if ak.thoughtIhad then
    ak.thoughtIhad(multimatches[2][3])
  end
  OppGainedAff(multimatches[2][3])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You sense through your malignant connection to your infestation that </string>
						<string>^You sense through your malignant connection to your infestation that ([\w'\-]+) has been cursed with ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Attended</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   affstrack.score.deaf = 100
   affstrack.score.blind = 100
   ak.scoreup(matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^[\w'\-]+ glows with an emerald hue and snaps [\w'\-]+ fingers at ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Claustrophobia</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   if ak.ProTrackingConfirmed then 
      ak.ProTrackingConfirmed("claustrophobia") 
   else
      affstrack.score.claustrophobia = 100
      ak.scoreup(matches[2])
   end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) begins to pant in terror\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Agoraphobia</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   if ak.ProTrackingConfirmed then 
      ak.ProTrackingConfirmed("agoraphobia") 
   else
      affstrack.score.agoraphobia = 100
      ak.scoreup(matches[2])
   end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) is gripped with fear\, staring out with terrified eyes\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Dementia</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   if ak.ProTrackingConfirmed then 
      ak.ProTrackingConfirmed("dementia") 
   else
      affstrack.score.dementia = 100
      ak.scoreup(matches[2])
   end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) stares about [\w'\-]+ frenziedly\, wild\-eyed\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>TimeLoop</name>
					<script>if ak.ai() then return end
if IsTargetted(multimatches[2][2]) then 
   OppGainedAff("timeloop")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Grey fog begins to rise from the suddenly panicked-looking</string>
						<string>^Grey fog begins to rise from the suddenly panicked\-looking ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Parried Venom Decline</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) and ak.thoughtIhad then
   affstrack.score.prone = 0
   affstrack.score.scalded = 0  
   ak.thoughtIhad("nausea") 
   ak.thoughtIhad("paralysis") 
elseif IsTargetted(matches[2]) then
   affstrack.score.prone = 0
   affstrack.score.scalded = 0
   affstrack.score["nausea"] = 0
   ak.scoreup(matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) parries the attack with a deft manoeuvre.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Bcry</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	OppGainedAff("sensitivity")	
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#55ffff</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) falls to [\w'\-]+ knees and clutches [\w'\-]+ ears as the shaft of sound strikes ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Nairat</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   affstrack.score.bound = 100
   ak.scoreup(matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Ethereal bonds flash forth to bind ([\w'\-]+) as [\w'\-]+ gaze falls upon a nairat rune\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Epilepsy</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   if ak.ProTrackingConfirmed then 
      ak.ProTrackingConfirmed("epilepsy") 
   else
      affstrack.score.epilepsy = 100
      ak.scoreup(matches[2])
   end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) begins to jerk and shake violently\, foaming at the mouth\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Frozen Disrupt</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   affstrack.score.disrupt = 100
   if affstrack.score.frozen &lt; 100 then affstrack.score.frozen = 100 end
   ak.scoreup(matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) shivers particularly intensely\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Artificing</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Smash</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[4]) then
   smashlimb = matches[2]..matches[3]
   if affstrack.score[smashlimb] &lt; 100 then
      OppGainedAff(smashlimb)
   end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The crackle of snapping bone can be heard as a crystalline golem viciously twists the ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Timeflux Wear Off</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
   if fluxtimer then 
      killTimer(fluxtimer)
      fluxtimer = nil 
   end
   OppLostAff("timeflux")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) appears far less sluggish all of a sudden\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Failed Hypothermia</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
   if affstrack.score.frozen &gt; 200 then
      affstrack.score.frozen = 200
   end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A crystalline golem blasts ([\w'\-]+) with an icy stream of water\, but it does little more than irritate [\w'\-]+\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Scalded</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
   OppGainedAff("scalded")
   if ak.scaldTimer then killTimer(ak.scaldTimer) end
   ak.scaldTimer = tempTimer(17,[[
   	affstrack.score.scalded = 0
   	ak.scoreup(]]..matches[2]..[[)
   ]])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Leaning down over the incapacitated form of ([\w'\-]+)\, a crystalline golem sprays a stream of super\-heated steam directly into [\w'\-]+ face\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hypothermia</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(multimatches[2][2]) then
   affstrack.score.frozen = 300
   affstrack.score.hypothermia = 100
   ak.scoreup(multimatches[2][2])
end
--affstrack.score.frozen = (affstrack.score.frozen * 2)-100</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>As a crystalline golem blasts </string>
							<string>^As a crystalline golem blasts ([\w'\-]+) with icy water, [\w'\-]+ begins to shake and tremble uncontrollably\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dehydrate</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
   affstrack.score.prone = 100
   if affstrack.score.aflame &lt; 100 then
      affstrack.score.aflame = 100
   end
   if dehydratetimer then 
      killTimer(dehydratetimer)
      dehydratetimer = nil 
   end
   OppGainedAff("dehydrate")
   dehydratetimer = tempTimer(45, [[OppLostAff("dehydrate")]])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) winces in evident discomfort as a crystalline golem points a single appendage at [\w'\-]+\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Conflagrate</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
   if affstrack.score.aflame &lt; 200 then
      affstrack.score.aflame = 200
   end
   OppGainedAff("conflagrate")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^As a crystalline golem turns toward ([\w'\-]+), the flames crackling across</string>
							<string>^The conflagration about ([\w'\-]+) continues to rage, searing flesh from bone\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>TimeFlux</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
if fluxtimer then killTimer(fluxtimer);fluxtimer = nil end
OppGainedAff("timeflux")
fluxtimer = tempTimer(65, [[OppLostAff("timeflux")]])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^As a crystalline golem begins to pulse with a strange inner glow, ([\w'\-]+) sways unsteadily\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Shikudo</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hiraku Anorexia</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then 
	local aff = "anorexia"
	ak.AddedAffReset(aff)
	ak.AddedAffReset("stuttering")
	affstrack.score[aff] = 100
	affstrack.score["stuttering"] = 100
	ak.echogain("anorexia, stuttering")
	ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The staff smashes into the face of ([\w'\-]+) with a sickening crunch\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Hiru Dizziness</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then 
	local aff = "dizziness"
	ak.AddedAffReset(aff)
	affstrack.score[aff] = 100
	ak.echogain(aff:title())
	ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The staff connects to the side of ([\w'\-]+)\'s head with a resounding crack\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Ruku clumsiness/healthleech</name>
						<script>if ak.ai() then return end
--ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
	if ak.kata and ak.kata &gt;= 9 then
		OppGainedAff("clumsiness, healthleech")
	elseif affstrack.score.clumsiness &lt;100 then 
		local aff = "clumsiness"
		ak.AddedAffReset(aff)
		affstrack.score[aff] = 100
		ak.echogain(aff:title())
		ak.scoreup(matches[2])
	else 
	  local aff = "healthleech"
		ak.AddedAffReset(aff)
		affstrack.score[aff] = 100
		ak.echogain(aff:title())
		ak.scoreup(matches[2])
	end
end

--if kata &gt; 8 ruku gives both</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You whip a .+ at ([\w'\-]+) in a controlled arc\, bringing its length to crack against [\w'\-]+ [\w'\-]+ arm\.$</string>
							<string>^You spin a full rotation\, bringing .+ staff around in a blur of motion to smash into the [\w'\-]+ arm of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Ruku Slickness</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then 
  local aff = "slickness"
	ak.AddedAffReset(aff)
	affstrack.score[aff] = 100
	ak.echogain(aff:title())
	ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) staggers as the staff cracks across [\w'\-]+ ribs\, sweat breaking out upon [\w'\-]+ forehead\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Kuro weariness/lethargy</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then
	if ak.kata &gt;= 11 then
		OppGainedAff("lethargy, weariness")
	elseif affstrack.score.weariness&lt;100 then 
		local aff = "weariness"
		ak.AddedAffReset(aff)
		affstrack.score[aff] = 100
		ak.echogain(aff:title())
		ak.scoreup(matches[2])
	else
		local aff = "lethargy"
		ak.AddedAffReset(aff)
		affstrack.score[aff] = 100
		ak.echogain(aff:title())
		ak.scoreup(matches[2])
	end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The staff cracks across the [\w'\-]+ thigh of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Livestrike asthma</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then 
	local aff = "asthma"
	ak.AddedAffReset(aff)
	affstrack.score[aff] = 100
	ak.echogain(aff:title())
	ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The breath of ([\w'\-]+) leaves [\w'\-]+ in an explosive gasp as the end of the staff smashes home\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Needle crushedthroat</name>
						<script>if ak.ai() then return end
ak.limbs.ParseonLine()
if IsTargetted(matches[2]) then 
	local aff = "crushedthroat"
	ak.AddedAffReset(aff)
	affstrack.score[aff] = 100
	ak.echogain(aff:title())
	ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The end of the staff smashes into the exposed throat of ([\w'\-]+)\, crushing cartilage\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Flashheel Bonus Limb</name>
						<script>if ak.ai() then return end
if not ak.limbs.shikudo.flashed then
  return
end
ak.limbs.ParseonLine()
local smashlimb = ak.limbs.shikudo.flashed.."leg"
if affstrack.score[smashlimb] &lt; 100 then
   OppGainedAff(smashlimb)
end
ak.limbs.shikudo.flashed = false

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>You feel the satisfying crunch of bone under the impact of your heel.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Air Elemental</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Disloyalty</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[4]) then
   affstrack.score.disloyalty = 100
	 ak.scoreup(matches[4])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A howling wind sweeps over ([\w'\-]+)\, ripping flesh from bone and leaving [\w'\-]+ face a bloody ruin\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Hamstring Lost</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	OppLostAff("hamstring")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) seems able to move more freely all of a sudden\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Peace</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	OppLostAff("pacifism")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+)\'s eyes are filled with compassion and peace\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Clumsiness</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
  if ak.ProTrackingConfirmed then 
     ak.ProTrackingConfirmed("clumsiness") 
  else
     affstrack.score.clumsiness = 100
     ak.scoreup(matches[2])
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) misses you with [\w'\-]+ dirk by a hair\.$</string>
						<string>^([\w'\-]+) points [\w'\-]+ finger at you\, but nothing seems to happen\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Blindness</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then   
   affstrack.score.blind = 100
   tempTimer(6,[[affstrack.score.blind = 0;ak.scoreup(]]..matches[2]..[[)]])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) blinks slowly\, and begins to tremble\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Not Asthmatic</name>
					<script>if ak.thoughtIhad and affstrack.score.asthma &gt; 0 then
	ak.thoughtIhad("asthma")	
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You attempt to squeeze the life out of the effigy in your hands, but find the torso too tight.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Agith'tai</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
  OppGainedAff(gmcp.Char.Afflictions.Add.name)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Your mental defences lash out against ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Paralysis</name>
					<script>if ak.ai() then return end
--ak.limbs.ParseonLine()
if IsTargetted(matches[2]) and affstrack.score.paralysis &lt; 100 then 
  OppGainedAff("paralysis")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Horror overcomes ([\w'\-]+)'s face as ([\w'\-]+) body stiffens into paralysis\.$</string>
						<string>^([\w'\-]+) stiffens suddenly\, \w+ features a masque frozen in agony\.$</string>
						<string>^([\w'\-]+)'s body stiffens rapidly with paralysis\.$</string>
						<string>^The body of ([\w'\-]+) locks in paralysis as [\w'\-]+ directs a short burst of arcane power in [\w'\-]+ direction\.$</string>
						<string>^Lunging to the side\, [\w'\-]+ brings [\w'\-]+ shield around to smash into the spine of ([\w'\-]+)\.$</string>
						<string>^[\w'\-]+ recites an epic tale of the heroism of Nicator to ([\w'\-]+)\.$</string>
						<string>^Horror overcomes the face of ([\w'\-]+) as [\w'\-]+ body locks in paralysis\.$</string>
						<string>^([\w'\-]+)\'s limbs suddenly lock up\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Psion Epseth</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[4]) then
   smashlimb = matches[2]..matches[3]
   if affstrack.score[smashlimb] &lt; 100 then
      OppGainedAff(smashlimb)
   end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^[\w'\-]+ ducks low\, \w+ blade slicing into the ([\w'\-]+) ([\w'\-]+) of ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Not Crushed Throat</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	if affstrack.score.crushedthroat&gt;0 then 
		if ak.thoughtIhad then 
			ak.thoughtIhad("crushedthroat") 
		else 
			affstrack.score.crushedthroat = 0 
		end  
	end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) is not sufficiently incapacitated for you to dispatch \w+\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Hypersomnia</name>
					<script>if IsTargetted(matches[2]) then 
  OppGainedAff("hypersomnia")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) suddenly appears tired all of a sudden\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Camus Bite</name>
					<script>ak.ignoreScy = true
enableTrigger("Scytherus Bite Prompt")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You sink your fangs into \w+\, injecting just the proper amount of camus\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Relapsed</name>
					<script>if ak.ignoreScy then return end
if ak.ai() then return end
if IsTargetted(matches[2]) then 
	if ak.ProTrackingConfirmed then 
	   ak.ProTrackingConfirmed("scytherus") 
	elseif not ak.ProTrackingConfirmed then 
	   affstrack.score.scytherus = 100
	   ak.scoreup(matches[2])
	end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) screams out in agony\, struck by the effects of a vicious venom\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Scytherus Bite Prompt</name>
					<script>ak.ignoreScy = false
disableTrigger("Scytherus Bite Prompt")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string></string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>7</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Beez</name>
					<script>if ak.ai() then return end
--ak.limbs.ParseonLine()
if IsTargetted(multimatches[2][2]) and affstrack.score.paralysis &lt; 100 then 
  OppGainedAff("paralysis")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>The angry swarm of bees descends upon </string>
						<string>^The bees sting (\w+) into paralysis\$.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Nausea</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) and affstrack.score.paralysis &lt; 100 then 
  OppGainedAff("nausea")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) sways unsteadily as \w+ face turns an unpleasant shade of green\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Health and Mana</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Contemplate</name>
					<script>ak.currentmana = matches[3]
ak.maxmana = matches[4]
local currMana = math.ceil((matches[3]/matches[4])*100)
cecho("\n&lt;white&gt;[&lt;blue&gt;Mana&lt;white&gt;]: &lt;yellow&gt;"..currMana.."%")
if not ak.pause then send("pt "..matches[2].."'s mana at "..ak.currentmana.."/"..ak.maxmana) end
if (currMana &lt;= 40) then
	cecho("\n READY TO GO!!")
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+)\'s mana stands at (\d+)\/(\d+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Moss</name>
					<script>if IsTargetted(matches[2]) then
	ak.currentmana = ak.currentmana + (ak.maxmana*.08)
	if ak.currentmana &gt; tonumber(ak.maxmana) then
		ak.currentmana = ak.maxmana
	end
	ak.currenthealth = ak.currenthealth + (ak.maxhealth*.08)
	if ak.currenthealth &gt; tonumber(ak.maxhealth) then
		ak.currenthealth = ak.maxhealth
	end
	ak.scoreup(target)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) eats some irid moss\.$</string>
						<string>^(\w+) eats a potash crystal\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Sip</name>
					<script>if IsTargetted(matches[2]) then

	ak.currentmana = ak.currentmana + (ak.maxmana*.2)
	if ak.currentmana &gt; tonumber(ak.maxmana) then
		ak.currentmana = ak.maxmana
	end
	ak.currenthealth = ak.currenthealth + (ak.maxhealth*.2)
	if ak.currenthealth &gt; tonumber(ak.maxhealth) then
		ak.currenthealth = ak.maxhealth
	end

	if affstrack.score.anorexia&gt;0 then 
		if ak.thoughtIhad then 
			ak.thoughtIhad("anorexia") 
		else 
			affstrack.score.anorexia = 0 
		end  
	end
	if affstrack.score.voyria &gt; 0 and affstrack.score.latency == 0 then
		affstrack.score.voyria = 0
	elseif (not ak.defs.speed) then
		if not SpeedTimer then
			SpeedTimer = tempTimer(4.5,[[
      	ak.defs.speed = true
      	SpeedTimer = false 
      	ak.scoreup(]]..matches[2]..[[)  
      	]])
		end
	else
     --ak.currentmana
     --ak.maxmana
	end
	ak.scoreup(matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) takes a drink from .* vial\.$</string>
						<string>^([\w'\-]+) takes a drink from a carved bone vial\, a miniature carved dragon biting at [\w'\-]+ lips\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Enervate</name>
					<script>if IsTargetted(matches[2]) then 
	ak.currentmana = ak.currentmana - (ak.maxmana/4) 
	ak.scoreup(matches[2])
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^[\w'\-]+ frowns in concentration as a tendril of yellow energy flashes out and attaches to ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Divine</name>
					<script>ak.knownmaxhealth = ak.knownmaxhealth or {}
ak.knownmaxhealth[matches[2]] = matches[3] 
ak.scoreup(matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) possesses \d+ health of (\d+)\, \d+ mana of \d+\, and \d+ willpower\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Assess</name>
					<script>ak.knownmaxhealth = ak.knownmaxhealth or {}
ak.knownmaxhealth[multimatches[2][2]] = multimatches[2][4] 
ak.currenthealth = multimatches[2][3]
ak.maxhealth = multimatches[2][4]
local currHealth = math.ceil((multimatches[2][3]/multimatches[2][4])*100)
ak.healthpercent = currHealth
cecho("\n&lt;white&gt;[&lt;yellow&gt;Health&lt;white&gt;]: &lt;green&gt;"..currHealth.."%")
if not ak.pause then send("pt "..multimatches[2][2].."'s health at "..ak.currenthealth.."/"..ak.maxhealth) end
ak.scoreup(multimatches[2][2])

</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You glance over</string>
						<string>^You glance over ([\w'\-]+) and see that \w+ health is at (\d+)\/(\d+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Gauge</name>
					<script>ak.knownmaxhealth = ak.knownmaxhealth or {}
ak.knownmaxhealth[matches[2]] = matches[4] 
ak.currenthealth = matches[3]
ak.maxhealth = matches[4]
local currHealth = math.ceil((matches[3]/matches[4])*100)
ak.healthpercent = currHealth
ak.scoreup(matches[2])
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Gazing upon ([\w'\-]+), you establish that \w+ has (\d+) health remaining of (\d+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Falcon Observe</name>
					<script>enableTrigger("Falcon Observe Capture")
ak.deleteFull()
falcon = falcon or {}
falcon.areawho = {}
falcon.targetin = false</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Your falcon reports seeing the following people in its area:</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Falcon Observe Capture</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Add</name>
						<script>ak.knownmaxhealth = ak.knownmaxhealth or {}
ak.knownmaxhealth[matches[2]] = matches[4] 
falcon = falcon or {}
falcon.areawho = falcon.areawho or {}
if gmcp.Char.Name.name ~= matches[2] then
	table.insert(falcon.areawho,matches[2])
end
if IsTargetted(matches[2]) then 
	falcon.targetin = true
else
	--ak.deleteFull()
end

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+)\s+(\d+) health out of (\d+)\.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Falcon Observe Kill</name>
						<script>if not falcon.targetin then
	ak.deleteFull()
end
disableTrigger("Falcon Observe Capture")
if ndba and #falcon.areawho &gt; 0 then
	--cecho("&lt;cyan&gt;"..ndba.concatand(falcon.areawho).." are in " .. gmcp.Room.Info.area) 
	send("pt "..ndba.concatand(falcon.areawho).." are in " .. gmcp.Room.Info.area) 
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string></string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>7</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Doll Check</name>
					<script>if IsTargetted(multimatches[2][2]) then 
	ak.currentmana = ak.currentmana - (ak.maxmana/4) 
	ak.knownmaxhealth = ak.knownmaxhealth or {}
  ak.knownmaxhealth[matches[2]] = matches[3] 
	ak.scoreup(multimatches[2][2])
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You gaze into the eyes of the doll and see that</string>
						<string>^You gaze into the eyes of the doll and see that ([\w'\-]+) has a health of (\d+)\/(\d+) and a mana of(\d+)\/(\d+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Con Drop</name>
					<script>--(-2 con)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) gasps a panicked breath before doubling over in pain\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Con Increase</name>
					<script>-- (+2 con)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) expertly breaks the seal of a reforming phial of enhancement formula and brings it to [\w'\-]+ mouth\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Bleed</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>No Bleed</name>
						<script>if ak.bleeding and ak.bleeding &gt; 0 and affstrack.score.haemophilia &gt; 0 then
	ak.thoughtIhad("haemophilia")
end
ak.bleeding = 0
ak.scoreup(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You observe that ([\w'\-]+) is not bleeding at all\.$</string>
							<string>^([\w'\-]+) does not yet bleed enough for you to unleash the coagulation\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bleed 0-100</name>
						<script>ak.bleedupdate(40)
ak.scoreup(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You observe a small amount of blood trickling from minor wounds on ([\w'\-]+)\'s body\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bleed 100-200</name>
						<script>ak.bleedupdate(100)
cecho("&lt;red&gt;\n\nBleeding for over 100!\n\n")
ak.scoreup(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You observe that ([\w'\-]+) is bleeding slightly\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bleed 200-300</name>
						<script>ak.bleedupdate(200)
cecho("&lt;red&gt;\n\nBleeding for over 200!\n\n")
ak.scoreup(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You observe thin red rivulets of blood dripping from ([\w'\-]+)\'s wounds\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bleed 300-400</name>
						<script>ak.bleedupdate(300)
cecho("&lt;red&gt;\n\nBleeding for over 300!\n\n")
ak.scoreup(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You observe sluggish bleeding from ([\w'\-]+)\'s wounds\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bleed 400-500</name>
						<script>ak.bleedupdate(400)
cecho("&lt;red&gt;\n\nBleeding for over 400!\n\n")
ak.scoreup(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You observe free-flowing blood streaming from ([\w'\-]+)\'s wounds\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bleed 500-600</name>
						<script>ak.bleedupdate(500)
cecho("&lt;red&gt;\n\nBleeding for over 500!\n\n")
ak.scoreup(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You observe great gouts of blood spurting from ([\w'\-]+)\'s many wounds\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bleed 600-700</name>
						<script>ak.bleedupdate(600)
cecho("&lt;red&gt;\n\nBleeding for over 600!\n\n")
ak.scoreup(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You observe that the wounds of ([\w'\-]+) are bleeding most severely\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bleed 700-800</name>
						<script>ak.bleedupdate(700)
cecho("&lt;red&gt;\n\nBleeding for over 700! BURN EMM!\n\n")
ak.scoreup(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You observe heavy torrents of lifeblood spilling from ([\w'\-]+)\'s near\-fatal wounds\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bleed 800-900</name>
						<script>ak.bleedupdate(800)
cecho("&lt;red&gt;\n\nBleeding for over 800!\n\n")
ak.scoreup(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You observe great rivers of blood running from the open wounds of (\w+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bleed 900-1000</name>
						<script>ak.bleedupdate(900)
cecho("&lt;red&gt;\n\nBleeding for over 900!\n\n")
ak.scoreup(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You observe arterial spray gushing from the open wounds of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bleed 1000+</name>
						<script>ak.bleedupdate(1000)
cecho("&lt;red&gt;\n\nBleeding for over 1000!\n\n")
ak.scoreup(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#000000</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You observe that ([\w'\-]+) will shortly bleed to death\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Curse Bleeded</name>
						<script>if IsTargetted(matches[2]) and affstrack.score.haemophilia &gt; 0 then 	
	local bleedr = ak.bleedincrease or 65
  ak.bleeding = ak.bleeding or 0
	ak.bleeding = ak.bleeding + bleedr
	ak.scoreup(matches[2])
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Blood begins to run from the eyes and nose of ([\w'\-]+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Bleed Destroyed</name>
						<script>ak.bleeding = 0
ak.scoreup(matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) writhes in agony as steam begins rising from [\w'\-]+ skin\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Applied</name>
					<script>if IsTargetted(matches[2]) then
	if gmcp and gmcp.Char and gmcp.Char.Vitals and gmcp.Char.Vitals.charstats[3] and gmcp.Char.Vitals.charstats[3] == "Spec: Two Handed" then			
		send("battlefury perceive "..target)
	end
	--if ak.twoh[ak.twoh.salveconversion[matches[3]]] &gt; 5 then
		--ak.twoh[ak.twoh.salveconversion[matches[3]]] = ak.twoh[ak.twoh.salveconversion[matches[3]]] - 2
		--cecho("&lt;yellow&gt;"..ak.twoh.salveconversion[matches[3]]..":&lt;cyan&gt; "..ak.twoh[ak.twoh.salveconversion[matches[3]]])
	--else
		ak.twoh[ak.twoh.salveconversion[matches[3]]] = ak.twoh[ak.twoh.salveconversion[matches[3]]] - 1
		if ak.twoh[ak.twoh.salveconversion[matches[3]]] &lt; 0 then ak.twoh[ak.twoh.salveconversion[matches[3]]] = 0 end
		cecho("&lt;yellow&gt;"..ak.twoh.salveconversion[matches[3]]..":&lt;cyan&gt; "..ak.twoh[ak.twoh.salveconversion[matches[3]]])
	--end
	if matches[3] == "legs" then
		ak.tendonHit()
	elseif matches[3] == "arms" then
		ak.wristHit()
	elseif matches[3] == "head" then
		ak.skullHit()
	elseif matches[3] == "torso" then
		ak.ribHit()
	end
	ak.scoreup(matches[2])
end
--legs,arms,head,torso</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) takes some elixir from .* and rubs it into [\w'\-]+ ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Cures(i)</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Applied</name>
					<script>if ak.ai() then return end

if ak.limbs.shikudoParse then
  ak.limbs.shikudoParse()
end

if not IsTargetted(matches[2]) then return end
if matches[3] == "skin" and not ak.defs.mass then 
   ak.defs.mass = true
	 ak.bals.salve = true
   cecho("&lt;cyan&gt;Mass Consideration Removed") 
elseif ak.bals.salve then
	if affstrack.score.aeon == 100 and affstrack.score.slickness == 100 then
	   return
	else 
	   affstrack.score.tempslickness= 0
	   ak.bals.salve = false
	   if affstrack.score.slickness&gt;0 then 
	      if ak.thoughtIhad then 
					ak.thoughtIhad("slickness") 
				else 
					affstrack.score.slickness = 0 
				end  
	   end
	   ak.cure.apply(matches[3]) 		
		 if ak.timers.apply then			
		 	killTimer(ak.timers.apply)		
		 end
	   ak.timers.apply = tempTimer(.8,[[ak.bals.salve = true;ak.timers.apply = false]])
	   --cecho("&lt;cyan&gt;Processed Cures")
	end
else
	if ak.timers.apply then 
		ak.bals.salve = true
		cecho("&lt;cyan&gt;Ignored Cures")
	end
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#0000ff</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) takes some (?:balm|salve) from a vial and rubs it on \w+ ([\w'\-]+).$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Focused</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	if ak.bals.focus then
		affstrack.score.rixil = 0
		ak.bals.focus = false
		ak.timers.focus = tempTimer(2.2,[[ak.bals.focus = true;ak.timers.focus = nil]])--2.2
		ak.cure.focus(matches[2])
	end
	ak.currentmana = ak.currentmana - 250
  affstrack.score.rixil = 0
  if not ak.timers.focus then 
     if not ak.bals.focus then  
         ak.bals.focus = true 
         cecho("&lt;cyan&gt;Ignored Cures")
         if ak.thoughtIhad then ak.thoughtIhad("impatience") else affstrack.score.impatience = 0 end
      end 
  end
  if affstrack.score.impatience&gt;0 then
     if ak.thoughtIhad then ak.thoughtIhad("impatience") else affstrack.score.impatience = 0 end
     cecho("\n\n&lt;yellow&gt;IMPATIENCE CURED!!")
     cecho("\n\n&lt;yellow&gt;IMPATIENCE CURED!!")
     cecho("\n\n&lt;yellow&gt;IMPATIENCE CURED!!")
  end
end


</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^A look of extreme focus crosses the face of ([\w'\-]+).$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Opponent Smoked</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Standard Smoke</name>
						<script>if not IsTargetted(multimatches[1][2]) then return end
if ak.ai() then return end
if affstrack.score.asthma&gt;0 then 
	if ak.thoughtIhad then ak.thoughtIhad("asthma") else affstrack.score.asthma = 0 end   
	ocured = ocured or {}
	ocured.smoked = {}
end
if string.find(multimatches[3][1],"seems suddenly unburdened, clarity reasserting itself upon") then
  OppLostAff("unweavingspirit")
  return
elseif not ak.defs.reRebounding then 
	affssmoke() 
	ak.randomaffs = ak.randomaffs or 0
	ocured.smoked = {}
else
	ak.defs.reRebounding = false
	reboundingaccountak = true
	if reboundingaktime then killTimer(reboundingaktime) end
	reboundingaktime = tempTimer(11,[[reboundingaccountak = false]])
	ak.scoreup(ak.currentsmoke)
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) takes a long drag off \w+ (.*)\.$</string>
							<string>1</string>
							<string>^(.*)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>5</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Fancy Smoke</name>
						<script>if not IsTargetted(multimatches[1][2]) then return end
if ak.ai() then return end
if affstrack.score.asthma&gt;0 then 
	if ak.thoughtIhad then ak.thoughtIhad("asthma") else affstrack.score.asthma = 0 end   
	ocured = ocured or {}
	ocured.smoked = {}
end
if string.find(multimatches[3][1],"seems suddenly unburdened, clarity reasserting itself upon") then
  OppLostAff("unweavingspirit")
  return
elseif not ak.defs.reRebounding then 
	affssmoke() 
	ak.randomaffs = ak.randomaffs or 0
	ocured.smoked = {}
else
	ak.defs.reRebounding = false
	reboundingaccountak = true
	if reboundingaktime then killTimer(reboundingaktime) end
	reboundingaktime = tempTimer(11,[[reboundingaccountak = false]])
	ak.scoreup(ak.currentsmoke)
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A great gurgling sound is heard as ([\w'\-]+) takes a long drag from .*</string>
							<string>1</string>
							<string>^(.*)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>5</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Fancier Smoke</name>
						<script>if not IsTargetted(multimatches[1][2]) then return end
if ak.ai() then return end
if affstrack.score.asthma&gt;0 then 
	if ak.thoughtIhad then ak.thoughtIhad("asthma") else affstrack.score.asthma = 0 end   
	ocured = ocured or {}
	ocured.smoked = {}
end
if string.find(multimatches[3][1],"seems suddenly unburdened, clarity reasserting itself upon") then
  OppLostAff("unweavingspirit")
  return
elseif not ak.defs.reRebounding then 
	affssmoke() 
	ak.randomaffs = ak.randomaffs or 0
	ocured.smoked = {}
else
	ak.defs.reRebounding = false
	reboundingaccountak = true
	if reboundingaktime then killTimer(reboundingaktime) end
	reboundingaktime = tempTimer(11,[[reboundingaccountak = false]])
	ak.scoreup(ak.currentsmoke)
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) takes a long\, smooth drag from [\w'\-]+ pipe\.$</string>
							<string>1</string>
							<string>^(.*)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>5</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Fanciest Smoke</name>
						<script>if not IsTargetted(multimatches[1][2]) then return end
if ak.ai() then return end
if affstrack.score.asthma&gt;0 then 
	if ak.thoughtIhad then ak.thoughtIhad("asthma") else affstrack.score.asthma = 0 end   
	ocured = ocured or {}
	ocured.smoked = {}
end
if string.find(multimatches[3][1],"seems suddenly unburdened, clarity reasserting itself upon") then
  OppLostAff("unweavingspirit")
  return
elseif not ak.defs.reRebounding then 
	affssmoke() 
	ak.randomaffs = ak.randomaffs or 0
	ocured.smoked = {}
else
	ak.defs.reRebounding = false
	reboundingaccountak = true
	if reboundingaktime then killTimer(reboundingaktime) end
	reboundingaktime = tempTimer(11,[[reboundingaccountak = false]])
	ak.scoreup(ak.currentsmoke)
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) takes a few short puffs from [\w'\-]+ pipe\.$</string>
							<string>1</string>
							<string>^(.*)$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>5</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Opponent Ate</name>
					<script>if ak.ai() then return end
local donotrun = { "azurite mote", "gypsum crystal", "echinacea root",  "bisemutum chip", "kola nut", "black cohosh root", "skullcap flower", "dolomite grain", "irid moss", "potash crystal", "quartz grain", "ball of myrrh gum", "antimony flake", "ginger root",}
local ated = multimatches[1][3]
ated = ated:gsub("withered ", "")
if table.contains(donotrun, ated) then return end
if not IsTargetted(multimatches[1][2]) then return end

if string.find(multimatches[3][1],"The light behind the eyes of") then
  OppLostAff("unweavingmind")
  return
elseif string.find(multimatches[3][1],"suddenly seems much more vital") then
  OppLostAff("unweavingbody")
  return
elseif string.find(multimatches[3][1],"straightens, as if some great burden had been lifted from") then
  OppLostAff("guilt")
  return
elseif string.find(multimatches[3][1],"gives a sigh of relief.") then
  OppLostAff("retribution")
  return
elseif string.find(multimatches[3][1],"Lucidity returns to the eyes of") then
  OppLostAff("shadowmadness")
  return
elseif string.find(multimatches[3][1],"ceases secreting slime.") then
  OppLostAff("rebbies")
  return
elseif string.find(multimatches[3][1],"violent trembling") then
  OppLostAff("whisperingmadness")
  return
elseif string.find(multimatches[3][1],"nervous trembling") then
  OppLostAff("mycalium")  
  return
else
  if opponenteat == 1 then
    if timerherb == 1 then
      cecho("&lt;cyan&gt;-Ignored Cures")
    end
    if timerherb == 0 then
      cecho("&lt;cyan&gt;Something is Fucked")
      opponenteat = 0
    end
  end
  if opponenteat == 0 then
    opponenteat = 1
    timerherb = 1
    herbtimer = tempTimer(.7, [[opponenteat = 0;timerherb = 0]])
    opponentrecenteat = true
    herbtimerrecenteat = tempTimer(.5, [[opponentrecenteat = false;ak.serveraliases()]])  
    ak.cure.ate(ated, false)
  end
end   </script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ffffff</mFgColor>
					<mBgColor>#5500ff</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) eats (?:a|an|some) (.*)\.$</string>
						<string>1</string>
						<string>^(.*)$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>5</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Opponent Tree</name>
					<script>if ak.ai() then return end
if not IsTargetted(multimatches[1][2]) then return end
if string.find(multimatches[3][1],"straightens, as if some great burden had been lifted from") then
  OppLostAff("guilt")
  return
elseif string.find(multimatches[3][1],"seems suddenly unburdened, clarity reasserting itself upon") then
  OppLostAff("unweavingspirit")
  ak.psion.unweaving.spirit = 0
  return
elseif string.find(multimatches[3][1],"gives a sigh of relief.") then
  OppLostAff("retribution")
  return
elseif string.find(multimatches[3][1],"Lucidity returns to the eyes of") then
  OppLostAff("shadowmadness")
  return
elseif string.find(multimatches[3][1],"ceases secreting slime.") then
  OppLostAff("rebbies")
  return
elseif string.find(multimatches[3][1],"nervous trembling") then
  OppLostAff("mycalium")  
  return
else
  if opponenttree == 0 then
  	opponenttree = 1
    opponenthalftree = 1
    treetimerhalf = tempTimer(8.5, [[opponenthalftree = 0;ak.serveraliases()]])
    treetimer = tempTimer(9.5, [[opponenttree = 0;timertree = 0]])
    timertree = 1
    --cecho("&lt;cyan&gt;Processed Cures")
    ak.cure.tree()
  end
  if timertree == 0 then
    if opponenttree == 1 then
      opponenttree = 0
      cecho("&lt;cyan&gt;Ignored Cures")
    end
  end
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) touches a tree of life tattoo\.$</string>
						<string>1</string>
						<string>^(.*)$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>5</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Restored</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   for i = 1, #affstrack.restored do 
      if affstrack.score[affstrack.restored[i]] &gt; 0 and affstrack.score[affstrack.restored[i]] &lt; 200 then 
         affstrack.score[affstrack.restored[i]] = 0   
      end
   end
   ak.scoreup(matches[2])
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) crackles with blue energy that wreathes itself about \w+ limbs.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Mass Down</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
ak.defs.mass = false
cecho("&lt;cyan&gt;Mass Consideration Set")
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>A great weight seems to have been lifted from ([\w'\-]+).</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Transfix Cured</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   affstrack.score.transfixed = 0
   ak.scoreup(matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) has writhed free of ([\w'\-]+) state of transfixation\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Salve Highlighter</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   cecho("\n\n\n&lt;cyan&gt;OPPONENT APPLIED TO THEIR &lt;yellow&gt;"..matches[3].."!!\n\n\n")
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#0000ff</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) takes some balm from a vial and rubs it on \w+ ([\w'\-]+).$</string>
						<string>^([\w'\-]+) takes some salve from a vial and rubs it on \w+ ([\w'\-]+).$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Insomnia</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   ak.currentmana = ak.currentmana - 100
   affstrack.score.insomnia = 0
   ak.scoreup(matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>([\w'\-]+) clenches [\w'\-]+ fists and grits [\w'\-]+ teeth.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Writhed Bound</name>
					<script>if ak.ai() then return end
--send("outr rope")
if IsTargetted(matches[2]) then
   affstrack.score.bound = 0
   ak.scoreup(matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>([\w'\-]+) has writhed free of [\w'\-]+ entanglement by ropes.</string>
						<string>^Gritting [\w'\-]+ glistening teeth into a rictus grin, ([\w'\-]+) emits a low rumble as [\w'\-]+ flexes [\w'\-]+ rippling muscles, bursting the bindings that hold [\w'\-]+\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Class Cures</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Fool Cure</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   if affstrack.score.paralysis&gt;0 then 
     if ak.thoughtIhad then ak.thoughtIhad("paralysis") else affstrack.score.paralysis = 0 end  
   end
   ak.cure.passive()
   ak.cure.passive() 
   ak.cure.passive() 
	 ak.resetbacktrack()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) presses a tarot to \w+ forehead, producing a wan smile\.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Fool Third Person</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   ak.cure.passive() 
   ak.cure.passive()
   ak.cure.passive()
	 ak.resetbacktrack()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^[\w'\-]+ presses a tarot to ([\w'\-]+)\'s forehead, producing a wan smile\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Might</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   ak.cure.passive("paralysis, haemophilia, weariness, clumsiness")
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) lets out a mighty roar\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Boosted Passive</name>
						<script>if ak.ai() then return end
if IsTargetted(multimatches[2][2]) then 
   --affstrack.score.paralysis = 0
   ak.cure.passive() 
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A look of relief comes over ([\w'\-]+) as [\w'\-]+ grows less pale\.$</string>
							<string>^([\w'\-]+) grows older before your eyes\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>BM Phoenix</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   ak.oresetparse()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Throwing back [\w'\-]+ head\, ([\w'\-]+) shouts out in defiance as blazing flames consume [\w'\-]+ for a single\, glorious instant before dying away\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Fitnessing</name>
						<script>if ak.ai() then return end
ocured.kelp = ocured.kelp or {}
ocured.treed = ocured.treed or {}
ocured.cureall = ocured.cureall or {}
if IsTargetted(matches[2]) then
   cecho("&lt;cyan&gt;Processed Cures")
   ocured.kelp.asthma = nil
   ocured.treed.asthma = nil
   ocured.cureall.asthma = nil
   if affstrack.score.weariness&gt;0 then 
     if ak.thoughtIhad then ak.thoughtIhad("weariness") else affstrack.score.weariness = 0 end 
   end
   affstrack.score.asthma = 0
   ak.scoreup(matches[2])
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) draws a deep, measured breath.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dragon Healing</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   if affstrack.score.weariness&gt;0 and affstrack.score.recklessness&gt;0 then 
     if ak.thoughtIhad then ak.thoughtIhad("weariness") else affstrack.score.weariness = 0 end
   end
   affstrack.score.weariness = 0
   affstrack.score.recklessness = 0
	 if affstrack.score.prone == 100 then
	 ak.cure.passive()
	 else
   ak.cure.passive()
   ak.cure.passive()
   ak.cure.passive() 
	 ak.resetbacktrack()
	 end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>([\w'\-]+) lets out a great keening, casting the impurities from \w+ form.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Shrugging/WaterLord/EarthLord</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   if affstrack.score.weariness&gt;0 then 
     if ak.thoughtIhad then ak.thoughtIhad("weariness") else affstrack.score.weariness = 0 end 
   end
   ak.cure.passive("paralysis",true)
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) hunches \w+ shoulders and lets out a soft hiss.</string>
							<string>^The amorphous form of ([\w'\-]+) trembles\, some of the liquid composing it falling away from the greater whole\.$</string>
							<string>^Magma erupts forth from beneath the plates that cover ([\w'\-]+)\.$</string>
							<string>^Something pulses from within the chest of (\w+)\, and \w+ seems more vital\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Rage</name>
						<script>if ak.ai() then return end
if not IsTargetted(matches[2]) then return end
affs = {}
ocured = ocured or {}
ocured[ocured.conversion["rage"]] = {}
ak.occie.aura.parsereduct("rage")
for i = 1, #affstrack.eaten["rage"] do
   if affstrack.score[affstrack.eaten["rage"][i]] &gt; 0 then
      table.insert(affs, affstrack.eaten["rage"][i])
   end
end 
if #affs &gt; 0 then
   ak.echoForPossibleCures(table.concat(affs, " "))
   for i = 1, #affs do
      ocured[ocured.conversion["rage"]][affs[i]] = affstrack.score[affs[i]]
      affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / #affs
      if affstrack.score[affs[i]] &lt; ak.errorallowance then
          affstrack.score[affs[i]] = 0
      end
   end
end
ak.scoreup(matches[2])
 
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+)'s eyes flash with rage\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Priest Sacrifice</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   ak.oresetparse()
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The room is consumed in an explosion of light, out of which ([\w'\-]+) emerges refreshed and renewed\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Unknown</name>
						<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   ak.cure.passive() 
end

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w'\-]+) invokes the power of the elements and a soft white nimbus momentarily surrounds ([\w'\-]+)\.$</string>
							<string>^Divine essence flares around ([\w'\-]+)\.$</string>
							<string>^A look of relief comes over ([\w'\-]+) as [\w'\-]+ grows less pale\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Psion Expunge</name>
						<script>if ak.ai() then
  return
end
if IsTargetted(matches[2]) then
  if affstrack.score.confusion&gt;0 then 
    if ak.thoughtIhad then ak.thoughtIhad("confusion") else affstrack.score.confusion= 0 end  
  end
  if affstrack.score.impatience == 100 then
    OppLostAff("impatience") 
  else
    ak.cure.passive()
  end
end
--CAN CURE PARALYSIS</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>1</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^A slight tightening of the eyes is the only sign (\w+) makes that \w+ has made a great effort of will\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Single Aff</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Slough</name>
							<script>
if ak.ai() then return end
if not IsTargetted(multimatches[1][2]) then return end

if string.find(multimatches[3][1],"The light behind the eyes of") then
  OppLostAff("unweavingmind")
  return
elseif string.find(multimatches[3][1],"suddenly seems much more vital") then
  OppLostAff("unweavingbody")
  return
elseif string.find(multimatches[3][1],"straightens, as if some great burden had been lifted from") then
  OppLostAff("guilt")
  return
elseif string.find(multimatches[3][1],"gives a sigh of relief.") then
  OppLostAff("retribution")
  return
elseif string.find(multimatches[3][1],"Lucidity returns to the eyes of") then
  OppLostAff("shadowmadness")
  return
elseif string.find(multimatches[3][1],"ceases secreting slime.") then
  OppLostAff("rebbies")
  return
elseif string.find(multimatches[3][1],"violent trembling") then
  OppLostAff("whisperingmadness")
  return
elseif string.find(multimatches[3][1],"nervous trembling") then
  OppLostAff("mycalium")  
  return
else
   ak.cure.passive("paralysis",true)
end

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The fiery outer layers of ([\w'\-]+) fall away\, turning to dust as they drift to the ground\. Though ([\w'\-]+) seems diminished for an instant\, [\w'\-]+ fires soon rage with fury once more\.$</string>
								<string>1</string>
								<string>^(.*)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Sylvan Heal</name>
							<script>
if ak.ai() then return end
if not IsTargetted(multimatches[1][2]) then return end

if string.find(multimatches[3][1],"The light behind the eyes of") then
  OppLostAff("unweavingmind")
  return
elseif string.find(multimatches[3][1],"suddenly seems much more vital") then
  OppLostAff("unweavingbody")
  return
elseif string.find(multimatches[3][1],"straightens, as if some great burden had been lifted from") then
  OppLostAff("guilt")
  return
elseif string.find(multimatches[3][1],"gives a sigh of relief.") then
  OppLostAff("retribution")
  return
elseif string.find(multimatches[3][1],"Lucidity returns to the eyes of") then
  OppLostAff("shadowmadness")
  return
elseif string.find(multimatches[3][1],"ceases secreting slime.") then
  OppLostAff("rebbies")
  return
elseif string.find(multimatches[3][1],"violent trembling") then
  OppLostAff("whisperingmadness")
  return
elseif string.find(multimatches[3][1],"nervous trembling") then
  OppLostAff("mycalium")  
  return
else
   ak.cure.passive()
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) stands suddenly upright\, rooted to the earth\.$ </string>
								<string>1</string>
								<string>^(.*)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Magi Harmony</name>
							<script>
if ak.ai() then return end
if not IsTargetted(multimatches[1][2]) then return end

if string.find(multimatches[3][1],"The light behind the eyes of") then
  OppLostAff("unweavingmind")
  return
elseif string.find(multimatches[3][1],"suddenly seems much more vital") then
  OppLostAff("unweavingbody")
  return
elseif string.find(multimatches[3][1],"straightens, as if some great burden had been lifted from") then
  OppLostAff("guilt")
  return
elseif string.find(multimatches[3][1],"gives a sigh of relief.") then
  OppLostAff("retribution")
  return
elseif string.find(multimatches[3][1],"Lucidity returns to the eyes of") then
  OppLostAff("shadowmadness")
  return
elseif string.find(multimatches[3][1],"ceases secreting slime.") then
  OppLostAff("rebbies")
  return
elseif string.find(multimatches[3][1],"violent trembling") then
  OppLostAff("whisperingmadness")
  return
elseif string.find(multimatches[3][1],"nervous trembling") then
  OppLostAff("mycalium")  
  return
else
   ak.cure.passive()
end

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A soft chiming emanates from ([\w'\-]+).$</string>
								<string>1</string>
								<string>^(.*)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Alchemist Salt</name>
							<script>
if ak.ai() then return end
if not IsTargetted(multimatches[1][2]) then return end

if string.find(multimatches[3][1],"The light behind the eyes of") then
  OppLostAff("unweavingmind")
  return
elseif string.find(multimatches[3][1],"suddenly seems much more vital") then
  OppLostAff("unweavingbody")
  return
elseif string.find(multimatches[3][1],"straightens, as if some great burden had been lifted from") then
  OppLostAff("guilt")
  return
elseif string.find(multimatches[3][1],"gives a sigh of relief.") then
  OppLostAff("retribution")
  return
elseif string.find(multimatches[3][1],"Lucidity returns to the eyes of") then
  OppLostAff("shadowmadness")
  return
elseif string.find(multimatches[3][1],"ceases secreting slime.") then
  OppLostAff("rebbies")
  return
elseif string.find(multimatches[3][1],"violent trembling") then
  OppLostAff("whisperingmadness")
  return
elseif string.find(multimatches[3][1],"nervous trembling") then
  OppLostAff("mycalium")  
  return
else
   ak.cure.passive()
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) sketches out a symbol in the air with \w+ finger in the shape of a bisected circle.</string>
								<string>1</string>
								<string>^(.*)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Air Lord Tempest</name>
							<script>
if ak.ai() then return end
if not IsTargetted(multimatches[1][2]) then return end

if string.find(multimatches[3][1],"The light behind the eyes of") then
  OppLostAff("unweavingmind")
  return
elseif string.find(multimatches[3][1],"suddenly seems much more vital") then
  OppLostAff("unweavingbody")
  return
elseif string.find(multimatches[3][1],"straightens, as if some great burden had been lifted from") then
  OppLostAff("guilt")
  return
elseif string.find(multimatches[3][1],"gives a sigh of relief.") then
  OppLostAff("retribution")
  return
elseif string.find(multimatches[3][1],"Lucidity returns to the eyes of") then
  OppLostAff("shadowmadness")
  return
elseif string.find(multimatches[3][1],"ceases secreting slime.") then
  OppLostAff("rebbies")
  return
elseif string.find(multimatches[3][1],"violent trembling") then
  OppLostAff("whisperingmadness")
  return
elseif string.find(multimatches[3][1],"nervous trembling") then
  OppLostAff("mycalium")  
  return
else
   ak.cure.passive()
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The tempestuous form of ([\w'\-]+) is cleansed by a purifying breeze\.$</string>
								<string>1</string>
								<string>^(.*)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Air Lord Tempest</name>
							<script>
if ak.ai() then return end
if not IsTargetted(multimatches[1][2]) then return end

if string.find(multimatches[3][1],"The light behind the eyes of") then
  OppLostAff("unweavingmind")
  return
elseif string.find(multimatches[3][1],"suddenly seems much more vital") then
  OppLostAff("unweavingbody")
  return
elseif string.find(multimatches[3][1],"straightens, as if some great burden had been lifted from") then
  OppLostAff("guilt")
  return
elseif string.find(multimatches[3][1],"gives a sigh of relief.") then
  OppLostAff("retribution")
  return
elseif string.find(multimatches[3][1],"Lucidity returns to the eyes of") then
  OppLostAff("shadowmadness")
  return
elseif string.find(multimatches[3][1],"ceases secreting slime.") then
  OppLostAff("rebbies")
  return
elseif string.find(multimatches[3][1],"violent trembling") then
  OppLostAff("whisperingmadness")
  return
elseif string.find(multimatches[3][1],"nervous trembling") then
  OppLostAff("mycalium")  
  return
else
   ak.cure.passive()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The winds that compose ([\w'\-]+) fall still\, [\w'\-]+ tempestuous form dispersing into nothing\.$</string>
								<string>1</string>
								<string>^(.*)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Priest Healing</name>
							<script>
if ak.ai() then return end
if not IsTargetted(multimatches[1][2]) then return end

if string.find(multimatches[3][1],"The light behind the eyes of") then
  OppLostAff("unweavingmind")
  return
elseif string.find(multimatches[3][1],"suddenly seems much more vital") then
  OppLostAff("unweavingbody")
  return
elseif string.find(multimatches[3][1],"straightens, as if some great burden had been lifted from") then
  OppLostAff("guilt")
  return
elseif string.find(multimatches[3][1],"gives a sigh of relief.") then
  OppLostAff("retribution")
  return
elseif string.find(multimatches[3][1],"Lucidity returns to the eyes of") then
  OppLostAff("shadowmadness")
  return
elseif string.find(multimatches[3][1],"ceases secreting slime.") then
  OppLostAff("rebbies")
  return
elseif string.find(multimatches[3][1],"violent trembling") then
  OppLostAff("whisperingmadness")
  return
elseif string.find(multimatches[3][1],"nervous trembling") then
  OppLostAff("mycalium")  
  return
else
   ak.cure.passive()
end
--if matches[3] == "Fire" imp or para
--elseif matches[3] == "Air" asthma
--elseif matches[3] == "Earth" slickness
--elseif matches[3] == "Air and Earth" -- anorexia</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) calls upon the powers of (.*) and projects \w+ spiritual essence inwardly\.$</string>
								<string>1</string>
								<string>^(.*)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Tarot Sun</name>
							<script>
if ak.ai() then return end
if not IsTargetted(multimatches[1][2]) then return end

if string.find(multimatches[3][1],"The light behind the eyes of") then
  OppLostAff("unweavingmind")
  return
elseif string.find(multimatches[3][1],"suddenly seems much more vital") then
  OppLostAff("unweavingbody")
  return
elseif string.find(multimatches[3][1],"straightens, as if some great burden had been lifted from") then
  OppLostAff("guilt")
  return
elseif string.find(multimatches[3][1],"gives a sigh of relief.") then
  OppLostAff("retribution")
  return
elseif string.find(multimatches[3][1],"Lucidity returns to the eyes of") then
  OppLostAff("shadowmadness")
  return
elseif string.find(multimatches[3][1],"ceases secreting slime.") then
  OppLostAff("rebbies")
  return
elseif string.find(multimatches[3][1],"violent trembling") then
  OppLostAff("whisperingmadness")
  return
elseif string.find(multimatches[3][1],"nervous trembling") then
  OppLostAff("mycalium")  
  return
else
   ak.cure.passive()
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The globe of light illuminates ([\w'\-]+) with its brilliance\.$</string>
								<string>1</string>
								<string>^(.*)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Sylvan Panacea</name>
							<script>
if ak.ai() then return end
if not IsTargetted(multimatches[1][2]) then return end

if string.find(multimatches[3][1],"The light behind the eyes of") then
  OppLostAff("unweavingmind")
  return
elseif string.find(multimatches[3][1],"suddenly seems much more vital") then
  OppLostAff("unweavingbody")
  return
elseif string.find(multimatches[3][1],"straightens, as if some great burden had been lifted from") then
  OppLostAff("guilt")
  return
elseif string.find(multimatches[3][1],"gives a sigh of relief.") then
  OppLostAff("retribution")
  return
elseif string.find(multimatches[3][1],"Lucidity returns to the eyes of") then
  OppLostAff("shadowmadness")
  return
elseif string.find(multimatches[3][1],"ceases secreting slime.") then
  OppLostAff("rebbies")
  return
elseif string.find(multimatches[3][1],"violent trembling") then
  OppLostAff("whisperingmadness")
  return
elseif string.find(multimatches[3][1],"nervous trembling") then
  OppLostAff("mycalium")  
  return
else
   ak.cure.passive("paralysis",true)
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^([\w'\-]+) is surrounded in a cool\, refreshing mist\.$</string>
								<string>1</string>
								<string>^(.*)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Priest Rite of Healing</name>
							<script>
if ak.ai() then return end
if not IsTargetted(multimatches[1][2]) then return end

if string.find(multimatches[3][1],"The light behind the eyes of") then
  OppLostAff("unweavingmind")
  return
elseif string.find(multimatches[3][1],"suddenly seems much more vital") then
  OppLostAff("unweavingbody")
  return
elseif string.find(multimatches[3][1],"straightens, as if some great burden had been lifted from") then
  OppLostAff("guilt")
  return
elseif string.find(multimatches[3][1],"gives a sigh of relief.") then
  OppLostAff("retribution")
  return
elseif string.find(multimatches[3][1],"Lucidity returns to the eyes of") then
  OppLostAff("shadowmadness")
  return
elseif string.find(multimatches[3][1],"ceases secreting slime.") then
  OppLostAff("rebbies")
  return
elseif string.find(multimatches[3][1],"violent trembling") then
  OppLostAff("whisperingmadness")
  return
elseif string.find(multimatches[3][1],"nervous trembling") then
  OppLostAff("mycalium")  
  return
else
   ak.cure.passive()
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A gentle glow surrounds ([\w'\-]+)\.</string>
								<string>1</string>
								<string>^(.*)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Priest Angel Care</name>
							<script>
if ak.ai() then return end
if not IsTargetted(multimatches[1][2]) then return end

if string.find(multimatches[3][1],"The light behind the eyes of") then
  OppLostAff("unweavingmind")
  return
elseif string.find(multimatches[3][1],"suddenly seems much more vital") then
  OppLostAff("unweavingbody")
  return
elseif string.find(multimatches[3][1],"straightens, as if some great burden had been lifted from") then
  OppLostAff("guilt")
  return
elseif string.find(multimatches[3][1],"gives a sigh of relief.") then
  OppLostAff("retribution")
  return
elseif string.find(multimatches[3][1],"Lucidity returns to the eyes of") then
  OppLostAff("shadowmadness")
  return
elseif string.find(multimatches[3][1],"ceases secreting slime.") then
  OppLostAff("rebbies")
  return
elseif string.find(multimatches[3][1],"violent trembling") then
  OppLostAff("whisperingmadness")
  return
elseif string.find(multimatches[3][1],"nervous trembling") then
  OppLostAff("mycalium")  
  return
else
   ak.cure.passive()
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The guardian angel of ([\w'\-]+) shimmers and \w+ gives a sigh of relief.$</string>
								<string>1</string>
								<string>^(.*)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Magi Bloodboil</name>
							<script>
if ak.ai() then return end
if not IsTargetted(multimatches[1][2]) then return end

if string.find(multimatches[3][1],"The light behind the eyes of") then
  OppLostAff("unweavingmind")
  return
elseif string.find(multimatches[3][1],"suddenly seems much more vital") then
  OppLostAff("unweavingbody")
  return
elseif string.find(multimatches[3][1],"straightens, as if some great burden had been lifted from") then
  OppLostAff("guilt")
  return
elseif string.find(multimatches[3][1],"gives a sigh of relief.") then
  OppLostAff("retribution")
  return
elseif string.find(multimatches[3][1],"Lucidity returns to the eyes of") then
  OppLostAff("shadowmadness")
  return
elseif string.find(multimatches[3][1],"ceases secreting slime.") then
  OppLostAff("rebbies")
  return
elseif string.find(multimatches[3][1],"violent trembling") then
  OppLostAff("whisperingmadness")
  return
elseif string.find(multimatches[3][1],"nervous trembling") then
  OppLostAff("mycalium")  
  return
else
   if affstrack.score.haemophilia&gt;0 then 
     if ak.thoughtIhad then ak.thoughtIhad("haemophilia") else affstrack.score.haemophilia = 0 end
   end
   ak.cure.passive()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^Perspiration suddenly breaks out on ([\w'\-]+)\'s forehead\.$</string>
								<string>1</string>
								<string>^(.*)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Bard Hallelujah</name>
							<script>
if ak.ai() then return end
if not IsTargetted(multimatches[1][2]) then return end

if string.find(multimatches[3][1],"The light behind the eyes of") then
  OppLostAff("unweavingmind")
  return
elseif string.find(multimatches[3][1],"suddenly seems much more vital") then
  OppLostAff("unweavingbody")
  return
elseif string.find(multimatches[3][1],"straightens, as if some great burden had been lifted from") then
  OppLostAff("guilt")
  return
elseif string.find(multimatches[3][1],"gives a sigh of relief.") then
  OppLostAff("retribution")
  return
elseif string.find(multimatches[3][1],"Lucidity returns to the eyes of") then
  OppLostAff("shadowmadness")
  return
elseif string.find(multimatches[3][1],"ceases secreting slime.") then
  OppLostAff("rebbies")
  return
elseif string.find(multimatches[3][1],"violent trembling") then
  OppLostAff("whisperingmadness")
  return
elseif string.find(multimatches[3][1],"nervous trembling") then
  OppLostAff("mycalium")  
  return
else
   ak.cure.passive("paralysis",true)
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A song can be heard on the edge of hearing as the air distorts about ([\w'\-]+)\.$</string>
								<string>1</string>
								<string>^(.*)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Apostate Syphon</name>
							<script>
if ak.ai() then return end
if not IsTargetted(multimatches[1][2]) then return end

if string.find(multimatches[3][1],"The light behind the eyes of") then
  OppLostAff("unweavingmind")
  return
elseif string.find(multimatches[3][1],"suddenly seems much more vital") then
  OppLostAff("unweavingbody")
  return
elseif string.find(multimatches[3][1],"straightens, as if some great burden had been lifted from") then
  OppLostAff("guilt")
  return
elseif string.find(multimatches[3][1],"gives a sigh of relief.") then
  OppLostAff("retribution")
  return
elseif string.find(multimatches[3][1],"Lucidity returns to the eyes of") then
  OppLostAff("shadowmadness")
  return
elseif string.find(multimatches[3][1],"ceases secreting slime.") then
  OppLostAff("rebbies")
  return
elseif string.find(multimatches[3][1],"violent trembling") then
  OppLostAff("whisperingmadness")
  return
elseif string.find(multimatches[3][1],"nervous trembling") then
  OppLostAff("mycalium")  
  return
else
   ak.cure.passive()
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A demonic crimson glow emanates from ([\w'\-]+)\.$</string>
								<string>1</string>
								<string>^(.*)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Priest 2</name>
							<script>
if ak.ai() then return end
if not IsTargetted(multimatches[1][2]) then return end

if string.find(multimatches[3][1],"The light behind the eyes of") then
  OppLostAff("unweavingmind")
  return
elseif string.find(multimatches[3][1],"suddenly seems much more vital") then
  OppLostAff("unweavingbody")
  return
elseif string.find(multimatches[3][1],"straightens, as if some great burden had been lifted from") then
  OppLostAff("guilt")
  return
elseif string.find(multimatches[3][1],"gives a sigh of relief.") then
  OppLostAff("retribution")
  return
elseif string.find(multimatches[3][1],"Lucidity returns to the eyes of") then
  OppLostAff("shadowmadness")
  return
elseif string.find(multimatches[3][1],"ceases secreting slime.") then
  OppLostAff("rebbies")
  return
elseif string.find(multimatches[3][1],"violent trembling") then
  OppLostAff("whisperingmadness")
  return
elseif string.find(multimatches[3][1],"nervous trembling") then
  OppLostAff("mycalium")  
  return
else
   ak.cure.passive()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A flickering nimbus outlines ([\w'\-]+) for an instant\, before fading from sight\.$</string>
								<string>1</string>
								<string>^(.*)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Priest</name>
							<script>
if ak.ai() then return end
if not IsTargetted(multimatches[1][2]) then return end

if string.find(multimatches[3][1],"The light behind the eyes of") then
  OppLostAff("unweavingmind")
  return
elseif string.find(multimatches[3][1],"suddenly seems much more vital") then
  OppLostAff("unweavingbody")
  return
elseif string.find(multimatches[3][1],"straightens, as if some great burden had been lifted from") then
  OppLostAff("guilt")
  return
elseif string.find(multimatches[3][1],"gives a sigh of relief.") then
  OppLostAff("retribution")
  return
elseif string.find(multimatches[3][1],"Lucidity returns to the eyes of") then
  OppLostAff("shadowmadness")
  return
elseif string.find(multimatches[3][1],"ceases secreting slime.") then
  OppLostAff("rebbies")
  return
elseif string.find(multimatches[3][1],"violent trembling") then
  OppLostAff("whisperingmadness")
  return
elseif string.find(multimatches[3][1],"nervous trembling") then
  OppLostAff("mycalium")  
  return
else
  if ndba and ndba.names[target] and ndba.getclass(target) == "Priest" then
     ak.cure.passive() 
  end
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>The guardian angel begins to shimmer with a soft red light.</string>
								<string>1</string>
								<string>^(.*)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>3</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Shaman Daina</name>
							<script>
if ak.ai() then return end
if not IsTargetted(multimatches[1][2]) then return end

if string.find(multimatches[3][1],"The light behind the eyes of") then
  OppLostAff("unweavingmind")
  return
elseif string.find(multimatches[3][1],"suddenly seems much more vital") then
  OppLostAff("unweavingbody")
  return
elseif string.find(multimatches[3][1],"straightens, as if some great burden had been lifted from") then
  OppLostAff("guilt")
  return
elseif string.find(multimatches[3][1],"gives a sigh of relief.") then
  OppLostAff("retribution")
  return
elseif string.find(multimatches[3][1],"Lucidity returns to the eyes of") then
  OppLostAff("shadowmadness")
  return
elseif string.find(multimatches[3][1],"ceases secreting slime.") then
  OppLostAff("rebbies")
  return
elseif string.find(multimatches[3][1],"violent trembling") then
  OppLostAff("whisperingmadness")
  return
elseif string.find(multimatches[3][1],"nervous trembling") then
  OppLostAff("mycalium")  
  return
else
   ak.cure.passive()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A pale mist begins to rise from the skin of ([\w'\-]+)\.$</string>
								<string>0</string>
								<string>^(.*)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>BM Alleviate</name>
							<script>
if ak.ai() then return end
if not IsTargetted(multimatches[1][2]) then return end

if string.find(multimatches[3][1],"The light behind the eyes of") then
  OppLostAff("unweavingmind")
  return
elseif string.find(multimatches[3][1],"suddenly seems much more vital") then
  OppLostAff("unweavingbody")
  return
elseif string.find(multimatches[3][1],"straightens, as if some great burden had been lifted from") then
  OppLostAff("guilt")
  return
elseif string.find(multimatches[3][1],"gives a sigh of relief.") then
  OppLostAff("retribution")
  return
elseif string.find(multimatches[3][1],"Lucidity returns to the eyes of") then
  OppLostAff("shadowmadness")
  return
elseif string.find(multimatches[3][1],"ceases secreting slime.") then
  OppLostAff("rebbies")
  return
elseif string.find(multimatches[3][1],"violent trembling") then
  OppLostAff("whisperingmadness")
  return
elseif string.find(multimatches[3][1],"nervous trembling") then
  OppLostAff("mycalium")  
  return
else
   ak.cure.tree()
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^As \w+ massages key pressure points, a look of relief comes over ([\w'\-]+)'s face as \w+ ailments ease.</string>
								<string>1</string>
								<string>^(.*)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Runewarden Dagaz</name>
							<script>
if ak.ai() then return end
if not IsTargetted(multimatches[1][2]) then return end

if string.find(multimatches[3][1],"The light behind the eyes of") then
  OppLostAff("unweavingmind")
  return
elseif string.find(multimatches[3][1],"suddenly seems much more vital") then
  OppLostAff("unweavingbody")
  return
elseif string.find(multimatches[3][1],"straightens, as if some great burden had been lifted from") then
  OppLostAff("guilt")
  return
elseif string.find(multimatches[3][1],"gives a sigh of relief.") then
  OppLostAff("retribution")
  return
elseif string.find(multimatches[3][1],"Lucidity returns to the eyes of") then
  OppLostAff("shadowmadness")
  return
elseif string.find(multimatches[3][1],"ceases secreting slime.") then
  OppLostAff("rebbies")
  return
elseif string.find(multimatches[3][1],"violent trembling") then
  OppLostAff("whisperingmadness")
  return
elseif string.find(multimatches[3][1],"nervous trembling") then
  OppLostAff("mycalium")  
  return
else
   ak.cure.passive()
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>1</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A rune like a rising sun upon the ground flares, bathing ([\w'\-]+) with healing magic.</string>
								<string>1</string>
								<string>^(.*)$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>5</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Concentrate</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   if affstrack.score.confusion &gt; 0 then
      if ak.thoughtIhad then ak.thoughtIhad("confusion") else affstrack.score.confusion = 0 end
   end 
   affstrack.score.disrupt = 0
   ak.scoreup(matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+)\'s eyes lose their focus suddenly\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Bucket2</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
   if affstrack.score.aflame == 100 then
      affstrack.score.aflame = 0
      ak.scoreup(matches[2])
   end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) saturates \w+ with water\, putting out the fire that raged\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Bucket</name>
					<script>if ak.ai() then return end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) saturates \w+ with water\, putting out the fire that raged\.$</string>
						<string>^The fires consuming ([\w'\-]+) diminish somewhat\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Slime</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   affstrack.score.slime = 0
   ak.scoreup(matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) finally rids [\w'\-]+ of the slime covering [\w'\-]+\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Tension</name>
					<script>if ak.ai() then return end
local aff = "tension"
if ak.ProTrackingConfirmed then ak.ProTrackingConfirmed(aff) end
affstrack.score[aff] = 0
ak.scoreup(matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) sucks in a great gasp of air\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Dwinnu</name>
					<script>if ak.ai() then return end
--send("outr rope")
if IsTargetted(matches[2]) then
   affstrack.score.bound = 0
   ak.scoreup(matches[2])
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>\'DWINNU\! DWINNU\' chants ([\w'\-]+) urgently as [\w'\-]+ bonds turn to dust and fall off\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Maintained Flushings</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then 
   if ak.ProTrackingConfirmed then 
      ak.ProTrackingConfirmed("flushings") 
   else
      affstrack.score.flushings = 100
      ak.scoreup(matches[2])
  end
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Blood begins to run from the pores of (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Writhed Fire Bullshit</name>
					<script>if IsTargetted(matches[2]) then
   OppGainedAff("aflame")
	 OppLostAff("bound")
end
ak.scoreup(matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) has writhed free of \w+ conflagrant weave\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Queue &amp; Server Aliases</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Curing</name>
					<script>send("curing off")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Automatic affliction curing disabled.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Aliases Setting</name>
					<script>--deleteFull()
local deletealla = {"oattacktwow","boomer","mineralmainttwo","mineralmaint","oattack","oattackrl","oattackll","oattackra","oattackla","oattackt","oattackh","oattacklr","oattackll",
      "oattackar","oattackal","oattackch","oattackct","oattacktwo","oattackrltwo","oattacklltwo","oattackratwo","oattacklatwo",
      "oattackttwo","oattackhtwo","oattacklatwo","oattacklltwo","oattackartwo","oattackaltwo","oattackchtwo","oattackcttwo","oattackr"
}
if table.contains(deletealla,matches[2]) then
   ak.deleteFull()
   ak.aliases[matches[2]] = matches[3]
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Alias \"([\w'\-]+)\" will now execute\: \"(.*)\"</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Serverside Alias Setting</name>
					<script>if matches[2] == "dor" then return end
affstrack.overcharge = false

local cursedraw = matches[3]:lower()
cursedraw = string.gsub(cursedraw, "/", " ")

cursedraw = cursedraw:split(" ")
for k,v in pairs(cursedraw) do
   if string.findPattern(cursedraw[k],"overcharge") then
      affstrack.overcharge = true
   elseif string.findPattern(cursedraw[k],"heartbeats") then
      ak.pariah.heartbeats = tonumber(cursedraw[k-1])
   elseif string.findPattern(cursedraw[k],"relapse") then
      invoked = cursedraw[k+1]
   elseif string.findPattern(cursedraw[k],"invoke") then
      invoked = cursedraw[k+2]
   elseif string.findPattern(cursedraw[k],"impurity") then
      nextcurse = cursedraw[k+1]
   elseif string.findPattern(cursedraw[k],"instill") then
      nextinstill = cursedraw[k+3]
   elseif string.findPattern(cursedraw[k],"moon") then
      ak.nextmoon = cursedraw[k+3]
   elseif string.findPattern(cursedraw[k],"imbibe") then
      imbibedraw = cursedraw[k+1]
   elseif string.findPattern(cursedraw[k],"truewrack") then
      alchemisttruewrack = cursedraw[k+2]
      alchemisttruewracktwo = cursedraw[k+3]
	 elseif string.findPattern(cursedraw[k],"wrack") then
      alchemistwrack = cursedraw[k+2]
   end
end
if table.contains(cursedraw,"combo") and ak.MonkType() ~= "Tekura" then
	ak.shikudo.AliasSplit(cursedraw)
end





	
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Alias \"([\w'\-]+)\" will now execute\: \"(.*)\"</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Ran Off SS Split</name>
					<script>if matches[2] == "OATTACK" then
	ak.queue.eqbal = {}
	ak.queue.sent = {}
	return
end

local cursedraw = matches[2]:lower()
cursedraw = string.gsub(cursedraw, "|", " ")


cursedraw = cursedraw:split(" ")
for k,v in pairs(cursedraw) do
   if string.findPattern(cursedraw[k],"overcharge") then
      affstrack.overcharge = true
   elseif string.findPattern(cursedraw[k],"heartbeats") then
      ak.pariah.heartbeats = tonumber(cursedraw[k-1])
   elseif string.findPattern(cursedraw[k],"relapse") then
      invoked = cursedraw[k+1]
   elseif string.findPattern(cursedraw[k],"invoke") then
      invoked = cursedraw[k+2]
   elseif string.findPattern(cursedraw[k],"impurity") then
      nextcurse = cursedraw[k+1]
   elseif string.findPattern(cursedraw[k],"instill") then
      nextinstill = cursedraw[k+3]
   elseif string.findPattern(cursedraw[k],"moon") then
      ak.nextmoon = cursedraw[k+3]
   elseif string.findPattern(cursedraw[k],"imbibe") then
      imbibedraw = cursedraw[k+1]
   elseif string.findPattern(cursedraw[k],"truewrack") then
      alchemisttruewrack = cursedraw[k+2]
      alchemisttruewracktwo = cursedraw[k+3]
	 elseif string.findPattern(cursedraw[k],"wrack") then
      alchemistwrack = cursedraw[k+2]
   end
end
if table.contains(cursedraw,"combo") and ak.MonkType() ~= "Tekura" then
	ak.shikudo.AliasSplit(cursedraw)
end





</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Running queued [\w'\-]+ command\: (.*)$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Queue Gagging</name>
					<script>ak.deleteFull()
--deleteFull()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>[System]: Added </string>
						<string>[System]: Running queued</string>
						<string>Your queues are already empty.</string>
						<string>Your eqbal queue is full.</string>
						<string>Your eqbal queue is already empty.</string>
						<string>[System]: Queued eb commands cleared.</string>
						<string>Cleared your queues.</string>
						<string>[System]: Queued eb!t commands cleared.</string>
						<string>[System]: All queued commands cleared.</string>
						<string>[System]: Queued free commands cleared.</string>
						<string>[System]: Queued full commands cleared.</string>
						<string>[System]: Queued freestand commands cleared.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>2</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Alias Dump</name>
					<script>--deleteFull()
local deletealla = {"oattacktwow","boomer","mineralmainttwo","mineralmaint","oattack","oattackrl","oattackll","oattackra","oattackla","oattackt","oattackh","oattacklr","oattackll",
      "oattackar","oattackal","oattackch","oattackct","oattacktwo","oattackrltwo","oattacklltwo","oattackratwo","oattacklatwo",
      "oattackttwo","oattackhtwo","oattacklatwo","oattacklltwo","oattackartwo","oattackaltwo","oattackchtwo","oattackcttwo","oattackr"
}
if table.contains(deletealla,multimatches[2][2]) then
   ak.deleteFull()
	 ak.aliases.lastsend[multimatches[2][2]] = nil
   ak.aliases[multimatches[2][2]] = nil
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You have cleared alias</string>
						<string>^You have cleared alias \"(.+)\"\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Add Clear Prompt Killer</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>1</conditonLineDelta>
					<mStayOpen>1</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>[System]: Queued eb commands cleared.</string>
						<string>[System]: Queued eb!t commands cleared.</string>
						<string>[System]: All queued commands cleared.</string>
						<string>[System]: Queued free commands cleared.</string>
						<string>[System]: Queued full commands cleared.</string>
						<string>[System]: Queued freestand commands cleared.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Secondary</name>
						<script>tempLineTrigger(1,1,[[
   if isPrompt() then
      deleteLine()
   end
]])

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>[System]: Added</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>2</integer>
						</regexCodePropertyList>
					</Trigger>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Misc</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Tumble start</name>
					<script>if IsTargetted(matches[2]) then
   ak.tumbling = matches[3]
	 tempTimer(4, [[ak.tumbling = false]])
   ak.scoreup(matches[2])
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) begins to tumble towards the [\w'\-]+\.$</string>
						<string>^([\w'\-]+) begins to somersault towards the [\w'\-]+\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Tumble end</name>
					<script>if IsTargetted(matches[2]) then
   ak.tumbling = false
	 ak.scoreup(matches[2])
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^([\w'\-]+) tumbles out to the ([\w'\-]+)\.$</string>
						<string>^([\w'\-]+)'s somersault takes \w+ out of the room to the [\w'\-]+\.$</string>
						<string>^The discordant sound of your song causes ([\w'\-]+) to lose concentration, ruining their movement attempt\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Trait Gag Out</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Begin</name>
						<script>ak.deleteFull()
ak.expertdiagnose = false
ak.contemplator = false
ak.healthinspector = false</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Racial\: .*$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Traits Parse</name>
						<script>ak.deleteFull()
if matches[3] then
   --display(matches[3])
   if matches[3] == "Quick-witted             " then
      ak.balancemodifier = "quickwitted"
   elseif string.find(matches[3],"Nimble") then
      ak.balancemodifier = "nimble"
   elseif string.find(matches[3],"Expert Diagnoser") then
      --ak.expertdiagnose = true
   elseif string.find(matches[3],"Mind Warden") then
      ak.contemplator = true
	 elseif string.find(matches[3],"Health Inspector") then
	    ak.healthinspector = true
   end
end</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>----------------------------------------------------------------------</string>
							<string>^Level (\d+)\: (.+)\s+$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Trait Ending</name>
						<script>ak.deleteFull()
disableTrigger("Trait Gag Out")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Key: Major Trait  Minor Trait</string>
							<string>----------------------------------------------------------------------Key: Major Trait  Minor Trait</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>3</integer>
							<integer>3</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Class Changed(gmcp)</name>
				<script>ak.classenable()
if wsys then  
   monkenemy = {}
   if gmcp.Char.Status.class ~= "Monk" or gmcp.Char.Status.race:match("Dragon") then
      wsys.monkstance = false
   end 
   if ndba and gmcp.Char.Status.class ~= "Monk" then 
      enemylist = enemylist or {}
      if #enemylist &gt; 0 then
         for i = 1, #enemylist do
            if ndba.iseleusian(enemylist[i]) then
               send("unenemy "..enemylist[i])
               table.insert(monkenemy, enemylist[i])
            end   
         end
      end
   end
end
enableTrigger("Trait Gag Out")
send("trait list known")
disableTrigger("Class Changed(gmcp)")
enableTrigger("Class Changed Prompt Lock")
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^Your draconic form melts away, leaving you suddenly weaker and more vulnerable.$</string>
					<string>^Your race is now that of </string>
					<string>^With an ear-splitting roar, you rear back your draconic head and scream out your triumph.$</string>
					<string>^Reveling in your total mastery of the form, you beat your mighty wings, throw your massive head back</string>
					<string>^Your last login was from domain:</string>
					<string>You are not in Dragon form.</string>
					<string>You already maintain the form of the Dragon.</string>
					<string>You are now a member of the</string>
					<string>^You are already in .* form\.$</string>
					<string>^You have switched to the .* specialisation\.$</string>
					<string>On and on, your soul cascades upon the currents that now sustain your form. </string>
					<string>With a cursory thought, you still your clamorous heart and arise whole, gazing out from within your</string>
					<string>Your elemental might has already overtaken your form.</string>
					<string>You pray to the spirits of the fallen for a fresh chance at life, and are reincarnated into </string>
					<string>You switch your martial school to that of Shikudo.</string>
					<string>With a victorious roar, you bellow your triumph into the firmament.</string>
					<string>You have already adopted the mighty form of the Viridian.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>2</integer>
					<integer>2</integer>
					<integer>3</integer>
					<integer>2</integer>
					<integer>3</integer>
					<integer>2</integer>
					<integer>3</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Class Changed Prompt Lock</name>
				<script>enableTrigger("Class Changed(gmcp)")
disableTrigger("Class Changed Prompt Lock")</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string></string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>7</integer>
				</regexCodePropertyList>
			</Trigger>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Dragon Classlock Correction</name>
				<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	ak.dragonfied()
end
--Blasts Not Added
--Strip Not Added
--Summons have Red,Black,Silver</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^([\w'\-]+) lets out a great keening\, casting the impurities from \w+ form\.$</string>
					<string>^([\w'\-]+)\'s eyes begin to blaze dangerously\.$</string>
					<string>^([\w'\-]+) completes [\w'\-]+ transformation and\, with an ear\-splitting roar\, throws back [\w'\-]+ draconic head and screams out [\w'\-]+ triumph\.$</string>
					<string>^([\w'\-]+) growls almost inaudibly\.$</string>
					<string>^With a low rumbling from deep within [\w'\-]+ belly\, ([\w'\-]+) utters a guttural chant\. [\w'\-]+ skin ripples as a web of crackling magical energy dances like fire across its surface\, settling to solidify into a flexible\, translucent shell\.$</string>
					<string>^([\w'\-]+) lunges at ([\w'\-]+) with long\, flashing ([\w'\-]+) extended\, tearing into \w+ (right leg|left leg|right arm|left arm|head|torso) ruthlessly\.$</string>
					<string>^([\w'\-]+) lunges forward with long\, flashing ([\w'\-]+) extended\, tearing down to the bones of your (right leg|left leg|right arm|left arm|head|torso)\.$</string>
					<string>^Gritting [\w'\-]+ glistening teeth into a rictus grin\, ([\w'\-]+) emits a low rumble as [\w'\-]+ flexes [\w'\-]+ rippling muscles\.$</string>
					<string>^([\w'\-]+) turns to fix [\w'\-]+ gaze upon you\, and you feel your heart increase its palpitations as a low keening echoes from [\w'\-]+ throat\.$</string>
					<string>^Drawing an enormous breath\, ([\w'\-]+) exhales\, expelling a gale of wind with such force that you are knocked over\.$</string>
					<string>^([\w'\-]+) fixes [\w'\-]+ gaze upon [\w'\-]+\, swaying slowly as [\w'\-]+ begins a low keening\.$</string>
					<string>^Drawing an enormous breath\, ([\w'\-]+) exhales\, expelling a gale of wind with such force that [\w'\-]+ is knocked over\.$</string>
					<string>^([\w'\-]+) crushes [\w'\-]+ between [\w'\-]+ massive jaws\, jerking [\w'\-]+ back and forth like a rag doll\.$</string>
					<string>^([\w'\-]+) snaps [\w'\-]+ massive jaws close around you\, jerking you back and forth with agonising strength\.$</string>
					<string>^([\w'\-]+)'s powerful chest expands as [\w'\-]+ takes a mighty breath\, loosing a shrill volley of [\w'\-]+\-infused vapour into the air\.$</string>
					<string>^An ominous feeling descends upon you as ([\w'\-]+) turns [\w'\-]+ gaze upon you\.$</string>
					<string>^([\w'\-]+)\'s nostrils flare wildly with a great rush of air as [\w'\-]+ sinuous body contracts and [\w'\-]+ mouth opens wide to emit a rippling\, unbroken roar that reverberates through your body and blasts your eardrums into oblivion\.$</string>
					<string>^([\w'\-]+) draws \w+ up to [\w'\-]+ full height\, staring imperiously down at [\w'\-]+\.$</string>
					<string>^([\w'\-]+)\'s nostrils flare wildly with a great rush of air as [\w'\-]+ sinuous body contracts and [\w'\-]+ mouth opens wide to emit a rippling\, unbroken roar at ([\w'\-]+)\.$</string>
					<string>^([\w'\-]+) rips into [\w'\-]+ with [\w'\-]+ massive\, deadly claws\.$</string>
					<string>^Lunging forward with long\, flashing claws extended\, ([\w'\-]+) tears into [\w'\-]+ ruthlessly\.$</string>
					<string>^A deathly calm descends upon your surroundings as ([\w'\-]+) draws \w+ up regally\, eyes gleaming with murderous intent\.$</string>
					<string>^([\w'\-]+) rises back on [\w'\-]+ hind legs\, more than doubling in height as [\w'\-]+ towers above you\. The groundshakes violently as [\w'\-]+ slams [\w'\-]+ feet back down\, recklessly crushing everyone in [\w'\-]+ path\.$</string>
					<string>^([\w'\-]+)\'s tail narrowly misses you as it whips in a circle\.$</string>
					<string>^You are knocked forcefully off your feet by the impact of ([\w'\-]+)\'s huge tail\.$</string>
					<string>^[\w'\-]+ is knocked forcefully off [\w'\-]+ feet by the impact of ([\w'\-]+)\'s huge tail\.$</string>
					<string>^Your body trembles as ([\w'\-]+) invokes a dramatic chant in the dragon tongue\. As [\w'\-]+ voice resonates\, you are assailed by a wave of magical energy that threatens to tear your skin apart\.$</string>
					<string>^A resonant vibration emanates from ([\w'\-]+) as [\w'\-]+ invokes a rumbling\, sonorous chant in the dragon tongue\. As the sound increases\, ([\w'\-]+) jerks violently\, [\w'\-]+ body wracked by an unseen force\.$</string>
					<string>^[\w'\-]+\'s form seems suddenly weighted down as ([\w'\-]+) lays the ancient Dragoncurse upon [\w'\-]+\.$</string>
					<string>^A heavy burden descends upon your soul as ([\w'\-]+) lays the ancient Dragoncurse upon you\.$</string>
					<string>^([\w'\-]+) whips [\w'\-]+ tail around\, striking the wall to the [\w'\-]+ with a powerful blow\. A network of fine fractures spreads over its surface before it suddenly collapses\.$</string>
					<string>^([\w'\-]+) whips [\w'\-]+ tail around\, spinning in a wild circle\, in what you can only assume to be some draconic mating ritual\.$</string>
					<string>^([\w'\-]+)\'s great form shudders briefly\.$</string>
					<string>^([\w'\-]+) flicks [\w'\-]+ tail at you\, effortlessly shattering your magical shield\.$</string>
					<string>^([\w'\-]+) dismissively flicks [\w'\-]+ tail at [\w'\-]+\, annihilating the magical shield surrounding [\w'\-]+ with casual ease\.$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Elemental Classlock Correction</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Earth Lord</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	ak.elementalfied("Earth")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^The magma\-wreathed form of ([\w'\-]+) smashes into you\, crushing you beneath [\w'\-]+ massive bulk and searing you to the bone\.$</string>
						<string>^With a terrible roar ([\w'\-]+) whips a colossal fist at your .*\.$</string>
						<string>^You feel bones grinding against one another as the fist of ([\w'\-]+) smashes into your .* with pulverising force\.$</string>
						<string>^Magma erupts from the cracks between the plates covering ([\w'\-]+)\, cloaking [\w'\-]+ in a churning shroud of molten stone\.$</string>
						<string>^The stone fist of ([\w'\-]+) crunches into your .*\.$</string>
						<string>^The rock plates covering the form of ([\w'\-]+) rapidly thicken\, sharp spires of stone rapidly sprouting from them\.$</string>
						<string>^Cloaked in a shifting mantle of molten stone\, ([\w'\-]+) charges in from the .* with a deafening roar\.$</string>
						<string>^Magma ceases to bubble up from beneath the outer strata of ([\w'\-]+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Fire Lord</name>
					<script>if ak.ai() then return end
if IsTargetted(matches[2]) then
	ak.elementalfied("Fire")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^The fiery outer layers of ([\w'\-]+) fall away\, turning to dust as they drift to the ground\. Though ([\w'\-]+)seems diminished for an instant\, [\w'\-]+ fires soon rage with fury once more\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
		</TriggerGroup>
	</TriggerPackage>
	<TimerPackage>
		<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
			<name>AK Opponent Tracking</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<time>00:00:00.000</time>
			<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
				<name>Hypochondria Timer</name>
				<script>if affstrack.score.hypochondria &gt; 0 then
   for i = 1, #affstrack.hypo do
      if affstrack.score[affstrack.hypo[i]] ~= 100 then
         if affstrack.hypo[i] ~= "impatience" then
            affstrack.score[affstrack.hypo[i]] = 100
            ak.scoreup(target)
            return
         end
      end
   end
else
   disableTimer("Hypochondria Timer")
end</script>
				<command></command>
				<packageName></packageName>
				<time>00:00:02.500</time>
			</Timer>
			<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
				<name>Hypnosis Timer</name>
				<script>if hypnosis_table[target] and hypnosis_table[target].load and #hypnosis_table[target].load &gt; 0  then
   if hypnosis_table[target].load[#hypnosis_table[target].load] ~= "impatience" then
      OppGainedAff(hypnosis_table[target].load[#hypnosis_table[target].load])
      ak.scoreup(target)
   end
   table.remove(hypnosis_table[target].load, #hypnosis_table[target].load)
   if #hypnosis_table[target].load  == 0 then
      disableTimer("Hypnosis Timer")
      resetHypno = tempTimer(1,[[
         hypnosis_table[target].load = {}
      ]])
      ak.scoreup(target)
   end
else
   disableTimer("Hypnosis Timer")
   resetHypno = tempTimer(1,[[
      hypnosis_table[target].load = {}
   ]])
   ak.scoreup(target)
end</script>
				<command></command>
				<packageName></packageName>
				<time>00:00:02.000</time>
			</Timer>
			<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
				<name>Wrench Torso Timer</name>
				<script>--ak.HeadWrench
ak = ak or {}
if affstrack.score.wrenchhead then
   if ak.InitialWrench then
      ak.InitialWrench = false
   else
      local aff = "epilepsy"
      OppGainedAff(aff)
   end
else
   disableTimer("Wrench Torso Timer")
end</script>
				<command></command>
				<packageName></packageName>
				<time>00:00:04.000</time>
			</Timer>
			<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
				<name>2h</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<time>00:00:00.000</time>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>AK_SkullTimer</name>
					<script>ak.skullcount = ak.skullcount or 0
ak.skullcount = ak.skullcount + 1
if ak.twoh.skull == 0 then
	disableTimer("AK_SkullTimer")
	ak.skullcount = 0
elseif ak.twoh.skull == 1 and ak.skullcount == 5 then
	ak.skullcount = 0
	OppGainedAff("nausea")
elseif ak.twoh.skull == 2 and ak.skullcount == 4 then
	ak.skullcount = 0
	OppGainedAff("nausea")
elseif ak.twoh.skull == 3 and ak.skullcount == 3  then
	ak.skullcount = 0
	OppGainedAff("nausea")
elseif ak.twoh.skull == 4 and ak.skullcount == 2 then
	ak.skullcount = 0
	OppGainedAff("nausea")
elseif ak.twoh.skull == 5 and ak.skullcount == 1 then
	ak.skullcount = 0
	OppGainedAff("nausea")
end 
</script>
					<command></command>
					<packageName></packageName>
					<time>00:00:01.000</time>
				</Timer>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>AK_RibsTimer</name>
					<script>ak.ribscount = ak.ribscount or 0
ak.ribscount = ak.ribscount + 1
if ak.twoh.ribs == 0 then
	disableTimer("AK_RibsTimer")
	ak.ribscount = 0
elseif ak.twoh.ribs == 1 and ak.ribscount == 5 then
	ak.ribscount = 0
	OppGainedAff("prefarar")
elseif ak.twoh.ribs == 2 and ak.ribscount == 4 then
	ak.ribscount = 0
	OppGainedAff("prefarar")
elseif ak.twoh.ribs == 3 and ak.ribscount == 3  then
	ak.ribscount = 0
	OppGainedAff("prefarar")
elseif ak.twoh.ribs == 4 and ak.ribscount == 2 then
	ak.ribscount = 0
	OppGainedAff("prefarar")
elseif ak.twoh.ribs == 5 and ak.ribscount == 1 then
	ak.ribscount = 0
	OppGainedAff("prefarar")
end </script>
					<command></command>
					<packageName></packageName>
					<time>00:00:01.000</time>
				</Timer>
				<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
					<name>AK_TendonTimer</name>
					<script>ak.tendonscount = ak.tendonscount or 0
ak.tendonscount = ak.tendonscount + 1
if ak.twoh.tendons == 0 then
	disableTimer("AK_TendonTimer")
	ak.tendonscount = 0
elseif ak.twoh.tendons == 1 and ak.tendonscount == 5 then
	ak.tendonscount = 0
	OppGainedAff("clumsiness")
elseif ak.twoh.tendons == 2 and ak.tendonscount == 4 then
	ak.tendonscount = 0
	OppGainedAff("clumsiness")
elseif ak.twoh.tendons == 3 and ak.tendonscount == 3  then
	ak.tendonscount = 0
	OppGainedAff("clumsiness")
elseif ak.twoh.tendons == 4 and ak.tendonscount == 2 then
	ak.tendonscount = 0
	OppGainedAff("clumsiness")
elseif ak.twoh.tendons == 5 and ak.tendonscount == 1 then
	ak.tendonscount = 0
	OppGainedAff("clumsiness")
end </script>
					<command></command>
					<packageName></packageName>
					<time>00:00:01.000</time>
				</Timer>
			</TimerGroup>
		</TimerGroup>
	</TimerPackage>
	<AliasPackage>
		<AliasGroup isActive="no" isFolder="yes">
			<name>Ak Opponent Curing</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>^t (.+)$</name>
				<script>target = matches[2] 
ak.highlighttarget = ak.highlighttarget or true --Change This To False if Errors
if ak.highlighttarget == true then
   if idtwo then killTrigger(idtwo) end
   idtwo = tempTrigger(target, [[selectString("]] .. target .. [[", 1) fg("red") resetFormat()]])
   target = target:title()
   if id then killTrigger(id) end
   id = tempTrigger(target, [[selectString("]] .. target .. [[", 1) fg("red") resetFormat()]])
else 
   target = target:title()
end
if ak.stack and ak.stack == "none" then ak.classenable() end
echo("\n")
cecho("&lt;cyan&gt; Target Changed to "..target)
echo("\n")
echo("\n")
send("st "..target)
ak.oresetparse()



--If your targetting errors, try setting ak.highlighttarget to false</script>
				<command></command>
				<packageName></packageName>
				<regex>^t (.+)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>^ora$</name>
				<script>send("queue addclear eqbal oattackra")</script>
				<command></command>
				<packageName></packageName>
				<regex>^ora$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>^ola$</name>
				<script>send("queue addclear eqbal oattackla")</script>
				<command></command>
				<packageName></packageName>
				<regex>^ola$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>^orl$</name>
				<script>send("queue addclear eqbal oattackrl")</script>
				<command></command>
				<packageName></packageName>
				<regex>^orl$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>^oll$</name>
				<script>send("queue addclear eqbal oattackll")</script>
				<command></command>
				<packageName></packageName>
				<regex>^oll$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>^odst$</name>
				<script>send("queue addclear eqbal oattack")</script>
				<command></command>
				<packageName></packageName>
				<regex>^odst$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>^oah$</name>
				<script>send("queue addclear eqbal oattackh")</script>
				<command></command>
				<packageName></packageName>
				<regex>^oah$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>^oat$</name>
				<script>send("queue addclear eqbal oattackt")</script>
				<command></command>
				<packageName></packageName>
				<regex>^oat$</regex>
			</Alias>
		</AliasGroup>
	</AliasPackage>
	<ActionPackage />
	<ScriptPackage>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>AK Opponent Tracking</name>
			<packageName></packageName>
			<script>--ak config **

ak = ak or {}
ak.cure = ak.cure or {}
ak.errorallowance = ak.errorallowance or 34
ak.manapercent = ak.manapercent or 100
ak.healthpercent = ak.healthpercent or 100
ak.currentmana = ak.currentmana or 5000
ak.maxmana = ak.maxmana or 5000
ak.currenthealth = ak.currenthealth or 5000
ak.maxhealth = ak.maxhealth or 5000
ak.bleeding = ak.bleeding or 0
ak.eatsbetweenaffs = 0

ak.aliases = ak.aliases or {}
ak.aliases.lastsend = ak.aliases.lastsend or {}
ak.queue = ak.queue or {}
ak.queue.eqbal = ak.queue.eqbal or {}
ak.queue.sent = {}

ak.pervasion = ak.pervasion or {}
ak.pervasion.initialbleed = false
ak.duress = ak.duress or {}
ak.ignition = ak.ignition or {}
ak.serpent = ak.serpent or {}
ak.dragon = ak.dragon or {}
ak.firelord = ak.firelord or {}
ak.firelord.spark = ak.firelord.spark or 0
ak.priest = ak.priest or {}
ak.shaman = ak.shaman or {}
ak.knight = ak.knight or {}
ak.pariah = ak.pariah or {}
ak.monk = ak.monk or {}
ak.jester = ak.jester or {}
ak.occie = ak.occie or {}
ak.alchemist = ak.alchemist or {}
ak.bard = ak.bard or {}
ak.magi = ak.magi or {}
ak.sentinel = ak.sentinel or {}
ak.depthswalker = ak.depthswalker or {}
ak.SnB = ak.SnB or {}
ak.druid = ak.druid or {}
ak.dwc = ak.dwc or {}
ak.dwb = ak.dwb or {}
ak.bm = ak.bm or {}
ak.sylvan = ak.sylvan or {}
ak.shaman.coagulation = true
ak.shaman.bloodlet = true
ak.shaman.relapse = true
ak.timers = ak.timers or {}
ak.occie = ak.occie or {}
ak.occie.aura = ak.occie.aura or {}
ak.occie.aura.physical = ak.occie.aura.physical or 0
ak.occie.aura.mental = ak.occie.aura.mental or 0
ak.occie.aura.unknownparse = ak.occie.aura.unknownparse or {}
ak.apostate = ak.apostate or {}
ak.shikudo = ak.shikudo or {}
ak.psion = ak.psion or {}
ak.psion.unweaving = ak.psion.unweaving or {}
ak.psion.unweaving.spirit = ak.psion.unweaving.spirit or 0
ak.mounted = false
ak.kata = ak.kata or 0
ak.twoh = ak.twoh or {}
ak.twoh.skull = 0
ak.twoh.ribs = 0
ak.twoh.tendons = 0
ak.twoh.wrist = 0
ak.twoh.modifier = 1
ak.twoh.salveconversion = {
   ["arms"] = "wrist",
   ["legs"] = "tendons",
   ["head"] = "skull",
   ["torso"] = "ribs",
}
ak.track = ak.track or {}
ak.slickfucks = ak.slickfucks or {}
ak.burstfucks = ak.burstfucks or {}
ak.alchemist = ak.alchemist or {}
ak.alchemist.humour = ak.alchemist.humour or {}
ak.alchemist.humour.sanguine = 0
ak.alchemist.humour.choleric = 0
ak.alchemist.humour.melancholic = 0
ak.alchemist.humour.phlegmatic = 0
ak.magi = ak.magi or {}
ak.magi.vibes = ak.magi.vibes or {
   ["Alarm"] = 0,
   ["Grounding"] = 0,
   ["Heat"] = 0,
   ["Creeps"] = 0,
   ["Dissipate"] = 0,
   ["Revelation"] = 0,
   ["Gravity"] = 0,
   ["Silence"] = 0,
   ["Harmony"] = 0,
   ["Energise"] = 0,
   ["Palpitation"] = 0,
   ["Adduction"] = 0,
   ["Stridulation"] = 0,
   ["Forest"] = 0,
   ["Tremors"] = 0,
   ["Disorientation"] = 0,
   ["Dissonance"] = 0,
   ["Oscillate"] = 0,
   ["Lullaby"] = 0,  
   ["Plague"] = 0, 
   ["Reverberation"] = 0,
}
ak.balancemodifier = ak.balancemodifier or "nimble"
ak.kata = ak.kata or 0
ak.bals = {}
ak.bals.salve = true
ak.bals.focus = true
ak.defs = ak.defs or {}
ak.defs.mass = false
ak.defs.shield = false
ak.defs.rebounding = false
affstrack = {
        venoms = {
                ["xentio"]     = "clumsiness",
                ["eurypteria"] = "recklessness",
                ["kalmia"]     = "asthma",
                ["delphinium"] = "sleep",
                ["digitalis"]  = "shyness",
                ["darkshade"]  = "darkshade",
                ["curare"]     = "paralysis",
                ["epteth"]     = "crippledarm",
                ["prefarar"]   = "sensitivity",
                ["monkshood"]  = "disloyalty",
                ["euphorbia"]  = "nausea",
                ["colocasia"]  = "deafblind",
                ["vernalius"]  = "weariness",
                ["epseth"]     = "crippledleg",
                ["larkspur"]   = "dizziness",
                ["slike"]      = "anorexia",
                ["notechis"]   = "haemophilia",
                ["vardrax"]    = "addiction",
                ["aconite"]    = "stupidity",
                ["selarnia"]   = "selarnia",
                ["gecko"]      = "slickness",
                ["scytherus"]  = "scytherus",
                ["voyria"]     = "voyria",
                ["pothealthleech"]= "healthleech",
                ["potloneliness"] = "loneliness",
                ["potepilepsy"]   = "epilepsy",
                ["torture"]  = "haemophilia",
                ["tormentone"] = "healthleech",
                ["tormenttwo"] = "confusion",
                ["exploit"] = "weariness",
                
                
        },
 
        applied = {
                ["body"]  = {"torso","itching","anorexia","frozen","aflame","selarnia"},
                ["skin"]  = {"anorexia", "crippledarm", "crippledleg","frozen","selarnia"},
                ["torso"] = {"anorexia", "torso", "aflame", "hypothermia","selarnia"},
                ["head"]  = {"stuttering","head","crushedthroat"},
                ["arms"]  = {"crippledarm", "rightarm", "leftarm"},
                ["legs"]  = {"crippledleg","rightleg","leftleg"},
                ["ears"]  = {"scalded","head"}
        }, 
        eaten = {
                ["piece of kelp"]    = {"asthma", "clumsiness", "hypochondria", "sensitivity", "weariness", "healthleech", "parasite"},
                ["aurum flake"]      = {"asthma", "clumsiness", "hypochondria", "sensitivity", "weariness", "healthleech", "parasite"},
                ["lobelia seed"]     = {"tenderskin", "spiritburn", "agoraphobia", "claustrophobia", "loneliness", "masochism", "recklessness", "vertigo", "spiritdisrupt", "airdisrupt", "earthdisrupt", "firedisrupt", "waterdisrupt"},
                ["argentum flake"]   = {"tenderskin", "spiritburn", "agoraphobia", "claustrophobia", "loneliness", "masochism", "recklessness", "vertigo", "spiritdisrupt", "airdisrupt", "earthdisrupt", "firedisrupt", "waterdisrupt"},
                ["prickly ash bark"] = {"confusion", "dementia", "hallucinations", "hypersomnia", "paranoia"},
                ["stannum flake"]    = {"confusion", "dementia", "hallucinations", "hypersomnia", "paranoia"},
                ["bellwort flower"]  = {"timeloop","generosity", "pacifism","justice","lovers"},
                ["cuprum flake"]     = {"timeloop","generosity", "pacifism","justice","lovers"},
                ["bayberry bark"]    = {"blind"},
                ["arsenic pellet"]   = {"blind"},
                ["hawthorn berry"]   = {"deaf"},
                ["calamine crystal"] = {"deaf"},
                ["goldenseal root"]  = {"sandfever","dizziness", "epilepsy", "impatience", "shyness", "stupidity", "depression"},
                ["plumbum flake"]    = {"sandfever","dizziness", "epilepsy", "impatience", "shyness", "stupidity", "depression"},
                ["bloodroot leaf"]   = {"pyramides","paralysis", "slickness"},
                ["magnesium chip"]   = {"pyramides","paralysis", "slickness"},
                ["ginseng root"]     = {"flushings","addiction", "darkshade", "haemophilia", "lethargy", "nausea", "scytherus"},
                ["ferrum flake"]     = {"flushings","addiction", "darkshade", "haemophilia", "lethargy", "nausea", "scytherus"},
                ["rage"]             = {"generosity", "pacifism","justice"},
                ["prickly pear"]     = {"pressure"},
                ["calcite mote"]     = {"pressure"},
        },

        focused = {
                "stuttering",
                "lovers",
                "agoraphobia",
                "anorexia",
                "claustrophobia",
                "confusion",
                "dizziness",
                "epilepsy",
                "generosity",
                "loneliness",
                "masochism",
                "pacifism",
                "recklessness",
                "shyness",
                "stupidity",
                "vertigo",
                "airdisrupt",
                "firedisrupt",
                "waterdisrupt",
                "paranoia",
                "dementia",
                "hallucinations",            
        },

        treed = {
                "crushedthroat",
                "stuttering",
                "itching",
                "aeon",
                "healthleech",
                "haemophilia",
                "clumsiness",
                "aflame",
                "paranoia",
                "vertigo",
                "agoraphobia",
                "dizziness",
                "claustrophobia",
                "recklessness",
                "epilepsy",
                "addiction",
                "stupidity",
                "scytherus",
                "slickness",
                "generosity",
                "justice",
                "pacifism",
                "confusion",
                "voyria",
                "weariness",
                "hallucinations",
                "confusion",
                "disloyalty",
                "lethargy",
                "shyness",
                "sensitivity",
                "asthma",
                "crippledarm",
                "crippledleg",
                "darkshade",
                "impatience",
                "anorexia",
                "loneliness",
                "hypochondria", 
                "selarnia",
                "leftleg",
                "leftarm",
                "rightleg",
                "rightarm",
                "frozen",
                "airdisrupt",
                "earthdisrupt",
                "firedisrupt",
                "spiritdisrupt",
                "waterdisrupt",
                "hellsight",
                "nausea",
                "lovers",
                "parasite",
                "depression",
                "timeloop",
                "manaleech",
                "tension",
                "tenderskin", 
                "spiritburn", 
                "pyramides",
                "sandfever",
        },
 
        restored = {
                "crippledarm",
                "crippledleg",
                "rightleg",
                "leftleg",
                "rightarm",
                "leftarm",              
        },
 
        smoked = {
                "deadening",
                "disloyalty",
                "slickness",
                "manaleech",
                "aeon",
                "hellsight",
                "tension",
        },

        score = {
                ["addiction"]      = 0,
                ["aeon"]           = 0,
                ["agoraphobia"]    = 0,
                ["anorexia"]       = 0,
                ["aflame"]         = 0,
                ["amnesia"]        = 0,
                ["armexpend"]      = 0,
                ["airfist"]        = 0,
                ["asthma"]         = 0,
                ["bitten"]         = 0,
                ["blind"]          = 0,
                ["blackout"]       = 0,
                ["bloodfire"]      = 0,
                ["blisters"]       = 0,
                ["bound"]          = 0,
                ["brand"]          = 0,
                ["claustrophobia"] = 0,
                ["clumsiness"]     = 0,
                ["conflagrate"]    = 0,
                ["confusion"]      = 0,
                ["corruption"]     = 0,
                ["crippledarm"]    = 0,
                ["crippledleg"]    = 0,
                ["crushedthroat"]  = 0,
                ["darkshade"]      = 0,
                ["deadening"]      = 0,
                ["deaf"]           = 0,
                ["dementia"]       = 0,
                ["depression"]     = 0,
                ["dehydrate"]      = 0,
                ["disloyalty"]     = 0,
                ["disrupt"]        = 0,
                ["dizziness"]      = 0,
                ["ensorcell"]      = 0,
                ["enlighten"]      = 0,
                ["epilepsy"]       = 0,
                ["frozen"]         = 0,
                ["flushings"]      = 0,
                ["focusextend"]    = 0,
                ["generosity"]     = 0,
                ["guilt"]          = 0,
                ["haemophilia"]    = 0,
                ["hallucinations"] = 0,
                ["hamstring"]      = 0,
                ["hierophant"]     = 0,
                ["healthleech"]    = 0,
                ["hellsight"]      = 0,
                ["hypersomnia"]    = 0,
                ["hypochondria"]   = 0,
                ["hypothermia"]    = 0,
                ["impaleslash"]    = 0,
                ["impatience"]     = 0,
                ["inquisition"]    = 0,
                ["insomnia"]       = 0,
                ["itching"]        = 0,
                ["justice"]        = 0,
                ["kola"]           = 0,
                ["latched"]        = 0,
                ["latency"]        = 0,
                ["lethargy"]       = 0,
                ["lovers"]         = 0,
                ["loneliness"]     = 0,
                ["masochism"]      = 0,
                ["manaleech"]      = 0,
                ["mindclamp"]      = 0,
                ["mindravaged"]    = 0,
                ["mycalium"]       = 0,
                ["nausea"]         = 0,
                ["pacifism"]       = 0,
                ["paralysis"]      = 0,
                ["parasite"]       = 0,
                ["paranoia"]       = 0,
                ["petrified"]      = 0,
                ["prone"]          = 0,
                ["preempt"]        = 0,
                ["pyramides"]      = 0,
                ["rebbies"]        = 0,
                ["recklessness"]   = 0,
                ["retribution"]    = 0,
                ["rixil"]          = 0,
                ["sandfever"]      = 0,
                ["scalded"]        = 0,
                ["scytherus"]      = 0,
                ["selarnia"]       = 0,
                ["sensitivity"]    = 0,
                ["shadowmadness"]  = 0,
                ["shyness"]        = 0,
                ["slime"]          = 0,
                ["slickness"]      = 0,
                ["tempslickness"]  = 0,
                ["sleep"]          = 0,
                ["spiritburn"]     = 0,
                ["stupidity"]      = 0,
                ["stuttering"]     = 0,
                ["surge"]          = 0,
                ["transfixed"]     = 0,
                ["tenderskin"]     = 0,
                ["timeflux"]       = 0,
                ["timeloop"]       = 0,
                ["trussed"]        = 0,
                ["unconscious"]     = 0,
                ["weariness"]      = 0,
                ["wrenchhead"]     = 0,
                ["wrenchtorso"]     = 0,
                ["whisperingmadness"] = 0,
                ["worm"]           = 0,
                ["vertigo"]        = 0,
                ["vitiate"]        = 0,
                ["voidfist"]       = 0,
                ["voyria"]         = 0,
                ["airdisrupt"]     = 0,
                ["earthdisrupt"]   = 0,
                ["flamefist"]      = 0,
                ["heartseed"]      = 0,
                ["trussed"]        = 0,
                ["unconscious"]    = 0,    
                ["firedisrupt"]    = 0,
                ["spiritdisrupt"]  = 0,
                ["waterdisrupt"]   = 0,
                ["rightleg"]       = 0,
                ["leftleg"]       = 0,
                ["rightarm"]       = 0,
                ["leftarm"]       = 0,
                ["head"]       = 0,
                ["torso"]       = 0,
                ["tension"]     = 0,
                ["pressure"]    = 0,
                ["unweavingbody"] = 0,
                ["unweavingmind"] = 0,
                ["unweavingspirit"] = 0,
        },
 
        cureall = {
                "timeloop",
                "parasite",
                "retribution",
                "shadowmadness",
                "depression",
                "pyramides",
                "itching",
                "crushedthroat",
                "stuttering",
                "addiction",
                "aflame",
                "agoraphobia",
                "anorexia",
                "asthma",
                "claustrophobia",
                "clumsiness",
                "confusion",
                "crippledarm",
                "crippledleg",   
                "darkshade",     
                "deadening",                
                "dementia",      
                "disloyalty",     
                "disrupt",       
                "dizziness",      
                "epilepsy",     
                "generosity",     
                "haemophilia",    
                "hallucinations", 
                "healthleech",
                "hellsight",
                "hypersomnia",    
                "hypochondria",   
                "impatience",     
                "lethargy",       
                "loneliness", 
                "lovers",
                "manaleech",    
                "masochism",  
                "nausea",    
                "pacifism",            
                "paranoia",       
                "recklessness",   
                "scytherus",    
                "selarnia",    
                "sensitivity",   
                "shyness",      
                "slickness",    
                "stupidity",     
                "weariness",     
                "vertigo",        
                "voyria",
                "tension",
                "pressure",
                "mycalium",
                "pyramides",
                "sandfever",
                "rebbies",
                "flushings",
                },
}
affstrack.hypo = {
   [1] = "nausea",
   [2] = "addiction",
   [3] = "lethargy",
}
affstrack.crushedpots = {
   ["piece of kelp"]   = "pothealthleech",
   ["bellwort flower"] = "vernalius",
   ["valerian leaf"]   = "gecko",
   ["lobelia seed"]    = "potloneliness",
   ["piece of slippery elm"] = "larkspur",
   ["kola nut"]        = "delphinium",
   ["goldenseal root"] = "potepilepsy",
   ["hawthorn berry"]  = "prefarar",
}

affstrack.physicallist = {"asthma","sensitivity","healthleech","haemophilia","clumsiness","darkshade","slickness","paralysis"}
affstrack.mentallist = {"addiction","dementia","stupidity","confusion","hypersomnia","paranoia","hallucinations","impatience","recklessness","masochism","agoraphobia","loneliness","lovers"}
affstrack.whisperlist = {"addiction","dementia","stupidity","confusion","hypersomnia","paranoia","hallucinations","impatience","recklessness","masochism","agoraphobia","loneliness","lovers"}
affstrack.enlightenlist = {"whisperingmadness","vertigo","dementia","stupidity","confusion","hypersomnia","paranoia","hallucinations","impatience","recklessness","masochism","agoraphobia","loneliness","lovers","dizziness","anorexia","hypochondria","claustrophobia"}
affstrack.smokelist = {"manaleech","deadening","disloyalty"}
affstrack.enlightenscore = 0
affstrack.accentatoscore = 0
affstrack.ginsengscore = 0
affstrack.pyradiusscore = 0
affstrack.goldenscore = 0
affstrack.kelpscore = 0
affstrack.mentalscore = 0
affstrack.totalaffs = 0
affstrack.impale = false
ak.randomaffs = 0
cecho("\n&lt;LimeGreen&gt;[&lt;DodgerBlue&gt;AK&lt;LimeGreen&gt;]: &lt;snow&gt;Loaded Module: AK Opponent Tracking!!")</script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>Hard Reset</name>
				<packageName></packageName>
				<script>function ak.oresetparse()
  target = target or "Austere"
  ak.dragonTarget = false
  ak.elementalTarget = false
  ak.stack = ak.stack or "none"
  ak.pariah.wracked = false
  affstrack.impale = false
  targetparry = "unknown"
  ak.bleeding = 0
  ak.flyer = false
  mycharacters = mycharacters or {}--This is for my Personal Gui
  if swiftcount == nil then swiftcount = 0 end
  disableTimer("Hypochondria Timer")
  opponenteat = 0
  promptset = {}
  applycure = {}
  ak.bals.salve = true
  ak.bals.focus = true
  opponenttree = 0
  ak.defs.mass = true
  ak.defs.shield = false
  if (wsys and not wsys.rager) or not wsys then
    ak.defs.rebounding = true
  end
  ak.defs.reRebounding = false
  ak.defs.sileris = true
  ak.defs.curseward = true
  ak.defs.holdbreath = false
  ak.defs.speed = true
  timerherb = 0
  if ak.timers.apply then
  	killTimer(ak.timers.apply)
  	ak.timers.apply = false
  end
  if ak.timers.salvebackup then 
  	killTimer(ak.timers.salvebackup) 
  end
  opponenthalftree = 0
  timertree = 0
  currentvenoms = {}
  lastvenom = {}
  targetlyred = 0
  boilable = true
  vodun = vodun or {}
  lockcheck = false
  ak.tza = false
  ak.deathstrike = false
  knownrun = nil
  parsedclasscures = false
  ak.waterbonded = false
  ak.psion.unweaving.spirit = 0
  ak.resetbacktrack()
  ak.twoh = ak.twoh or {}
  ak.twoh.skull = 0
  ak.twoh.ribs = 0
  ak.twoh.tendons = 0
  ak.twoh.wrist = 0
  ak.occie.aura.physical =  0
  ak.occie.aura.mental = 0
  ak.druid.sumac = true
  ak.alchemist.humour.sanguine = 0
  ak.alchemist.humour.choleric = 0
  ak.alchemist.humour.melancholic = 0
  ak.alchemist.humour.phlegmatic = 0
  ak.pervasion.initialbleed = false
  ak.pervasion.hitcount = 0
  ak.shaman.Relapseaff = "none"
  ak.shaman.coagulation = true
  ak.shaman.bloodlet = true
  ak.shaman.relapse = true
  ak.shaman.GetFashions = false
  ak.psion.transcend = 0
  if ak.scaldTimer then killTimer(ak.scaldTimer) end
  if ak.tendonTimer then killTimer(ak.tendonTimer) end
  if ak.skullTimer then killTimer(ak.skullTimer) end
  if ak.wristTimer then killTimer(ak.wristTimer) end
  if ak.ribTimer then killTimer(ak.ribTimer) end
  ak.track.flown = false
  ak.diagnosingoffbal = false
  ak.CustomCureSend = false
  ak.manapercent = 100
  ak.healthpercent = 100
  ak.currentmana = 5000
  ak.maxmana = 5000
  ak.currenthealth = 5000
  ak.maxhealth = 5000
  ak.engaged = false
  ak.TorsoWrench = false
  ak.HeadWrenchDisable = nil
  ak.InitialWrench = nil
  ak.propped = false
  ak.SerpentRotateBite = false
  ak.duress.pressure = 0
  ak.duress.scourrelapse = false
  ak.duress.stranglerelapse = false
  ak.duress.zephyrrelapse = false
  ak.duress.asphyxiate = false
  ak.tumbling = false
  for k,v in pairs(affstrack.score) do
     affstrack.score[k] = 0
  end
  affstrack.enlightenscore = 0
  affstrack.ginsengscore = 0
  affstrack.goldenscore = 0
  affstrack.pyradiusscore = 0
  affstrack.kelpscore = 0
  affstrack.tramplescore = 0
  affstrack.mentalscore = 0
  affstrack.totalaffs = 0
  ak.randomaffs = 0
  ak.knownmaxhealth = ak.knownmaxhealth or {}
  ak.limbs.limb_table_check(target)
  if gmcp and ak.stack == "none" then
     ak.classenable()
  end
  ak.scoreup(target)
  if gmcp and gmcp.Char and gmcp.Char.Vitals and gmcp.Char.Vitals.maxhp then
     ak.knownmaxhealth["Me"] = tonumber(gmcp.Char.Vitals.maxhp) or 5150
     ak.classlockadd()
     if not ak.displaydecide then 
        ak.classenable()
        if ak.nodisplay == false and not table.contains(mycharacters,gmcp.Char.Name.name) then 
           init() 
        end 
        ak.displaydecide = true 
     end
  end
  if ak.radiancestack then
     ak.stack = ak.radiancestack
     ak.radiancestack = nil
  end
  cecho("&lt;cyan&gt; Reset Success!\n\n")
end </script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Soft Reset</name>
				<packageName></packageName>
				<script>function ak.softreset()
  ak.tza = false
  ak.deathstrike = false
  ak.pariah.wracked = false
	ak.shaman.Relapseaff = "none"
  ak.shaman.coagulation = true
  ak.shaman.bloodlet = true
	ak.shaman.GetFashions = false
	ak.pervasion.hitcount = 0
	ak.pervasion.initialbleed = false
  ak.waterbonded = false
	ak.bleeding = 0
  ak.shaman.relapse = true
	cecho("&lt;cyan&gt; \nINITATED A SOFT OPPONENT AFFLICTON RESET, DID NOT RESET ANY BALANCES!!")
	cecho("&lt;yellow&gt; \nINITATED A SOFT OPPONENT AFFLICTON RESET, DID NOT RESET ANY BALANCES!!")
	cecho("&lt;cyan&gt; \nINITATED A SOFT OPPONENT AFFLICTON RESET, DID NOT RESET ANY BALANCES!!")
	cecho("&lt;yellow&gt; \nINITATED A SOFT OPPONENT AFFLICTON RESET, DID NOT RESET ANY BALANCES!!\n\n")
	disableTrigger("Swiftstring")
	disableTimer("Hypochondria Timer")
	ak.resetbacktrack()
	targetlyred = 0
	applycure = {}
	ak.bals.salve = true
	ak.bals.focus = true
  ak.psion.KillSecondaryTick()
	if ak.tendonTimer then killTimer(ak.tendonTimer) end
	if ak.skullTimer then killTimer(ak.skullTimer) end
	if ak.wristTimer then killTimer(ak.wristTimer) end
	if ak.ribTimer then killTimer(ak.ribTimer) end
	if ak.timers.salvebackup then killTimer(ak.timers.salvebackup) end
	local wasdehydrated = false
	local wastimefluxed = false
	local hieroup = false
	local rixilup = false
	if affstrack and affstrack.score then
   	if affstrack.score.dehydrate == 100 then
  	    wasdehydrated = true
  	 end
  	 if affstrack.score.timeflux == 100 then
  	    wastimefluxed = true
  	 end
	end	
	if affstrack.score.hierophant == 100 then
		hieroup = true
	end
	if affstrack.score.rixil == 100 then
		rixilup = true
	end
	ak.engaged = false

   for k,v in pairs(affstrack.score) do
      affstrack.score[k] = 0
   end

	if hieroup then 
		affstrack.score.hierophant = 100
	end
	if rixilup then 
		affstrack.score.rixil = 100
	end
	affstrack.enlightenscore = 0
	affstrack.ginsengscore = 0
	affstrack.goldenscore = 0
	affstrack.pyradiusscore = 0
	affstrack.kelpscore = 0
	affstrack.tramplescore = 0
	affstrack.mentalscore = 0
	affstrack.totalaffs = 0
	ak.twoh = ak.twoh or {}
	ak.twoh.skull = 0
	ak.twoh.ribs = 0
	ak.twoh.tendons = 0
	ak.twoh.wrist = 0
	ak.occie.aura.physical =  0
	ak.occie.aura.mental = 0
ak.druid.sumac = true
	ak.alchemist.humour.sanguine = 0
	ak.alchemist.humour.choleric = 0
	ak.alchemist.humour.melancholic = 0
	ak.alchemist.humour.phlegmatic = 0
	ak.randomaffs = 0
	opponenthalftree = 0
	if wasdehydrated then
	   affstrack.score.dehydrate = 100
	end
	if wastimefluxed then
	   affstrack.score.timeflux = 100
	end
	ak.track.flown = false
	ak.currentmana = 5000
	ak.maxmana = 5000
	ak.currenthealth = 5000
	ak.maxhealth = 5000
	ak.manapercent = 100
	ak.healthpercent = 100
	ak.classlockadd()
  if ak.radiancestack then
    ak.stack = ak.radiancestack
    ak.radiancestack = nil
  end
	ak.alchemist.humour.sanguine = 0
	ak.alchemist.humour.choleric = 0
	ak.alchemist.humour.phlegmatic = 0
	ak.alchemist.humour.melancholic = 0
  ak.scoreup(target)
end</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Osettings! --Move This Outside of AK/ DELETE THE FOURTH LINE DOWN</name>
				<packageName></packageName>
				<script>
ak = ak or {}

if ak.mycustomoffense then return end           --DELETE THIS SHIT OUT OF YOUR PERSONAL VARS

ak.MovementKeys = ak.MovementKeys or {"Tecton","Maya"}--add yourself here to allow num key movement
ak.disableAllEchos = false --Set to Disable Relays and Prompt
ak.nodisplay = false  --Set to True to Turn off Display!  Always Retarget something to refresh.
ak.expertdiagnose = false --Set to False to Disable ED
ak.obacktrack = true  --Set to False to Disable Backtracking
ak.oprotrack = true --If you do unknown affs, do not enable this
ak.owhy = true --If you do not have 100% accurate affliction information(group fighting/Illusion), do not enable this
ak.highlighttarget = true --Self Explanatory
------------------------------------------------------------------------------------------------------------------

ak.spear = "a Stormspear"                          --This is for Spear Venom Tracking Purposes
ak.odirk = "Thoth's fang"                          --This is for Dstab Venom Tracking Purposes

-------------------------------------------------------------------------------------------------------------------

--Adding your weapons to limb counter:
ak.limbs = ak.limbs or {} 
ak.limbs.myweapons = ak.limbs.myweapons or {

		--Proximity Values.  Finds the closest to our target health and uses that.
		--These are percentage values, so a single stab vs 4000 health target will do 9% damage.
   ["a Soulpiercer"] = {
      [2563] = 7,
      [4000] = 9,
      [5000] = 10,
      [6000] = 11,
   },
   ["a Logosian longsword"] = {
      [2563] = 7,
      [4000] = 9,
      [5000] = 10,
      [6000] = 11,
   },
}

--Adding your custom limb formula:

ak.limbs.myformulas = {} 

--Must retain formatting as a function and us ak's called weapon in function name(example is hfp).  
--Limbs break at 100, ergo these should return a percentage. Dragon rend would return 25

function ak.limbs.myformulas.hfp(who, attacker, weapon, limb, augment, check)
	local whomaxhealth = ak.limbs.FindTargetHealth(who)
  local damage = 0
	damage = roundUp(.0897*whomaxhealth+227*1.35,0)
	damage = (100 * damage/whomaxhealth) --Converting to a percentage
	return damage  
end

---------------------------------------------------------------------------------------------------------------------

--OBVIOUSLY YOU DON"T WANT TO LOOK LIKE YOU ARE USING MY SYSTEM!  PEOPLE MIGHT LOOK DOWN ON YOU!!

function ak.echogain(string)
  if not ak.disableAllEchos then
    local format = "&lt;white&gt;\nProcessed Affliction(&lt;yellow&gt;" ..string.. "&lt;white&gt;)"  --Change this line for added afflictions
    if isPrompt() then   
      deleteLine()
      cecho(format)
      ak.showPrompt()
    else
      cecho(format)
    end
  end
end

function ak.echolost(string)
  if not ak.disableAllEchos then 
    local format = "&lt;white&gt;\nLost Affliction(&lt;yellow&gt;" ..string.. "&lt;white&gt;)" --Change this line for removed afflictions
    if isPrompt() then   
      deleteLine()
      cecho(format)
      ak.showPrompt()
    else
      cecho(format)
    end
  end
end

function ak.echoForPossibleCures(string)
  if not ak.disableAllEchos then
    local format = "&lt;white&gt;\nProcessed Cures(&lt;yellow&gt;" ..string.. "&lt;white&gt;)"  --Change this line for removed afflictions
    if isPrompt() then   
      deleteLine()
      cecho(format)
      ak.showPrompt()
    else
      cecho(format)
    end
  end
end

function EchoForMajorAff(incoming,color,color2,color3)
	local color = color or "red"
	local color2 = color2 or "cyan"
	local color3 = color3 or "green"
	cecho("\n&lt;purple&gt; --------------------------------------------------------------")
	cecho("\n&lt;"..color.."&gt; --------------------&lt;"..color2.."&gt;GOT&lt;"..color3.."&gt; "..incoming.."&lt;"..color.."&gt;!!--------------------------")
	cecho("\n&lt;"..color.."&gt; --------------------&lt;"..color2.."&gt;GOT&lt;"..color3.."&gt; "..incoming.."&lt;"..color.."&gt;!!--------------------------")
	cecho("\n&lt;"..color.."&gt; --------------------&lt;"..color2.."&gt;GOT&lt;"..color3.."&gt; "..incoming.."&lt;"..color.."&gt;!!--------------------------")
	cecho("\n&lt;"..color.."&gt; --------------------&lt;"..color2.."&gt;GOT&lt;"..color3.."&gt; "..incoming.."&lt;"..color.."&gt;!!--------------------------")
	cecho("\n&lt;"..color.."&gt; --------------------&lt;"..color2.."&gt;GOT&lt;"..color3.."&gt; "..incoming.."&lt;"..color.."&gt;!!--------------------------")
	cecho("\n&lt;purple&gt; --------------------------------------------------------------")
end


----------------------------------------------------------------------------------------------------------------------

--USE THIS TO SET YOUR SERVERSIDE ALIASES FOR YOU, DEPENDING ON THEIR AFFS
--THEN SIMPLY CALL YOUR SERVERSIDE ALIAS


function ak.mycustomoffense()
   if ak.stack == "example" then --make stack variable default below
      --venom_select()
      --attack_select()
      --additional_attack_decision()
      --set_server_side_aliases_using_info_from_above()
	 elseif ak.stack == "dragon" then
			ak.dragon.default.main() 
   end
end

----------------------------------------------------------------------------------------------------------------------

--*

--Svo Prompt--

--add ^y@ml_oprompt to your custom prompt

--*


--WYS Prompt--

--type wshow display

--add @owysprompt into your prompt



-----------------------------------------------------------------------------------------------------------------------


</script>
				<eventHandlerList />
			</Script>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Multiuse Functions</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>oclass</name>
					<packageName></packageName>
					<script>NoMiddle = NoMiddle or {}

function ak.MonkType()
  if gmcp.Char.Vitals and gmcp.Char.Vitals.charstats[4] and string.find(gmcp.Char.Vitals.charstats[4], "Form") then
    return "Shikudo"
  else
    return "Tekura"
  end
end

function ak.KillTriggers()
  disableKey("Shaman Keys")
  disableKey("Dragon Keys")
  disableTrigger("Air Lord Group")
  disableTrigger("Water Lord Group")
  disableTrigger("Monk Group")
  disableTrigger("Sentinel Group")
  disableTrigger("Depthswalker Group")
  disableTrigger("Runewarden Group")
  disableTrigger("Infernal Group")
  disableTrigger("2h Group")
  disableTrigger("Druid Group")
  disableTrigger("Totem Group")
  disableTrigger("Undead Group")
  disableTrigger("Serpent Group")
  disableTrigger("Jester Group")
  disableTrigger("Tarot Group")
  disableTrigger("Magi Group")
  disableTrigger("Psion Group")
  disableTrigger("Apostate Group")
  disableTrigger("Shaman Group")
  disableTrigger("Dragon Group")
  disableTrigger("Sword &amp; Board Group")
  disableTrigger("Bard Group")
  disableTrigger("Blademaster Group")
  disableTrigger("Fire Lord Group")
  disableTrigger("Occultist Group")
  disableTrigger("Sylvan Group")
  disableTrigger("Alchemist Group")
  disableTrigger("Priest Group")
  disableTrigger("Paladin Group")
  disableTrigger("Pariah Group")
end

function ak.classenable()
  if ak.CustomGuiEnable then
    ak.CustomGuiEnable()
  end
  if ak.morphingCheck then
    ak.morphingCheck()
  end
  ak.defaultstack()
  if gmcp.Char.Status.race:match("Dragon") or gmcp.Char.Status.class ~= "Shaman" then
    swiftcount = 0
  end
  if gmcp.Char.Status.race == "Undead" then
    ak.KillTriggers()
    enableTrigger("Undead Group")
    cecho("&lt;yellow&gt;\nUNDEAD ENABLED\n")
  elseif gmcp.Char.Status.race:match("Dragon") then
    ak.KillTriggers()
    enableTrigger("Dragon Group")
    if not table.contains(ak.MovementKeys, gmcp.Char.Name.name) then
      enableKey("Dragon Keys")
    end
    cecho("&lt;yellow&gt;\nDRAGON ENABLED\n")
  elseif gmcp.Char.Status.class == "Monk" then
    ak.KillTriggers()
    enableTrigger("Monk Group")
    cecho("&lt;yellow&gt;\nMONK ENABLED\n")
  elseif gmcp.Char.Status.class == "Pariah" then
    ak.KillTriggers()
    enableTrigger("Pariah Group")
    cecho("&lt;yellow&gt;\nPARIAH ENABLED\n")
  elseif gmcp.Char.Status.class == "Druid" then
    ak.KillTriggers()
    enableTrigger("Druid Group")
    cecho("&lt;yellow&gt;\nDRUID ENABLED\n")
  elseif gmcp.Char.Status.class == "Priest" then
    ak.KillTriggers()
    enableTrigger("Priest Group")
    cecho("&lt;yellow&gt;\nPRIEST ENABLED\n")
  elseif gmcp.Char.Status.class == "Magi" then
    ak.KillTriggers()
    enableTrigger("Magi Group")
    cecho("&lt;yellow&gt;\nMAGI ENABLED\n")
  elseif gmcp.Char.Status.class == "Sylvan" then
    ak.KillTriggers()
    enableTrigger("Sylvan Group")
    cecho("&lt;yellow&gt;\nSYLVAN ENABLED\n")
  elseif gmcp.Char.Status.class == "Shaman" then
    ak.KillTriggers()
    enableKey("Shaman Keys")
    enableTrigger("Shaman Group")
    cecho("&lt;yellow&gt;\nSHAMAN ENABLED\n")
  elseif gmcp.Char.Status.class == "Serpent" then
    ak.KillTriggers()
    enableTrigger("Serpent Group")
    cecho("&lt;yellow&gt;\nSERPENT ENABLED\n")
  elseif gmcp.Char.Status.class == "Jester" then
    ak.KillTriggers()
    enableTrigger("Tarot Group")
    enableTrigger("Jester Group")
    cecho("&lt;yellow&gt;\nJESTER\n")
  elseif gmcp.Char.Status.class == "Alchemist" then
    ak.KillTriggers()
    enableTrigger("Alchemist Group")
    cecho("&lt;yellow&gt;\nALCHEMIST\n")
  elseif
    gmcp.Char.Status.class == "Infernal" or
    gmcp.Char.Status.class == "Paladin" or
    gmcp.Char.Status.class == "Runewarden"
  then
    ak.KillTriggers()
    if gmcp.Char.Status.class == "Paladin" then
      enableTrigger("Paladin Group")
    elseif gmcp.Char.Status.class == "Runewarden" then
      enableTrigger("Runewarden Group")
    elseif gmcp.Char.Status.class == "Infernal" then
      enableTrigger("Infernal Group")
    end
    enableTrigger("Totem Group")
    enableTrigger("2h Group")
    enableTrigger("Sword &amp; Board Group")
    cecho("&lt;yellow&gt;\nKNIGHT ENABLED\n\n")
  elseif gmcp.Char.Status.class == "Sentinel" then
    ak.KillTriggers()
    enableTrigger("Sentinel Group")
    cecho("&lt;yellow&gt;\nSENTINEL ENABLED\n")
  elseif gmcp.Char.Status.class == "Occultist" then
    ak.KillTriggers()
    enableTrigger("Tarot Group")
    enableTrigger("Occultist Group")
    cecho("&lt;yellow&gt;\nOCCULTIST ENABLED\n")
  elseif gmcp.Char.Status.class == "Bard" then
    ak.KillTriggers()
    enableTrigger("Bard Group")
    cecho("&lt;yellow&gt;\nBARD ENABLED\n")
  elseif gmcp.Char.Status.class == "Depthswalker" then
    ak.KillTriggers()
    enableTrigger("Depthswalker Group")
    cecho("&lt;yellow&gt;\nDEPTHSWALKER ENABLED\n")
  elseif gmcp.Char.Status.class == "Apostate" then
    ak.KillTriggers()
    enableTrigger("Apostate Group")
    cecho("&lt;yellow&gt;\nABOSTATE ENABLED\n")
  elseif gmcp.Char.Status.class == "water Elemental Lord" or gmcp.Char.Status.class == "water Elemental Lady" then
    ak.KillTriggers()
    enableTrigger("Water Lord Group")
    cecho("&lt;yellow&gt;\n\nWATER ELEMENTAL ENABLED\n")
  elseif gmcp.Char.Status.class == "air Elemental Lord" or gmcp.Char.Status.class == "air Elemental Lady" then
    ak.KillTriggers()
    enableTrigger("Air Lord Group")
    cecho("&lt;yellow&gt;\nAIR ELEMENTAL ENABLED\n")
  elseif gmcp.Char.Status.class == "fire Elemental Lord" or gmcp.Char.Status.class == "fire Elemental Lady" then
    ak.KillTriggers()
    enableTrigger("Fire Lord Group")
    cecho("&lt;yellow&gt;\nFire ELEMENTAL ENABLED\n\n")
  elseif gmcp.Char.Status.class == "Blademaster" then
    ak.KillTriggers()
    enableTrigger("Blademaster Group")
    cecho("&lt;yellow&gt;\nBLADEMASTER ENABLED\n")
  elseif gmcp.Char.Status.class == "Psion" then
    ak.KillTriggers()
    enableTrigger("Psion Group")
    enableKey("Psion Keys")
    cecho("&lt;yellow&gt;\nPsion ENABLED\n")
  end
  ak.scoreup(target)
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>oaff check</name>
					<packageName></packageName>
					<script>
function ak.check(what, number)
   if not number then local number = 100 end
   if table.contains(affstrack.score, what) then
      if affstrack.score[what] &gt;= number then
         return true
      else
         return false
      end
   elseif table.contains(affstrack.venoms, what) then
      if affstrack.score[affstrack.venoms[what]] &gt;= number then
         return true
      else
         return false
      end
   end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>System Status Checking</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ak.syspause()
   if svo then 
      if svo.affl.retardation then 
         return true
      else
         return false
      end
   elseif wsys then
      if wsys.paused or wsys.softpaused then 
         return true
      else
         return false
      end
   else
       return false
   end
end

function inretardation()
   if svo then 
      if svo.affl.retardation then 
         return true
      else
         return false
      end
   elseif wsys then
      if wsys.isslowed() then 
         return true
      else
         return false
      end
   else
       return false
   end
end

function inaeon()
   if svo then 
      if svo.affl.aeon then 
         return true
      else
         return false
      end
   elseif wsys then
      if wsys.isslowed() then 
         return true
      else
         return false
      end
   else
       return false
   end
end

function inlyre()
   if svo then
      if svo.conf.lyre then
         return true
      else
         return false
      end
   elseif wsys then
		if wsys.uselyre == true and wsys.def.lyre == true then
       	return true
		else
			return false
		end
   else 
       return false
   end
end 

</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>System Specific Functions</name>
					<packageName></packageName>
					<script>function ak.deleteFull()
   if svo then
	 		svo.deleteLineP()
	 else
      deleteFull() --Wsys Has An Overwrite
   end
end

function ak.showPrompt()
	if wsys then
		wsys.showPrompt()
	elseif svo and svo.showprompt then
		echo("\n")
		svo.showprompt()
	else
		send("")
	end
end

if wsys then
	function wsys.showPrompt()
	  local promptstring = wsys.aff.blackout and wsys.settings.blackoutprompt or wsys.settings.prompt
	  --sub out the # color tags
	  promptstring = string.gsub(promptstring, "#([A-Za-z_:]+)", wsys.promptColorSub )
	  --sub out the @ prompt tags
	  promptstring = string.gsub(promptstring, "@(%w+)", wsys.promptTagSub )
	
	  if wsys.def.lyre then promptstring = promptstring .. "&lt;gold&gt; L" end
		if wsys.uselyre then promptstring = promptstring .. "&lt;green&gt; *[&lt;white&gt;LYRE MODE&lt;green&gt;]*" end 
		
	  if wsys.vmode then promptstring = promptstring ..  "&lt;MediumVioletRed&gt; vivi" end
	  if wsys.heartseedmode then promptstring = promptstring ..  "&lt;firebrick&gt; H&lt;LimeGreen&gt;Seed" end
	  if wsys.bardmode then promptstring = promptstring .. "&lt;firebrick&gt; BARD" end
		cecho("\n"..promptstring)
	end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>oscore</name>
					<packageName></packageName>
					<script>--scoreup
-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ak.scoreup(whom)
if ak.expertdiagnose and not gmcp.Char.Status.race:match("Dragon") and not ak.pause and not ak.syspause() then
   ak.expertRun()
end
--"Haemophilia, clumsiness, sensitivity, healthleech, darkshade, lethargy."
affstrack.accentatoscore = affstrack.score.impatience + affstrack.score.paranoia + affstrack.score.claustrophobia + affstrack.score.vertigo + affstrack.score.confusion + affstrack.score.dizziness + affstrack.score.stupidity + affstrack.score.addiction + affstrack.score.epilepsy + affstrack.score.anorexia + affstrack.score.generosity + affstrack.score.amnesia
affstrack.mentalscore = affstrack.accentatoscore + affstrack.score.agoraphobia + affstrack.score.recklessness
affstrack.mentalscore = affstrack.mentalscore / 100
affstrack.accentatoscore = affstrack.accentatoscore / 100

affstrack.kelpscore = affstrack.score.healthleech + affstrack.score.asthma + affstrack.score.clumsiness + affstrack.score.hypochondria + affstrack.score.sensitivity + affstrack.score.weariness 
affstrack.kelpscore = affstrack.kelpscore / 100
affstrack.ginsengscore = affstrack.score.addiction + affstrack.score.darkshade + affstrack.score.haemophilia + affstrack.score.lethargy + affstrack.score.nausea + affstrack.score.scytherus
affstrack.ginsengscore = affstrack.ginsengscore / 100

affstrack.goldenscore =  affstrack.score.dizziness + affstrack.score.epilepsy + affstrack.score.impatience + affstrack.score.shyness + affstrack.score.stupidity
affstrack.goldenscore = affstrack.goldenscore / 100

affstrack.pyradiusscore = affstrack.score.clumsiness + affstrack.score.lethargy + affstrack.score.haemophilia + affstrack.score.healthleech + affstrack.score.sensitivity + affstrack.score.darkshade 
affstrack.pyradiusscore = affstrack.pyradiusscore / 100
softscore = affstrack.score.anorexia + affstrack.score.slickness + affstrack.score.asthma
softscore = softscore / 100
truescore = affstrack.score.paralysis + affstrack.score.impatience + affstrack.score.anorexia + affstrack.score.slickness + affstrack.score.asthma
truescore = truescore / 100
affstrack.tramplescore = 0
ak.trample()
affstrack.totalaffs = 0
affstrack.enlightenscore = 0
affstrack.whisperscore = 0
for k,v in pairs(affstrack.score) do
   if v &gt; 1 then
      affstrack.totalaffs = affstrack.totalaffs + v
      if table.contains(affstrack.enlightenlist, k) then
         affstrack.enlightenscore = affstrack.enlightenscore + v
      end
      if table.contains(affstrack.whisperlist, k) then
         affstrack.whisperscore = affstrack.whisperscore + v
      end
   end
end
affstrack.totalaffs = affstrack.totalaffs / 100
affstrack.enlightenscore = affstrack.enlightenscore / 100
affstrack.whisperscore = affstrack.whisperscore / 100
if ak.tzantzajinxed then
	ak.tzantzajinxed = false
elseif target and not ak.pause and not ak.syspause() then 
   ak.serveraliases() 
end
ak.prompt.scoreup()
if ak.nodisplay then ak.noDisplay() else ak.refreshAffs() end
end
  --&lt;3
function ak.trample() 
   affstrack.tramplescore = 0
   affstrack.tramplescore = affstrack.score["leftarm"] + affstrack.score["leftleg"] + affstrack.score["rightleg"] + affstrack.score["rightarm"]
   affstrack.tramplescore = affstrack.tramplescore / 100
end
</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>oscore edit functions</name>
					<packageName></packageName>
					<script>--OppGainedAff

function OppGainedAff(aff,source)
  if not aff then return end
  local affStr = {}
  aff = aff:lower()
  if string.find(aff," ") then                          --Multi Venoms
    ak.eatsbetweenaffs = 0
    for word in string.gmatch(aff, "%a+") do
         if (word == "sensitivity" or word == "prefarar") and affstrack.score.deaf == 0 then 
            word = "deaf" 
         end
         if word == "slickness" then ak.defs.sileris = false end
         if table.contains(affstrack.mentallist, word) then
            ak.occie.aura.mental = ak.occie.aura.mental + 1 
         end
         if table.contains(affstrack.physicallist, word) then
            ak.occie.aura.physical = ak.occie.aura.physical + 1 
         end
         if word == "amnesia" then
            affstrack.score.amnesia = 100
            if amnesiatimer then 
              killTimer(amnesiatimer)
              amnesiatimer = nil 
            end
            amnesiatimer = tempTimer(1, [[OppLostAff("amnesia")]])
         elseif string.find(word,"unweave") then
            affstrack.score[word] = affstrack.score[word] + 100
            table.insert(affStr,word:title())
         elseif word == "wrenchhead" then
            affstrack.score.wrenchhead = 100
            OppGainedAff("dizziness")
            disableTimer("Wrench Head Timer")
            enableTimer("Wrench Head Timer")
            ak.HeadWrenchDisable = tempTimer(24,[[affstrack.score.wrenchhead = 0;ak.scoreup(target)]])
            ak.InitialWrench = tempTimer(3.5,[[OppGainedAff("dizziness")]])
            table.insert(affStr,word:title())
         elseif word == "armexpend" then
            affstrack.score.armexpend = 100
            ak.armexpendtimer = tempTimer(15,[[affstrack.score.armexpend = 0;ak.scoreup(target)]])
            table.insert(affStr,word:title())
         elseif word == "ensorcell" then
            affstrack.score.ensorcell = 100
            table.insert(affStr,word:title())
        elseif word == "focusextend" then
            affstrack.score.focusextend = 100
            ak.focusextenddisable = tempTimer(8,[[affstrack.score.focusextend = 0;ak.scoreup(target)]])
            table.insert(affStr,word:title())        
         elseif word == "vitiate" then
            affstrack.score.vitiate = 100
            ak.vitiatetimer = tempTimer(150,[[affstrack.score.vitiate = 0;ak.scoreup(target)]])
            table.insert(affStr,word:title())
         elseif word == "blisters" then
            affstrack.score.blisters = 100
            ak.blisterkiller = tempTimer(20,[[affstrack.score.blisters = 0;ak.scoreup(target)]])
            table.insert(affStr,word:title())
         elseif word == "hamstring" then
            affstrack.score.hamstring = 100
            if ak.hamstringtimer then killTimer(ak.hamstringtimer) end
            ak.hamstringtimer = tempTimer(9.5,[[affstrack.score.hamstring = 0;ak.scoreup(target)]])
            table.insert(affStr,word:title())         
         elseif word == "worm" then
            affstrack.score.worm = 100
            ak.wormtimer = tempTimer(20,[[affstrack.score.worm = 0;ak.scoreup(target)]])
            table.insert(affStr,word:title())             
         elseif word == "wrenchtorso" then
            affstrack.score.wrenchtorso = 100
            ak.TorsoWrenchDisable = tempTimer(24,[[affstrack.score.wrenchtorso = 0;ak.scoreup(target)]])
            table.insert(affStr,word:title())
         elseif word == "epseth" or word == "crippledleg" then
            if affstrack.score["leftleg"] &lt; 100 then       
              affstrack.score["leftleg"] = 100
              ak.AddedAffReset("leftleg") 
              table.insert(affStr,word:title())
            elseif affstrack.score["rightleg"] &lt; 100 then       
              affstrack.score["rightleg"] = 100
              ak.AddedAffReset("rightleg") 
              table.insert(affStr,word:title())
            end
         elseif word == "epteth" or word == "crippledarm" then
            if affstrack.score["leftarm"] &lt; 100 then       
              affstrack.score["leftarm"] = 100
              ak.AddedAffReset("leftarm") 
              table.insert(affStr,word:title())
            elseif affstrack.score["rightarm"] &lt; 100 then       
              affstrack.score["rightarm"] = 100
              ak.AddedAffReset("rightarm") 
              table.insert(affStr,word:title())
            end
         elseif word == "frozen" then
            affstrack.score[word] = affstrack.score[word] + 100 
            table.insert(affStr,aff:title()) 
            if affstrack.score.frozen &gt; 300 then
               affstrack.score.frozen = 300
            end
         elseif word == "deepfreeze" then
            affstrack.score["frozen"] = affstrack.score["frozen"] + 200 
            table.insert(affStr,"Frozen") 
            if affstrack.score.frozen &gt; 300 then
               affstrack.score.frozen = 300
            end
         elseif affstrack.score[word] then
            if affstrack.score[word] &lt; 100 then       
               affstrack.score[word] = 100
               ak.AddedAffReset(word)
               if (word == "deaf" or word == "sensitivity") then 
                  word = "prefarar" 
               end   
               table.insert(affStr,word:title())
            end
         elseif affstrack.venoms[word] then 
            if affstrack.score[affstrack.venoms[word]] &lt; 100 then    
               affstrack.score[affstrack.venoms[word]] = 100
               ak.AddedAffReset(affstrack.venoms[word])
               if (word == "deaf" or word == "sensitivity") then 
                  word = "prefarar" 
               end
               table.insert(affStr,affstrack.venoms[word]:title())  
            end
         end
      end
  else          --Single venom
     ak.eatsbetweenaffs = 1
     if aff == "slickness" then ak.defs.sileris = false end
     if (aff == "sensitivity" or aff == "prefarar") and affstrack.score.deaf == 0 then 
        aff = "deaf" 
     end  
     if table.contains(affstrack.mentallist, aff) then
        ak.occie.aura.mental = ak.occie.aura.mental + 1 
     end
     if table.contains(affstrack.physicallist, aff) then
        ak.occie.aura.physical = ak.occie.aura.physical + 1 
     end
     if aff == "amnesia" then
        affstrack.score.amnesia = 100
        if amnesiatimer then 
           killTimer(amnesiatimer)
           amnesiatimer = nil 
        end
        amnesiatimer = tempTimer(1, [[OppLostAff("amnesia")]])
     elseif string.find(aff,"unweave") then
        affstrack.score[aff] = affstrack.score[aff] + 100
        table.insert(affStr,aff:title())
     elseif aff == "wrenchhead" then
        affstrack.score.wrenchhead = 100
        affstrack.score.torso = 100
        OppGainedAff("dizziness")
        disableTimer("Wrench Head Timer")
        enableTimer("Wrench Head Timer")
        ak.HeadWrenchDisable = tempTimer(24,[[affstrack.score.wrenchhead = 0;ak.scoreup(target)]])
        ak.InitialWrench = tempTimer(3.5,[[OppGainedAff("dizziness")]])
        table.insert(affStr,aff:title())
     elseif aff == "blisters" then
        affstrack.score.blisters = 100
        ak.blisterkiller = tempTimer(20,[[affstrack.score.blisters = 0;ak.scoreup(target)]])
        table.insert(affStr,aff:title())
     elseif aff == "wrenchtorso" then
        affstrack.score.wrenchtorso = 100
        ak.TorsoWrenchDisable = tempTimer(24,[[affstrack.score.wrenchtorso = 0;ak.scoreup(target)]])
        table.insert(affStr,aff:title())      
     elseif aff == "vitiate" then
        affstrack.score.vitiate = 100
        ak.vitiatetimer = tempTimer(150,[[affstrack.score.vitiate = 0;ak.scoreup(target)]])
        table.insert(affStr,aff:title())         
     elseif aff == "armexpend" then
        affstrack.score.armexpend = 100
        ak.TorsoWrenchDisable = tempTimer(15,[[affstrack.score.armexpend = 0;ak.scoreup(target)]])
        table.insert(affStr,aff:title())
     elseif aff == "focusextend" then
        affstrack.score.focusextend = 100
        ak.focusextenddisable = tempTimer(8,[[affstrack.score.focusextend = 0;ak.scoreup(target)]])
        table.insert(affStr,aff:title())         
     elseif aff == "ensorcell" then
        affstrack.score.ensorcell = 100
        table.insert(affStr,aff:title())        
     elseif aff == "hamstring" then
        affstrack.score.hamstring = 100
        if ak.hamstringtimer then killTimer(ak.hamstringtimer) end
        ak.hamstringtimer = tempTimer(9.5,[[affstrack.score.hamstring = 0;ak.scoreup(target)]])
        table.insert(affStr,aff:title())
     elseif aff == "worm" then
          affstrack.score.worm = 100
          ak.wormtimer = tempTimer(20,[[affstrack.score.worm = 0;ak.scoreup(target)]])
          table.insert(affStr,aff:title())               
     elseif aff == "epseth" or aff == "crippledleg" then
        if affstrack.score["leftleg"] &lt; 100 then       
           affstrack.score["leftleg"] = 100
           ak.AddedAffReset("leftleg") 
        elseif affstrack.score["rightleg"] &lt; 100 then       
           affstrack.score["rightleg"] = 100
           ak.AddedAffReset("rightleg") 
        end
        table.insert(affStr,"Epseth")
     elseif aff == "epteth" or aff == "crippledarm" then
        if affstrack.score["leftarm"] &lt; 100 then       
           affstrack.score["leftarm"] = 100
           ak.AddedAffReset("leftarm") 
        elseif affstrack.score["rightarm"] &lt; 100 then       
           affstrack.score["rightarm"] = 100
           ak.AddedAffReset("rightarm") 
        end
        table.insert(affStr,"Epteth")    
    elseif aff == "frozen" then 
        affstrack.score[aff] = affstrack.score[aff] + 100
        table.insert(affStr,aff:title())
        if affstrack.score.frozen &gt; 300 then
           affstrack.score.frozen = 300
        end 
    elseif aff == "deepfreeze" then
        affstrack.score["frozen"] = affstrack.score["frozen"] + 200 
        table.insert(affStr,"Frozen") 
        if affstrack.score.frozen &gt; 300 then
           affstrack.score.frozen = 300
        end                                         
     elseif affstrack.score[aff] then
        if affstrack.score[aff] &lt; 100 then       
           affstrack.score[aff] = 100
           ak.AddedAffReset(aff)
           if aff == "deaf" or aff == "sensitivity" then 
              aff = "prefarar" 
           end
         if aff == "hypochondria" then
           enableTimer("Hypochondria Timer")
         end
         if aff == "hellsight" then
           affstrack.score.slickness = 100
         end
           table.insert(affStr,aff:title())   
        end
     elseif affstrack.venoms[aff] then 
        if affstrack.score[affstrack.venoms[aff]] &lt; 100 then    
           affstrack.score[affstrack.venoms[aff]] = 100
           ak.AddedAffReset(affstrack.venoms[aff])
           if aff == "deaf" or aff == "sensitivity" then 
              aff = "prefarar" 
           end
           table.insert(affStr,affstrack.venoms[aff]:title())       
        end 
     end
  end
  if #affStr &gt; 0 and not source then 
      ak.echogain(table.concat(affStr, " ")) 
      if rtpkrnl then ApK(table.concat(affStr, " rtpkrnl ")) end--AKG Display
  end
  ak.scoreup(target)
end

function OppLostAff(aff)
  local affStr = ""
  aff = aff:lower()
  if string.find(aff," ") then
    for word in string.gmatch(aff, "%a+") do
      if affstrack.score[word] &gt; 0 then
       affstrack.score[word] = 0
       affStr = word:title()
      end
    end
  else
    if affstrack.score[aff] &gt; 0 then
     affstrack.score[aff] = 0
     affStr = aff:title()
    end
  end
  ak.scoreup(target)
  if affStr:len() &gt; 0 then ak.echolost(affStr) end
end

function OppGainedAdditive(affliction,incata,capata,minca)
  local cap = capata or 9000
  local inc = incata or 100
  local min = minca or 0
  if affstrack.score[affliction] then
    affstrack.score[affliction] = affstrack.score[affliction] + incata
    if affstrack.score[affliction] &gt; cap then
      affstrack.score[affliction] = cap 
    end
    if affstrack.score[affliction] &lt; min then
      affstrack.score[affliction] = min 
    end
  end
  ak.echogain(affliction) 
  ApK(affliction)
  ak.scoreup(target)
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Target Check</name>
					<packageName></packageName>
					<script>--Targetted Script
-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function IsTargetted(person)
   if not person then return end
   target = target or "Austere"
   if person == target then 
     return true
   elseif string.starts(person, target) then
      return true
   else
      return false
   end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>PreAlias</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
if not PreAliasGeneral then
   function PreAliasGeneral()
      local sendon = "stand"
      return sendon
   end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Depthswalker Functions</name>
					<packageName></packageName>
					<script>ak.ShadowList = ak.ShadowList or {}
ak.age = function()
	if svo then
		return svo.stats.age
	elseif wsys then
    if not wsys.stats.age then return 0 end
		return wsys.stats.age 
	end
end

ak.haveshadow = function()
	if table.contains(ak.ShadowList,target:lower():title()) then
		return true
	else
		return false
	end
end

ak.removeshadow = function(name)
    if table.contains(ak.ShadowList,name:lower():title()) then
        table.remove(ak.ShadowList,table.index_of(ak.ShadowList,name:lower():title()))
    end
end

ak.addshadow = function(name)
	if not table.contains(ak.ShadowList,name:lower():title()) then
		table.insert(ak.ShadowList,name:lower():title())
	end
	cecho("&lt;cyan&gt;\nShadow Claimed!\n")
end

ak.oscythe = "Agith'maal's ire"

function ak.instill(instill)
  local cv = "looped"
  if currentvenoms[ak.oscythe] then
    cv = currentvenoms[ak.oscythe][1]
  end
  if instill == "Degeneration" then
    if affstrack.score.clumsiness == 50 and affstrack.score.weariness == 50 and cv ~= "vernalius" and cv ~= "xentio" then
      OppGainedAff("clumsiness")
      OppGainedAff("weariness")
		elseif affstrack.score.clumsiness &lt; 100 and cv ~= "xentio" then
			OppGainedAff("clumsiness")
		elseif affstrack.score.weariness &lt; 100 and cv ~= "vernalius" then
			OppGainedAff("weariness")
		else
			OppGainedAff("paralysis")
		end
	elseif instill == "Depression" then
    if affstrack.score.depression &gt;= 67 and affstrack.score.nausea &gt;= 67 and affstrack.score.hypochondria &lt; 100 and affstrack.score.hypochondria &gt; 0 then
      OppGainedAff("hypochondria")
		elseif affstrack.score.depression &lt; 85 then
			OppGainedAff("depression")
		elseif affstrack.score.nausea &lt; 85 and cv ~= "euphorbia" then
			OppGainedAff("nausea")
		else
			OppGainedAff("hypochondria")
		end
	elseif instill == "Retribution" then
    if affstrack.score.justice + affstrack.score.retribution &gt;= 100 then
      OppGainedAff("justice")
      OppGainedAff("retribution")
		elseif affstrack.score.justice &lt; 100 then
			OppGainedAff("justice")
		else
			OppGainedAff("retribution")
		end
	elseif instill == "Madness" then
		if affstrack.score.shadowmadness &lt; 80 then
			OppGainedAff("shadowmadness")
		elseif affstrack.score.vertigo &lt; 100 then
			OppGainedAff("vertigo")
		else
			OppGainedAff("hallucinations")
		end
	elseif instill == "Leach" then
    if affstrack.score.parasite == 50 and affstrack.score.healthleech == 50 then
      OppGainedAff("parasite")
      OppGainedAff("healthleech")
		elseif affstrack.score.parasite &lt; 100 then
			OppGainedAff("parasite")
		elseif affstrack.score.healthleech &lt; 100 then
			OppGainedAff("healthleech")
		else
			OppGainedAff("manaleech")
		end
	end
end

ak.fullinstill = function(instill)
	if instill == "Degeneration" then
		OppGainedAff("weariness")
		OppGainedAff("clumsiness")
		OppGainedAff("paralysis")
	elseif instill == "Depression" then
		OppGainedAff("depression")
		OppGainedAff("nausea")
		OppGainedAff("hypochondria")
		OppGainedAff("anorexia")
		OppGainedAff("masochism")
	elseif instill == "Retribution" then
		OppGainedAff("justice")
		OppGainedAff("retribution")
	elseif instill == "Madness" then
		OppGainedAff("shadowmadness")
		OppGainedAff("vertigo")
		OppGainedAff("hallucinations")
	elseif instill == "Leach" then
		OppGainedAff("parasite")
		OppGainedAff("healthleech")
		OppGainedAff("manaleech")
		ak.addshadow()
	end
  if ak.loopinstilled == false then
    ak.loopinstilled = "skip" 
  end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Fracture Relapsing</name>
					<packageName></packageName>
					<script>function ak.skullHit()
  if isActive("AK_SkullTimer","timer") == 0 and ak.twoh.skull &gt; 0 then
		ak.skullcount = 0
		OppGainedAff("nausea")
		enableTimer("AK_SkullTimer")
	elseif ak.twoh.skull == 0 then
		ak.skullcount = 0
		disableTimer("AK_SkullTimer")
	end
end

function ak.tendonHit()
	if isActive("AK_TendonTimer","timer") == 0 and ak.twoh.tendons &gt; 0 then
		ak.tendonscount = 0
		OppGainedAff("clumsiness")
		enableTimer("AK_TendonTimer")
	elseif ak.twoh.tendons == 0 then
		ak.tendonscount = 0
		disableTimer("AK_TendonTimer")
	end
end

function ak.ribHit()
	if isActive("AK_RibsTimer","timer") == 0 and ak.twoh.ribs &gt; 0 then
		ak.ribscount = 0
		OppGainedAff("prefarar")
		enableTimer("AK_RibsTimer")
	elseif ak.twoh.ribs == 0 then
		ak.ribscount = 0
		disableTimer("AK_RibsTimer")
	end
end

function ak.wristHit()
	if ak.twoh.wrist &lt; 1 then
		if ak.wristTimer then killTimer(ak.wristTimer) end
	elseif ak.twoh.wrist == 1 then
		if ak.wristTimer then killTimer(ak.wristTimer) end
		ak.wristTimer = tempTimer(5, [[ak.wristTick()]])
	elseif ak.twoh.wrist == 2 then
		if ak.wristTimer then killTimer(ak.wristTimer) end
		ak.wristTimer = tempTimer(4, [[ak.wristTick()]])
	elseif ak.twoh.wrist == 3 then
		if ak.wristTimer then killTimer(ak.wristTimer) end
		ak.wristTimer = tempTimer(3, [[ak.wristTick()]])
	elseif ak.twoh.wrist == 4 then
		if ak.wristTimer then killTimer(ak.wristTimer) end
		ak.wristTimer = tempTimer(2, [[ak.wristTick()]])
	elseif ak.twoh.wrist &gt;= 5 then
		if ak.wristTimer then killTimer(ak.wristTimer) end
		ak.wristTimer = tempTimer(1, [[ak.wristTick()]])
	end 
end

function ak.wristTick()
	ak.wristHit()
end

</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Gmcp Room</name>
					<packageName></packageName>
					<script>function ak.roomupdate()
	 ak.MountLook()
	 ak.RoomDefs()
   if gmcp.Room.Info.num ~= ak.lastroom then
	 		if wsys and wsys.retard then
				wsys.retardationOff()
			end
      ak.ae = ak.ae or 0
      ak.blocked = nil
      if ak.disturbed or ak.ae &gt; 0 or ak.feedback then
         ak.disturbed = false
         ak.ae = 0
         ak.feedback = false
         ak.scoreup(target)
      end
      if ak.infernohere then 
         ak.infernohere = false
         ak.scoreup(target)
      end
   end
   ak.lastroom = gmcp.Room.Info.num
end

registerAnonymousEventHandler("gmcp.Room.Info", "ak.roomupdate")
</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Staff Affliction Tracking</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ak.staffaff(staffhit)
  if staffhit == "airstaff" then
	   OppGainedAff("prone")
  elseif staffhit == "firestaff" then
	   ak.flameon("notadditive")
  --elseif staffhit == "earthstaff" then
	   --OppGainedAff("prone")
  elseif staffhit == "waterstaff" then
	   OppGainedAff("frozen")
  end
end

--DO NOT MESS WITH THIS--</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Attack Sets</name>
					<packageName></packageName>
					<script>--setattack
-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function ak.serveraliases()
  if ak.debug then
    cecho("\nScoring Up")
  end
  ak.stack = ak.stack or "none"
  if ak.stack == "NoOne" then
    --Deliverance!
    ak.aliasreset()
  elseif gmcp.Char.Status.race == "Undead" then
    if ak.undead.setattacks then
      ak.undead.setattacks()
    end
  elseif gmcp.Char.Status.race:match("Dragon") and not inlyre() then
    -- Dragon --
    if ak.dragon.setattacks then
      ak.dragon.setattacks()
    end
  elseif gmcp.Char.Status.class == "Pariah" and not inlyre() then
    if ak.pariah.setattacks then
      ak.pariah.setattacks()
    end
  elseif gmcp.Char.Status.class == "Occultist" and not inlyre() then
    if ak.occie.setattacks then
      ak.occie.setattacks()
    end
  elseif gmcp.Char.Status.class == "Druid" and not inlyre() then
    if ak.druid.setattacks then
      ak.druid.setattacks()
    end
  elseif gmcp.Char.Status.class == "Monk" and not inlyre() then
    if ak.monk.setattacks then
      ak.monk.setattacks()
    end
  elseif gmcp.Char.Status.class == "Magi" and not inlyre() then
    if ak.magi.setattacks then
      ak.magi.setattacks()
    end
  elseif gmcp.Char.Status.class == "Serpent" and not inlyre() then
    if ak.serpent.setattacks then
      ak.serpent.setattacks()
    end
  elseif gmcp.Char.Status.class == "Sentinel" and not inlyre() then
    if ak.sentinel.setattacks then
      ak.sentinel.setattacks()
    end
  elseif gmcp.Char.Status.class == "Shaman" and not inlyre() and not ak.tza then
    if ak.shaman.setattacks then
      ak.shaman.setattacks()
    end
  elseif gmcp.Char.Status.class == "Priest" and not inlyre() then
    if ak.priest.setattacks then
      ak.priest.setattacks()
    end
  elseif gmcp.Char.Status.class == "Apostate" and not inlyre() then
    -- APOSTATE --
    if ak.apostate.setattacks then
      ak.apostate.setattacks()
    end
  elseif (gmcp.Char.Status.class == "Infernal" or gmcp.Char.Status.class == "Paladin" or gmcp.Char.Status.class == "Runewarden" ) and not inlyre() then
    if ak.knight.setattacks then
      ak.knight.setattacks()
    end
  elseif gmcp.Char.Status.class == "Blademaster" and not inlyre() and not ak.deathstrike then
    if ak.bm.setattacks then
      ak.bm.setattacks()
    end
  elseif gmcp.Char.Status.class == "Alchemist" and not inlyre() then
    if ak.alchemist.setattacks then
      ak.alchemist.setattacks()
    end
  elseif gmcp.Char.Status.class == "Jester" and not inlyre() then
    if ak.jester.setattacks() then
      ak.jester.setattacks()
    end
  elseif gmcp.Char.Status.class == "Depthswalker" and not inlyre() then
    if ak.depthswalker.setattacks then
      ak.depthswalker.setattacks()
    end
  elseif gmcp.Char.Status.class == "Sylvan" and not inlyre() then
    if ak.sylvan.setattacks then
      ak.sylvan.setattacks()
    end
  elseif gmcp.Char.Status.class == "Psion" and not inlyre() then
    if ak.psion.setattacks then
      ak.psion.setattacks()
    end
  elseif gmcp.Char.Status.class == "Bard" and not inlyre() then
    if ak.bard.setattacks then
      ak.bard.setattacks()
    end
  elseif (gmcp.Char.Status.class == "fire Elemental Lady" or gmcp.Char.Status.class == "fire Elemental Lord") and not inlyre() then
    if ak.ignition.setattacks then
      ak.ignition.setattacks()
    end
  elseif (gmcp.Char.Status.class == "air Elemental Lady" or gmcp.Char.Status.class == "air Elemental Lord") and not inlyre() then
    if ak.stack == "Duress" and ak.duress and ak.duress.compression then
      ak.duress.compression()
    end
  elseif (gmcp.Char.Status.class == "water Elemental Lady" or gmcp.Char.Status.class == "water Elemental Lord") and not inlyre() then
    if ak.pervasion.setattacks then
      ak.pervasion.setattacks()
    end
  end
  if not inlyre() then
    ak.mycustomoffense()
  end
  if ak.reboundPop and ak.stack ~= "NoOne" and not inlyre() and not ak.tza and not ak.deathstrike then
    ak.reboundPop()
  end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Rounding</name>
					<packageName></packageName>
					<script>function roundUp(number, places)
	return math.ceil(number * math.pow(10,places)) / math.pow(10,places)
end

function roundDown(number, places)
	return math.floor(number * math.pow(10,places)) / math.pow(10,places)
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Alias Setter</name>
					<packageName></packageName>
					<script>function ak.setalias(aliasname, changes)
  ak.aliases.lastsend[aliasname] = ak.aliases.lastsend[aliasname] or "unknown"
  ak.aliases[aliasname] = ak.aliases[aliasname] or "random"
  if ak.aliases[aliasname] == changes then
    return
  end
  if ak.aliases.lastsend[aliasname] == changes then
    return
  end
  --local check = string.split(changes, "parry")
  ak.aliases.lastsend[aliasname] = changes
  send("setalias " .. aliasname .. " " .. changes, false)
end

local parrychecks = {["right leg"] = true}

function ak.parrycut(var)
  if not string.find(var, "parry") then
    return var
  end
  for k, v in pairs(parrychecks) do
  end
end

function ak.aliasreset()
  send("setalias oattackrl stand")
  send("setalias oattackll stand")
  send("setalias oattackra stand")
  send("setalias oattackla stand")
  send("setalias oattackh stand")
  send("setalias oattackt stand")
  send("setalias oattack stand")
  send("setalias oattacktwo stand")
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Queue Tracking</name>
					<packageName></packageName>
					<script>function ak.queuereset()
  if wsys then
    if wsys.bals.b and wsys.bals.e then
      ak.queue.eqbal = {}
      ak.queue.sent = {}
    end
  end
end

registerAnonymousEventHandler("got balance", "ak.queuereset")
registerAnonymousEventHandler("got equilibrium", "ak.queuereset")</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Default Stack Set</name>
					<packageName></packageName>
					<script>
if ak.defaultstack then return end --Delete Me From Personal Settings!

function ak.defaultstack()
   if gmcp.Char.Status.race == "Undead" then
      ak.stack = "Undead"
   elseif gmcp.Char.Status.race:match("Dragon") then 
      ak.stack = "dragon" 
      affstrack.crushedherb = nil
   elseif gmcp.Char.Status.class == "Monk" then
      if ak.monk.toggleswap then
         ak.monk.toggleswap() 
      else
         ak.stack = "mindfuck"
      end
   elseif gmcp.Char.Status.class == "Magi" then
      ak.stack = "Dgmagi"
   elseif gmcp.Char.Status.class == "Serpent" then
      ak.stack = "Kelp"
   elseif gmcp.Char.Status.class == "Occultist" then
      ak.stack = "Unravel"
   elseif gmcp.Char.Status.class == "Jester" then
      ak.stack = "NoAeon"
   elseif gmcp.Char.Status.class == "Shaman" then 
      ak.stack = "Tzantza" 
   elseif gmcp.Char.Status.class == "Sylvan" then
      ak.stack = "Damage"
   elseif gmcp.Char.Status.class == "Bard" then
      ak.stack = "Kelp"
   elseif gmcp.Char.Status.class == "Blademaster" then
      ak.stack = "BM Prep"
   elseif gmcp.Char.Status.class == "Priest" then
      ak.stack = "priesto"
   elseif gmcp.Char.Status.class == "Alchemist" then
      ak.stack = "alchbase"
   elseif gmcp.Char.Status.class == "Apostate" then
      ak.stack = "Kelp"
   elseif gmcp.Char.Status.class == "Sentinel" then
      ak.stack = "Petrify"
   elseif gmcp.Char.Status.class == "Druid" then
      ak.stack = "Prep"
   elseif gmcp.Char.Status.class == "Depthswalker" then
      ak.stack = "Damage"
   elseif gmcp.Char.Status.class == "Psion" then
      ak.stack = "Spirit"
   elseif gmcp.Char.Status.class == "Pariah" then
      ak.stack = "Pariah"
   elseif gmcp.Char.Status.class == "air Elemental Lord" or gmcp.Char.Status.class == "air Elemental Lady" then
      ak.stack = "Duress"
   elseif gmcp.Char.Status.class == "water Elemental Lord" or gmcp.Char.Status.class == "water Elemental Lady" then
      ak.stack = "Perversion"
   elseif gmcp.Char.Status.class == "fire ELemental Lord" or gmcp.Char.Status.class == "fire Elemental Lady" then
      ak.stack = "Ignition"
   elseif gmcp.Char.Status.class == "Infernal" or gmcp.Char.Status.class == "Paladin" or gmcp.Char.Status.class == "Runewarden" then   
      local locate = {["Runewarden"] = 3,["Infernal"] = 4,["Paladin"] = 5} 
      local knightSpec = gmcp.Char.Vitals.charstats[locate[gmcp.Char.Status.class]] or "Spec: Dual Cutting"
      if knightSpec == "Spec: Dual Cutting" then
         if ak.dwcoffensetoggle then
            ak.dwcoffensetoggle()
         end
      elseif knightSpec == "Spec: Sword and Shield" then
         ak.stack = "Aboard"  
      elseif knightSpec == "Spec: Two Handed" then
         ak.stack = "2hspeed" 
      elseif knightSpec == "Spec: Dual Blunt" then
         ak.stack = "dwb"
      end
   end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Anti Illusion</name>
					<packageName></packageName>
					<script>
if ak.ai then return end

function ak.ai()
	return false
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Flame on!</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ak.flameon(typer)
   if typer == "additive" and affstrack.score.dehydrate == 100 and affstrack.score.aflame + 100 &lt; 500 then
      affstrack.score.aflame = affstrack.score.aflame + 100      
   elseif typer == "additive" and affstrack.score.dehydrate == 100 then
      affstrack.score.aflame = 500
   elseif affstrack.score.aflame &lt; 100 then
      affstrack.score.aflame = 100
   end
   ak.scoreup(target)
end
</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>SnB Smash High</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ak.SnBSmashHighAff(currentstaby)
	local shAff = "dizziness"
	if affstrack.score.dizziness &lt; 100 and not table.contains(currentstaby,"dizziness") then
		 shAff = "dizziness"
	elseif affstrack.score.recklessness &lt; 100 and not table.contains(currentstaby,"recklessness") then
		 shAff = "recklessness"
	elseif affstrack.score.stupidity &lt; 100 and not table.contains(currentstaby,"stupidity") then
		 shAff = "stupidity"
	elseif affstrack.score.confusion &lt; 100 and not table.contains(currentstaby,"confusion") then
		shAff = "confusion"
	elseif affstrack.score.epilepsy &lt; 100 and not table.contains(currentstaby,"epilepsy") then
		 shAff = "epilepsy"
	end
	return shAff
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>New Person</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ak.playercheck(who)
	ak[who] = ak[who] or ak.newplayer()
end

function ak.newplayer()
	return { 
		defs = {
		},
		bals = {
			["salve"] = true,
		},
		affs = {
			["addiction"]      = 0,
			["aeon"]           = 0,
			["agoraphobia"]    = 0,
			["anorexia"]       = 0,
			["aflame"]         = 0,
			["amnesia"]        = 0,
			["armexpend"]      = 0,
			["airfist"]        = 0,
			["asthma"]         = 0,
			["bitten"]         = 0,
			["blind"]          = 0,
			["blackout"]       = 0,
			["blisters"]       = 0,
			["bound"]          = 0,
			["brand"]          = 0,
			["claustrophobia"] = 0,
			["clumsiness"]     = 0,
			["conflagrate"]    = 0,
			["confusion"]      = 0,
			["corruption"]     = 0,
			["crippledarm"]    = 0,
			["crippledleg"]    = 0,
			["crushedthroat"]  = 0,
			["darkshade"]      = 0,
			["deadening"]      = 0,
			["deaf"]           = 0,
			["dementia"]       = 0,
			["depression"]     = 0,
			["dehydrate"]      = 0,
			["disloyalty"]     = 0,
			["disrupt"]        = 0,
			["dizziness"]      = 0,
			["enlighten"]      = 0,
			["epilepsy"]       = 0,
			["frozen"]         = 0,
			["generosity"]     = 0,
			["haemophilia"]    = 0,
			["hallucinations"] = 0,
			["hamstring"]      = 0,
			["hierophant"]     = 0,
			["healthleech"]    = 0,
			["hellsight"]      = 0,
			["hypersomnia"]    = 0,
			["hypochondria"]   = 0,
			["hypothermia"]    = 0,
			["impaleslash"]    = 0,
			["impatience"]     = 0,
			["inquisition"]    = 0,
			["insomnia"]       = 0,
			["justice"]        = 0,
			["kola"]           = 0,
			["latched"]        = 0,
			["lethargy"]       = 0,
			["lovers"]         = 0,
			["loneliness"]     = 0,
			["masochism"]      = 0,
			["manaleech"]      = 0,
			["mindclamp"]      = 0,
			["nausea"]         = 0,
			["pacifism"]       = 0,
			["paralysis"]      = 0,
			["parasite"]       = 0,
			["paranoia"]       = 0,
			["prone"]          = 0,
			["recklessness"]   = 0,
			["retribution"]    = 0,
			["rixil"]          = 0,
			["scalded"]        = 0,
			["scytherus"]      = 0,
			["selarnia"]       = 0,
			["sensitivity"]    = 0,
			["shadowmadness"]  = 0,
			["shyness"]        = 0,
			["slime"]          = 0,
			["slickness"]      = 0,
			["tempslickness"]  = 0,
			["sleep"]          = 0,
			["stupidity"]      = 0,
			["surge"]          = 0,
			["transfixed"]     = 0,
			["timeflux"]       = 0,
			["timeloop"]       = 0,
			["weariness"]      = 0,
			["wrenchhead"]     = 0,
			["wrenchtorso"]     = 0,
			["whisperingmadness"] = 0,
			["vertigo"]        = 0,
			["vitiate"]        = 0,
			["voidfist"]       = 0,
			["voyria"]         = 0,
			["airdisrupt"]     = 0,
			["earthdisrupt"]   = 0,
			["firedisrupt"]    = 0,
			["spiritdisrupt"]  = 0,
			["waterdisrupt"]   = 0,
			["rightleg"]       = 0,
			["leftleg"]       = 0,
			["rightarm"]       = 0,
			["leftarm"]       = 0,
			["head"]       = 0,
			["torso"]       = 0,
			["tension"]     = 0,
			["pressure"]    = 0,
			["unweavingbody"] = 0,
			["unweavingmind"] = 0,
			["unweavingspirit"] = 0,
		}
	}
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Shikudo Alias Split</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ak.shikudo.AliasSplit(blah)
	ak.shikudo.AttackAlias = {}
	local checktable = blah
	local attacks = {"ruku","kuro", "hiru", "nervestrike","livestrike", "dart", "hiraku", "thrust", "needle"}
	for i = 1, #blah do
		if table.contains(attacks,blah[i]) then
			if blah[i+1] and blah[i+1] == "light" then
				table.insert(ak.shikudo.AttackAlias,"light")
			else
				table.insert(ak.shikudo.AttackAlias,"regular")
			end
		end
	end
end

function ak.shikudo.LimbBlock()
	ak.shikudo.AttackAlias = ak.shikudo.AttackAlias or {}
	if #ak.shikudo.AttackAlias &gt; 0 then
		if ak.shikudo.AttackAlias[1] == "light" then
			return true	
		end
		table.remove(ak.shikudo.AttackAlias,1)
	end
	return false
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Mount Look</name>
					<packageName></packageName>
					<script>
function ak.MountLook()
	enableTrigger("Look Prompt")
	if WhoHereTable and not table.contains(WhoHereTable,target) then return end
	ak.lookmountedupdate = true
	ak.mountedcheck = target
	if ak.lookmounted then killTrigger(ak.lookmounted) end
	if ak.lookmountedtwo then killTrigger(ak.lookmountedtwo) end
  if ak.lookmountedthree then killTrigger(ak.lookmountedthree) end
  if ak.lookmountedfour then killTrigger(ak.lookmountedfour) end
	ak.lookmounted = tempRegexTrigger(ak.mountedcheck.."(?: |.*)is here.",[[
		ak.MountLookUnMounted()
	]])
	ak.lookmountedtwo = tempRegexTrigger(ak.mountedcheck.."(?: |.*)flows ever onwards.",[[
		ak.MountLookUnMounted()
	]])
	ak.lookmountedthree = tempRegexTrigger(ak.mountedcheck.."(?: |.*)\'s imposing form looms.",[[
		ak.MountLookUnMounted()
	]])
  	ak.lookmountedfour = tempRegexTrigger(ak.mountedcheck.."(?: |.*)towers here, clad in skin of living stone.",[[
		ak.MountLookUnMounted()
	]])
end

function ak.MountLookPrompt()
	disableTrigger("Look Prompt")
	ak.parseRoomInventoryOffense()
	if WhoHereTable and not table.contains(WhoHereTable,target) then return end
	if ak.mounted == ak.lookmountedupdate then return end
	ak.mounted = ak.lookmountedupdate
	if ak.lookmounted then killTrigger(ak.lookmounted) end
	if ak.lookmountedtwo then killTrigger(ak.lookmountedtwo) end
	if ak.lookmountedthree then killTrigger(ak.lookmountedthree) end
  if ak.lookmountedfour then killTrigger(ak.lookmountedfour) end
	ak.lookmounted = nil
	ak.lookmountedtwo = nil
	ak.lookmountedthree = nil
	ak.scoreup(target)
end

function ak.MountLookUnMounted()
	if ak.lookmounted then killTrigger(ak.lookmounted) end
	if ak.lookmountedtwo then killTrigger(ak.lookmountedtwo) end
	if ak.lookmountedthree then killTrigger(ak.lookmountedthree) end
  if ak.lookmountedfour then killTrigger(ak.lookmountedfour) end
	ak.lookmountedupdate = false
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Room Defs</name>
					<packageName></packageName>
					<script>function ak.parseRoomInventoryOffense()
	ak.GHLookPrompt()
  ak.PentagramLookPrompt()
	ak.submergedLookPrompt()
	ak.FloodLookPrompt()
  ak.distortionLookPrompt()
end
-------------------------------------------------
function ak.RoomDefs()
	ak.lookghupdate = false
  ak.lookpentagramupdate = false
	ak.lookFloodupdate = false
	ak.looksubmergedupdate = false
  ak.lookdistortionupdate = false
	if ak.looksubmerged then killTrigger(ak.looksubmerged) end
	if ak.lookGH then killTrigger(ak.lookGH) end
	if ak.lookFlood then killTrigger(ak.lookFlood) end
  if ak.lookdistortion then killTrigger(ak.lookdistortion) end
  if ak.lookpentagram then killTrigger(ak.lookpentagram) end
	ak.lookGH = tempTrigger("Hands of rotting flesh and white bone push up from the ground.",[[
		ak.GhLookHanded()
	]])
	ak.lookFlood = tempTrigger("This area is unnaturally flooded with water.",[[
		ak.FloodLookHanded()
	]])	
	ak.looksubmerged = tempTrigger("This location is nearly completely submerged.",[[
		ak.submergedLookHanded()
	]])	
  ak.lookdistortion = tempTrigger("The surroundings are distorted, as if viewed through water.",[[
    ak.distortionLookHanded()
  ]])
end
function ak.GhLookHanded()
	killTrigger(ak.lookGH)
	ak.lookghupdate = true
end
function ak.PentagramLookHanded()
  killTrigger(ak.lookPentagram)
  ak.lookpentagramupdate = true
end
function ak.FloodLookHanded()
	killTrigger(ak.lookFlood)
	ak.lookFloodupdate = true
end
function ak.submergedLookHanded()
	killTrigger(ak.looksubmerged)
	ak.looksubmergedupdate = true
end
function ak.distortionLookHanded()
  killTrigger(ak.lookdistortion)
  ak.lookdistortionupdate = true
end

function ak.GHLookPrompt()
	if ak.gravehands == ak.lookghupdate then return end
	ak.gravehands = ak.lookghupdate
	if ak.lookGH then killTrigger(ak.lookGH) end
	ak.lookGH = nil
	ak.scoreup(target)
end

function ak.PentagramLookPrompt()
  if ak.pentagram == ak.lookpentagramupdate then return end
  ak.pentagram = ak.lookpentagramupdate
  if ak.lookPentagram then killTrigger(ak.lookPentagram) end
  ak.lookPentagram = nil
  ak.scoreup(target)
end

function ak.FloodLookPrompt()
	if ak.flood == ak.lookFloodupdate then return end
	ak.flood = ak.lookFloodupdate
	if ak.lookFlood then killTrigger(ak.lookFlood) end
	ak.lookFlood = nil
	ak.scoreup(target)
end

function ak.submergedLookPrompt()
	if ak.submerged == ak.looksubmergedupdate then return end
	ak.submerged = ak.looksubmergedupdate
	if ak.looksubmerged then killTrigger(ak.looksubmerged) end
	ak.looksubmerged = nil
	ak.scoreup(target)
end

function ak.distortionLookPrompt()
	if ak.distortion == ak.lookdistortionupdate then return end
	ak.distortion = ak.lookdistortionupdate
	if ak.lookdistortion then killTrigger(ak.lookdistortion) end
	ak.lookdistortion = nil
	ak.scoreup(target)
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Psion Ticks</name>
					<packageName></packageName>
					<script>ak.psion = ak.psion or {}
ak.psion.secondaryTimer = ak.psion.secondaryTimer or {}

function ak.psion.KillSecondaryTick(affliction) 
  if affliction and ak.psion.secondaryTimer[affliction] then
    killTimer(ak.psion.secondaryTimer[affliction])
    ak.psion.secondaryTimer[affliction] = nil
  else
    if ak.psion.secondaryTimer["unweavingmind"] then
      killTimer(ak.psion.secondaryTimer["unweavingmind"])
      ak.psion.secondaryTimer["unweavingmind"] = nil
    end
    if ak.psion.secondaryTimer["unweavingbody"] then
      killTimer(ak.psion.secondaryTimer["unweavingbody"])
      ak.psion.secondaryTimer["unweavingbody"] = nil
    end
    if ak.psion.secondaryTimer["unweavingspirit"] then
      killTimer(ak.psion.secondaryTimer["unweavingspirit"])
      ak.psion.secondaryTimer["unweavingspirit"] = nil
    end
  end
end


function ak.psion.secondaryTick(affliction)
  if ak.psion.secondaryTimer[affliction] then
    return
  else
    if affliction == "unweavingmind" then
      ak.psion.secondaryTimer["unweavingmind"] = tempTimer(4,[[
        if affstrack.score["unweavingmind"] &gt; 0 then
         OppGainedAdditive("unweavingmind",100,500)
        end
        ak.psion.secondaryTimer["unweavingmind"] = nil
      ]])
    elseif affliction == "unweavingspirit" then
      ak.psion.secondaryTimer["unweavingspirit"] = tempTimer(4,[[
        if affstrack.score["unweavingspirit"] &gt; 0 then
         OppGainedAdditive("unweavingspirit",100,500)
        end
        ak.psion.secondaryTimer["unweavingspirit"] = nil
      ]])
    elseif affliction == "unweavingbody" then
      ak.psion.secondaryTimer["unweavingbody"] = tempTimer(4,[[
        if affstrack.score["unweavingbody"] &gt; 0 then
         OppGainedAdditive("unweavingbody",100,500)
        end
        ak.psion.secondaryTimer["unweavingbody"] = nil
      ]])
    end
  end 
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Pariah Parse</name>
					<packageName></packageName>
					<script>ak.pariah.hearttable = ak.pariah.hearttable or {}

function ak.pariah.parseEpitaph(epitaph)
  local ven = false
  local venco = {
    ["nest"] = "weariness",
    ["scales"] = "clumsiness",
    ["skein"] = "impatience",
    ["scarab"] = "addiction",
    ["sun"] = "epilepsy",
    ["bear"] = "haemophilia",
    ["jackal"] = "asthma",
    ["scorpion"] = "scytherus",
  }
  if epitaph == "serpent" then
    if ak.pariah.previousEpi and ak.pariah.previousEpi == "scorpion" then
      OppGainedAff("voyria paralysis")
    else
      OppGainedAff("paralysis")
    end
  elseif venco[epitaph] then
    OppGainedAff(venco[epitaph])
  end
  ak.pariah.previousEpi = epitaph
end

function ak.pariah.heartbeatadd(aff)
  OppGainedAff(aff)
end

function ak.pariah.heartbeatit(aff)
  if not ak.pariah.heartbeats then return end
  ak.pariah.hearttable[aff] = tempTimer(ak.pariah.heartbeats-1,[[
   -- OppGainedAff("]]..aff..[[")
  ]])
end</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Stacks</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Dragon Stack Prep</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>DragonStack(Main)</name>
						<packageName></packageName>
						<script>--dragon default
ak = ak or {}
ak.dragon = ak.dragon or {}
ak.dragon.default = ak.dragon.default or {}
function ak.dragon.default.main()
	ak.dragon.default.venoms()
	ak.dragon.default.dragoncurser()
	ak.dragon.default.setalias() 
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>DragonStack(VenomPull)</name>
						<packageName></packageName>
						<script>function ak.dragon.default.venoms()
  vcombo = {}
  if math.random(100)&lt;50 then
    if affstrack.score.paralysis&lt;100 then
        table.insert(vcombo,"curare")
    elseif affstrack.score.crippledarm&lt;100 then
        table.insert(vcombo,"epteth")
    elseif affstrack.score.crippledleg&lt;100 then
        table.insert(vcombo,"epseth")
    elseif affstrack.score.stupidity&lt;100 then
        table.insert(vcombo,"aconite")
    elseif affstrack.score.sensitivity&lt;100 then
        table.insert(vcombo,"prefarar")
    end
  else
    if affstrack.score.stupidity&lt;100 then
        table.insert(vcombo,"aconite")
    elseif affstrack.score.dizziness&lt;100 then
        table.insert(vcombo,"larkspur")
    elseif affstrack.score.clumsiness&lt;100 then
        table.insert(vcombo,"xentio")
    elseif affstrack.score.sensitivity&lt;100 then
        table.insert(vcombo,"prefarar")
    elseif affstrack.score.paralysis&lt;100 then
        table.insert(vcombo,"curare")
    end
  end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>DragonStack(CursePull)</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ak.dragon.default.dragoncurser() 
      if math.random(100)&lt;50 then
         if affstrack.score.paralysis&lt;100 and vcombo[1] ~= "curare" then
            dragoncurse = "paralysis"
         elseif affstrack.score.asthma&lt;100 and vcombo[1] ~= "kalmia" then
            dragoncurse = "asthma"
         elseif affstrack.score.sensitivity&lt;100 then
            dragoncurse = "sensitivity"
         elseif affstrack.score.impatience&lt;100 then
            dragoncurse = "impatience"
         end
      else
         if affstrack.score.asthma&lt;100 and vcombo[1] ~= "kalmia"  then
            dragoncurse = "asthma"
         elseif affstrack.score.impatience&lt;100 then
            dragoncurse = "impatience"
         elseif affstrack.score.sensitivity&lt;100 then
            dragoncurse = "stupidity"
         elseif affstrack.score.paralysis&lt;100 and vcombo[1] ~= "curare"  then
            dragoncurse = "paralysis"
         end
    
      end
   if affstrack.score.sensitivity&lt;100 and vcombo[1] == "prefarar" and affstrack.score.blind ~= 100 then dragoncurse = "sensitivity" end
end
</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>DragonStack(SetAlias)</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ak.dragon.default.setalias() 
	ak.setalias("oattackrl", PreAliasGeneral().."/wield shield/dragoncurse "..target.." "..dragoncurse.." 1/rend "..target.." right leg "..vcombo[1].."/breathgust "..target)
	ak.setalias("oattackll", PreAliasGeneral().."/wield shield/dragoncurse "..target.." "..dragoncurse.." 1/rend "..target.." left leg "..vcombo[1].."/breathgust "..target)
	ak.setalias("oattackra", PreAliasGeneral().."/wield shield/dragoncurse "..target.." "..dragoncurse.." 1/rend "..target.." right arm "..vcombo[1].."/breathgust "..target)
	ak.setalias("oattackla", PreAliasGeneral().."/wield shield/dragoncurse "..target.." "..dragoncurse.." 1/rend "..target.." left arm "..vcombo[1].."/breathgust "..target)
	ak.setalias("oattackt", PreAliasGeneral().."/wield shield/dragoncurse "..target.." "..dragoncurse.." 1/rend "..target.." torso "..vcombo[1].."/breathgust "..target)
	ak.setalias("oattackh", PreAliasGeneral().."/wield shield dirk/dragoncurse "..target.." "..dragoncurse.." 1/rend "..target.." head "..vcombo[1].."/breathgust "..target)
end</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
				<Script isActive="yes" isFolder="no">
					<name>ClassLock</name>
					<packageName></packageName>
					<script>function ak.dragonfied(affline)
	if not ak.dragonTarget then
		ak.dragonTarget = true
		ak.classlockadd()
		parsedclasscures = false
		ak.scoreup(target)
		cecho("\n&lt;cyan&gt;Target is &lt;yellow&gt;DTF")
	end
end

function ak.elementalfied(what)
	if not ak.elementalTarget then
		ak.elementalTarget = what
		ak.dragonTarget = false
		ak.classlockadd()
		parsedclasscures = false
		ak.scoreup(target)
		cecho("\n&lt;cyan&gt;Target is &lt;yellow&gt;DTF("..what..")")
	end
end

function ak.classlockadd()
   if ndba and wsys then
      ak.classlockwsys()
   elseif svo and ndb then
      ak.classlocksvo()
	 else 
	    classlock = {}
      table.insert( classlock, "voyria" )
      table.insert( classlock, "weariness" )
      table.insert( classlock, "reckless" )
   end
end

function ak.classlockwsys()
 classlock = {}
 if ak.elementalTarget then
 	if ak.elementalTarget == "Earth" then
		table.insert( classlock, "weariness" )	
	elseif ak.elementalTarget == "Air" then
		table.insert( classlock, "voyria" )	
	elseif ak.elementalTarget == "Water" then
		table.insert( classlock, "weariness" )		
	elseif ak.elementalTarget == "Fire" then
		table.insert( classlock, "weariness" )
	end 
 elseif ak.dragonTarget then
   table.insert( classlock, "weariness" )
   table.insert( classlock, "recklessness" )
 elseif ndba.isperson(target) and ndba.getclass(target) ~= "unknown" then
   if ndba.getclass(target) == "Alchemist" then    --
      table.insert( classlock, "stupidity" )
   elseif ndba.getclass(target) == "Apostate" then --
      table.insert( classlock, "voyria")
   elseif ndba.getclass(target) == "Bard" then
      table.insert( classlock, "voyria" )
	 elseif ndba.getclass(target) == "Blademaster" then
      table.insert( classlock, "paralysis" )
      table.insert( classlock, "weariness" )
		  table.insert( classlock, "prone" )
   elseif ndba.getclass(target) == "Druid" then    --
      table.insert( classlock, "weariness" )
		  table.insert( classlock, "prone" )
   elseif ndba.getclass(target) == "Infernal" then
      table.insert( classlock, "weariness" )
   elseif ndba.getclass(target) == "Jester" then   --
      table.insert( classlock, "voyria" )
   elseif ndba.getclass(target) == "Pariah" then   --
      table.insert( classlock, "voyria" )
   elseif ndba.getclass(target) == "Magi" then
      table.insert( classlock, "haemophilia" )
   elseif ndba.getclass(target) == "Monk" then
      table.insert( classlock, "weariness" )
   elseif ndba.getclass(target) == "Occultist" then   --
      table.insert( classlock, "paralysis" )
      table.insert( classlock, "voyria" )
   elseif ndba.getclass(target) == "Paladin" then  
      table.insert( classlock, "weariness" )
      table.insert( classlock, "voyria" )
   elseif ndba.getclass(target) == "Priest" then   --
      table.insert( classlock, "weariness" )
      table.insert( classlock, "voyria" )
   elseif ndba.getclass(target) == "Runewarden" then
      table.insert( classlock, "weariness" )
      table.insert( classlock, "voyria")
   elseif ndba.getclass(target) == "Sentinel" then   
      table.insert( classlock, "weariness" )
		  table.insert( classlock, "prone" )
   elseif ndba.getclass(target) == "Serpent" then   
      table.insert( classlock, "weariness" )
   elseif ndba.getclass(target) == "Shaman" then   --
      table.insert( classlock, "selarnia" )
   elseif ndba.getclass(target) == "Sylvan" then   --
      table.insert( classlock, "voyria" )
   elseif ndba.getclass(target) == "Depthswalker" then   --
      table.insert( classlock, "recklessness" )
   elseif ndba.getclass(target) == "Psion" then   --
      table.insert( classlock, "confusion" )
   end
 else
    table.insert( classlock, "voyria" )
    table.insert( classlock, "weariness" )
    table.insert( classlock, "reckless" )
 end
end

function ak.classlocksvo()
 classlock = {}
 if ak.dragonTarget then
   table.insert( classlock, "weariness" )
   table.insert( classlock, "recklessness" )
 elseif ndb.isperson(target) and ndb.getclass(target) ~= "unknown" then
   if ndb.getclass(target) == "Alchemist" then    --
      table.insert( classlock, "stupidity" )
   elseif ndb.getclass(target) == "Apostate" then --
      table.insert( classlock, "voyria")
   elseif ndb.getclass(target) == "Bard" then
      table.insert( classlock, "voyria" )
	 elseif ndb.getclass(target) == "Blademaster" then
      table.insert( classlock, "weariness" )
		  table.insert( classlock, "prone" )
   elseif ndb.getclass(target) == "Druid" then    --
      table.insert( classlock, "weariness" )
		  table.insert( classlock, "prone" )
   elseif ndb.getclass(target) == "Infernal" then
      table.insert( classlock, "weariness" )
   elseif ndb.getclass(target) == "Jester" then   --
      table.insert( classlock, "voyria" )
   elseif ndb.getclass(target) == "Jester" then   --
      table.insert( classlock, "voyria" )
   elseif ndb.getclass(target) == "Magi" then
      table.insert( classlock, "haemophilia" )
   elseif ndb.getclass(target) == "Monk" then
      table.insert( classlock, "weariness" )
   elseif ndb.getclass(target) == "Occultist" then   --
      table.insert( classlock, "paralysis" )
      table.insert( classlock, "voyria" )
   elseif ndb.getclass(target) == "Paladin" then  
      table.insert( classlock, "weariness" )
      table.insert( classlock, "voyria" )
   elseif ndb.getclass(target) == "Priest" then   --
      table.insert( classlock, "voyria" )
   elseif ndb.getclass(target) == "Runewarden" then
      table.insert( classlock, "weariness" )
      table.insert( classlock, "voyria")
   elseif ndb.getclass(target) == "Sentinel" then   
      table.insert( classlock, "weariness" )
		  table.insert( classlock, "prone" )
   elseif ndb.getclass(target) == "Serpent" then   
      table.insert( classlock, "weariness" )
   elseif ndb.getclass(target) == "Shaman" then   --
      table.insert( classlock, "selarnia" )
   elseif ndb.getclass(target) == "Sylvan" then   --
      table.insert( classlock, "voyria" )
   elseif ndb.getclass(target) == "Depthswalker" then   --
      table.insert( classlock, "recklessness" )
   end
 else
    table.insert( classlock, "voyria" )
    table.insert( classlock, "weariness" )
    table.insert( classlock, "reckless" )
 end
end</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Displays</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>odisplay</name>
					<packageName></packageName>
					<script>if ak.refreshAffs then return end           --DELETE THIS SHIT OUT OF YOUR PERSONAL VARS
ak = ak or {}

function ak.refreshAffs()
   if GUI and GUI.ak then
      GUI.ak()                              
   else
      ak.refreshAffsOLD()
   end

end

function ak.refreshAffsOLD()                               --This is my standard display included
        WindowWidth = 0;
        WindowHeight = 0;
        WindowWidth, WindowHeight = getMainWindowSize()
        moveWindow("aff_display", WindowWidth-190,WindowHeight-900)
        resizeWindow("aff_display", 175,890)
        clearWindow("aff_display")
        if ak.defs.rebounding then         
					cecho("aff_display","\nRebounding: &lt;red&gt;YES!\n")
        else 
					cecho("aff_display","\nRebounding: &lt;yellow&gt;NONE!\n")
        end
        if ak.defs.shield then 
        	cecho("aff_display","\nShielding: &lt;red&gt;YES!\n")
        else 
					cecho("aff_display","\nShielding: &lt;yellow&gt;NONE!\n")
        end
        if ak.defs.curseward then 
        	cecho("aff_display","\nWarding: &lt;red&gt;YES!\n")
        else 
					cecho("aff_display","\nWarding: &lt;yellow&gt;NONE!\n")
        end
        if swiftcount then 
             if swiftcount == 1 then 
                  cecho("aff_display","\nSwifting: &lt;red&gt;FALLING!\n\n")
             else 
                  cecho("aff_display","\nSwifting: &lt;yellow&gt;"..swiftcount.."!\n\n")
             end 
        end
        if vodun and vodun[target] and vodun[target]["fashions"] ~= nil then
           cecho("aff_display","0Fashions:&lt;orange_red&gt;"..vodun[target]["fashions"].."\n\n")
        end
        if ak.stack then echo("aff_display","Stacking:"..ak.stack.."\n") else echo("aff_display","\nStacking: NONE!\n\n") end
        targetrelay()
        echo("aff_display","\n0Afflictions:       \n\n")
        for k,v in pairs(affstrack.score) do
        if v &gt; 1 then
           echo("aff_display", k.." "..v.."\n")
           end
        end
        if affstrack.kelpscore &gt; .1 then    echo("aff_display","\nKelp:        "..affstrack.kelpscore.."|4\n") end
        if affstrack.ginsengscore &gt; .1 then echo("aff_display","Ginseng:     "..affstrack.ginsengscore.."|5\n") end
        if affstrack.goldenscore &gt; .1 then  echo("aff_display","Goldenseal:  "..affstrack.goldenscore.."|5\n") end
        if affstrack.mentalscore &gt; .1 then  echo("aff_display","Mentals:  "..affstrack.mentalscore.."|4\n") end
        if softscore then if softscore &gt;= 3 then cecho("aff_display", "Locks:\n SOFT LOCKED!") end end
        if truescore then if truescore &gt;= 5 then cecho("aff_display", "TRUE LOCKED!") end end
        ak.limbshow()
end

function ak.noDisplay()
        WindowWidth = 0;
        WindowHeight = 0;
        WindowWidth, WindowHeight = getMainWindowSize()
        moveWindow("aff_display", 0,0)
        resizeWindow("aff_display", 0,0)
        clearWindow("aff_display")
end


function init()
        winX, winY = getMainWindowSize()
        createMiniConsole("aff_display", winX-145,0,130,400)
        setBackgroundColor("aff_display", 150, 150, 150, 255)
        setMiniConsoleFontSize( "aff_display", 10 )
        setFgColor("aff_display", 10, 0, 0)
        setBgColor("aff_display", 150, 150, 150)
--ak.refreshAffs()
end


</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Oprompt Colour</name>
					<packageName></packageName>
					<script>--ColorPrompt

local convert = {

                ["addiction"]      = "add",
                ["agoraphobia"]    = "agor",
                ["anorexia"]       = "anor",
                ["aeon"]           = "aeon",
								["amnesia"]        = "amn",
                ["aflame"]         = "aflame",
                ["airfist"]        = "afist",
                ["asthma"]         = "ast",
                ["blind"]          = "bld",
								["blisters"]       = "bls",
                ["blackout"]       = "blko",
                ["bound"]          = "bound",
								["brand"]          = "brnd",
                ["claustrophobia"] = "claus",
                ["clumsiness"]     = "clum",
                ["conflagrate"]    = "cnflg",
                ["confusion"]      = "conf",
								["corruption"]     = "corr",
                ["crippledarm"]    = "carm",
                ["crippledleg"]    = "cleg",
						    ["crushedthroat"]  = "cthroat",
                ["darkshade"]      = "dark",
                ["deadening"]      = "dead",
                ["depression"]     = "deep",
                ["deaf"]           = "deaf",
                ["dehydrate"]      = "dehy",
                ["dementia"]       = "dem",
                ["disloyalty"]     = "dloyal",
                ["disrupt"]        = "dis",
                ["dizziness"]      = "diz",
                ["ensorcell"]      = "EN",
                ["epilepsy"]       = "epi",
                ["enlighten"]      = "LIT",
                ["frozen"]         = "frzn",
                ["focusextend"]    = "fsex",
                ["flushings"]      = "flsh",
                ["generosity"]     = "genor",
                ["guilt"]          = "gul",
                ["haemophilia"]    = "haem",
                ["hallucinations"] = "hall",
                ["hamstring"]      = "hamst",
                ["healthleech"]    = "hleach",
                ["hellsight"]      = "hsight",
                ["hierophant"]     = "hiero",
                ["hypersomnia"]    = "hyper",
                ["hypochondria"]   = "hypo",
                ["hypothermia"]    = "hypot",
                ["impaleslash"]    = "is",
                ["impatience"]     = "imp",
                ["inquisition"]    = "inq",
                ["itching"]        = "itch",
                ["justice"]        = "just",
                ["kola"]           = "kola",
                ["lethargy"]       = "leth",
                ["latency"]        = "LATE",
                ["loneliness"]     = "lonl",
                ["masochism"]      = "maso",
                ["manaleech"]      = "mleech",
								["mindravaged"]    = "mrvg",
                ["mycalium"]       = "myc",
                ["nausea"]         = "naus",
                ["pacifism"]       = "pac",
                ["paralysis"]      = "para",
                ["parasite"]       = "paras",
                ["petrified"]      = "PETD",
                ["paranoia"]       = "prnd",
								["preempt"]        = "pree",
                ["prone"]          = "prn",
                ["pyramides"]      = "pyra",
                ["recklessness"]   = "reck",
                ["retribution"]    = "ret",
                ["rebbies"]        = "reb",
                ["rixil"]          = "rixil",
                ["sandfever"]      = "sfev",
                ["scalded"]        = "scald",
                ["scytherus"]      = "scy",
                ["selarnia"]       = "sel",
                ["sensitivity"]    = "sen",
                ["slime"]          = "slm",
                ["shadowmadness"]  = "smad",
                ["shyness"]        = "shy",
                ["slickness"]      = "slick",
                ["spiritburn"]     = "sburn",
								["stuttering"]     = "stut",
                ["surge"]          = "surge",
                ["tempslickness"]  = "slick2",
								["tension"]        = "ten",
                ["stupidity"]      = "stu",
                ["tenderskin"]     = "tskin",
                ["transfixed"]     = "trans",
                ["timeflux"]       = "tfx",
                ["timeloop"]       = "tloop",
                ["trussed"]        = "trst",
                ["unconscious"]    = "uncon",
                ["weariness"]      = "weari",
                ["whisperingmadness"] = "wmad",
                ["wrenchhead"]     = "wrth",
                ["wrenchtorso"]     = "wrtt",
                ["worm"]           = "worm",
                ["vertigo"]        = "vert",
                ["vitiate"]        = "vit",
                ["voyria"]         = "voyria",
                ["voidfist"]       = "vfist",
                ["rightleg"]       = "rl",
                ["leftleg"]       = "ll",
                ["rightarm"]       = "ra",
                ["leftarm"]       = "la",
                ["head"]       = "h",
                ["torso"]       = "tt",
                ["flamefist"]      = "ffist",
                ["heartseed"]      = "HSEED",
                ["trussed"]        = "trsd",
                ["unconscious"]    = "unc",  
                ["airdisrupt"]  = "adsr",
                ["earthdisrupt"]  = "edsr",
                ["firedisrupt"]  = "fdsr",
                ["spiritdisrupt"]  = "sdsr",
                ["waterdisrupt"]  = "wdsr",
								["unweavingmind"] = "umind",
								["unweavingbody"] = "ubody",
								["unweavingspirit"] = "uspirit",
								["bloodfire"]     = "bfire",
}
ak.prompt = ak.prompt or {}
--if ak.prompt.unique then return end
ak.prompt.uniqueset = {"hallucinations","dizziness","recklessness","confusion","paranoia","epilepsy","impatience"}
ak.prompt.uniquesymbol = "&lt;cyan&gt;+"
ak.prompt.donotrelay = {"rixil","slime","hierophant"}
ak.prompt.currentcolor = "&lt;yellow&gt;"
ak.prompt.enablecolor = true
ak.prompt.lockgroup = true
ak.prompt.default = "&lt;yellow&gt;"
ak.prompt.colours = {}
ak.prompt.lockpriority = { 
  [1] = "PTLOCK",
  [2] = "HLOCK",
  [3] = "SLOCK",
  [4] = "VLOCK",
}
ak.prompt.locks = {
  PTLOCK = {"anorexia","asthma","slickness","paralysis","impatience"},
  HLOCK = {"anorexia","asthma","slickness","paralysis"},
  SLOCK = {"anorexia","asthma","slickness","impatience"},
  VLOCK = {"anorexia","asthma","slickness"},
}
ak.prompt.colours.lock = {
  PTLOCK = "&lt;deep_pink&gt;",
  HLOCK = "&lt;deep_pink&gt;",
  SLOCK = "&lt;hot_pink&gt;",
  VLOCK = "&lt;hot_pink&gt;",
}
ak.prompt.colours.specific = {
   Kelp = "&lt;green&gt;",
   Goldenseal = "&lt;white&gt;",
   Ginseng = "&lt;blue&gt;",
   Salve = "&lt;cyan&gt;", 
   Ash = "&lt;purple&gt;",
   Deathly = "&lt;cyan&gt;",
	 Smoke = "&lt;orange&gt;",
   Pariah = "&lt;pink&gt;",
   }
ak.prompt.colours.afflictions = {
   Kelp = {"asthma", "clumsiness", "hypochondria", "sensitivity", "weariness", "healthleech"},      
   Goldenseal = {"dizziness", "epilepsy", "impatience", "shyness", "stupidity", "unweavingmind"},
   Ginseng = {"addiction", "darkshade", "haemophilia", "lethargy", "nausea", "scytherus", "unweavingbody"},
   Salve = {"aflame", "rightleg", "leftleg", "rightarm", "leftarm", "head", "torso"}, 
   Ash = {"confusion", "dementia", "hallucinations", "hypersomnia", "paranoia"} ,
   Deathly = {"enlighten","voyria","latency"},
   Pariah = {"mycalium","flushings","pyramides","rebbies","sandfever"},
	 Smoke = {"tension","manaleech","deadening","disloyalty", "unweavingspirit"}, 
}
function ak.prompt.unique(aff)
   if table.contains(ak.prompt.uniqueset, aff) then
      return ak.prompt.uniquesymbol..""..ak.prompt.currentcolor
   else
      return ""
   end
end

function ak.prompt.setassign()
   if gmcp.Char.Status.class == "Bard" then
      ak.prompt.uniqueset = {"agoraphobia","claustrophobia","dementia","epilepsy","masochism","recklessness","vertigo","confusion", "dizziness", "impatience", "paranoia", "stupidity", "addiction"}
   elseif gmcp.Char.Status.class == "Sentinel" then
      ak.prompt.uniqueset = {"hallucinations","dizziness","recklessness","confusion","paranoia","epilepsy","impatience"}
   elseif gmcp.Char.Status.class == "Occultist" then
      ak.prompt.uniqueset = {"dementia","stupidity","confusion","hypersomnia","paranoia","hallucinations","impatience","recklessness","masochism","agoraphobia","loneliness","lovers"}   
   else
      ak.prompt.uniqueset = {}
   end
end
function ak.prompt.scoreup()
  ak.prompt.setassign()
  ak.prompt.donotgroup = {}
  ak.prompt.lockconflict = false
  ak.prompt.currentcolor = ak.prompt.default
  promptset = {}
  local donotreprompt = {}
  if ak.prompt.lockgroup then
     for i = 1, #ak.prompt.lockpriority do
        for x = 1, #ak.prompt.locks[ak.prompt.lockpriority[i]] do
           if affstrack.score[ak.prompt.locks[ak.prompt.lockpriority[i]][x]] &gt; 50 and not ak.prompt.lockconflict then
              if x == #ak.prompt.locks[ak.prompt.lockpriority[i]] and not table.contains(ak.prompt.donotgroup, ak.prompt.lockpriority[i]) then
                 if table.contains(ak.prompt.colours.lock, ak.prompt.lockpriority[i] ) then
                    table.insert(promptset, ak.prompt.colours.lock[ak.prompt.lockpriority[i]]..""..ak.prompt.lockpriority[i])
                    ak.prompt.lockconflict = true
                 else
                    table.insert(promptset, ak.prompt.lockpriority[i])
                    ak.prompt.lockconflict = true
                 end
                 for m = 1, #ak.prompt.locks[ak.prompt.lockpriority[i]] do
                    table.insert(donotreprompt, ak.prompt.locks[ak.prompt.lockpriority[i]][m])
                 end   
              end
           elseif not table.contains(ak.prompt.donotgroup, ak.prompt.lockpriority[i]) then
              table.insert(ak.prompt.donotgroup, ak.prompt.lockpriority[i])
           end
        end
     end
  end
  if ak.prompt.enablecolor then
     for k,v in pairs(ak.prompt.colours.afflictions) do
        if #ak.prompt.colours.afflictions[k] &gt; 0 then
           for i = 1,#ak.prompt.colours.afflictions[k] do
              if affstrack.score[ak.prompt.colours.afflictions[k][i]] &gt; 1 and convert[ak.prompt.colours.afflictions[k][i]] and not table.contains(ak.prompt.donotrelay, ak.prompt.colours.afflictions[k][i]) and not table.contains(donotreprompt, ak.prompt.colours.afflictions[k][i]) then         
                 if affstrack.score[ak.prompt.colours.afflictions[k][i]] == 100 and convert[ak.prompt.colours.afflictions[k][i]] then
                    ak.prompt.currentcolor = ak.prompt.colours.specific[k]
                    table.insert(promptset, ak.prompt.colours.specific[k]..""..ak.prompt.unique(ak.prompt.colours.afflictions[k][i])..""..convert[ak.prompt.colours.afflictions[k][i]])
                    table.insert(donotreprompt, ak.prompt.colours.afflictions[k][i])
                 elseif convert[ak.prompt.colours.afflictions[k][i]] then
                    ak.prompt.currentcolor = ak.prompt.colours.specific[k]
                    table.insert(promptset, ak.prompt.colours.specific[k]..""..ak.prompt.unique(ak.prompt.colours.afflictions[k][i])..""..convert[ak.prompt.colours.afflictions[k][i]].."["..math.floor(affstrack.score[ak.prompt.colours.afflictions[k][i]] + 0.5).."]")
                    table.insert(donotreprompt, ak.prompt.colours.afflictions[k][i])
                 end
              end
           end
        end
     end
  end
  for k,v in pairs(affstrack.score) do
     if v &gt; 1 and convert[k] and not table.contains(donotreprompt, k)and not table.contains(ak.prompt.donotrelay, k) then         
        if v == 100 and convert[k] then
           ak.prompt.currentcolor = ak.prompt.default
           table.insert(promptset, ak.prompt.default..""..ak.prompt.unique(k)..""..convert[k])
        elseif convert[k] and not table.contains(ak.prompt.donotrelay, k)  then
           ak.prompt.currentcolor = ak.prompt.default
           table.insert(promptset, ak.prompt.default..""..ak.prompt.unique(k)..""..convert[k].."["..math.floor(v + 0.5).."]" )
        end
     end
  end
  if affstrack.impale then
     ak.prompt.currentcolor = ak.prompt.default
     table.insert(promptset, "&lt;cyan&gt;IMPALED")
  end
  if ak.track.flown then
     ak.prompt.currentcolor = ak.prompt.default
     table.insert(promptset, "&lt;white&gt;FLOWN")
  end
  if gmcp.Char.Status.class == "Infernal" or gmcp.Char.Status.class == "Paladin" or gmcp.Char.Status.class == "Runewarden" or gmcp.Char.Status.class == "Magi" or gmcp.Char.Status.class == "Serpent" or gmcp.Char.Status.class == "Bard" then
		if ak.defs.rebounding then
			table.insert(promptset,"&lt;blue&gt;Reb")
		end
		if affstrack.ferocity and affstrack.ferocity &gt; 0 then
		   table.insert(promptset,"&lt;cyan&gt;[&lt;red&gt;"..affstrack.ferocity.."&lt;cyan&gt;]")	
		end
  end
	if gmcp.Char.Status.class == "Occultist" then
		if ak.occie.aura.mental &gt; 0 or ak.occie.aura.physical &gt; 0 then
			table.insert(promptset,"&lt;cyan&gt;[&lt;white&gt;"..ak.occie.aura.physical.."/&lt;green&gt;"..ak.occie.aura.mental.."&lt;cyan&gt;]")
		end
  end
	if gmcp.Char.Status.class == "Depthswalker" then
    local age = ak.age or 0
    if age ~= 0 then
	   table.insert(promptset,"&lt;white&gt;[&lt;red&gt;"..ak.age().."&lt;white&gt;]")	
    end
	end	
	if ak.bleeding and ak.bleeding &gt; 0 then
	   table.insert(promptset,"&lt;cyan&gt;[&lt;red&gt;"..ak.bleeding.."&lt;cyan&gt;]")
	end
	if gmcp.Char.Status.class == "Shaman" then
    local yeet = roundUp(ak.shaman.ReturnTzantza(),0)
    if yeet &gt; 0 then
       table.insert(promptset,"&lt;cyan&gt;[&lt;white&gt;"..yeet.."&lt;cyan&gt;]")
    end
    if ak.shaman.GetFashions then
	     table.insert(promptset,"&lt;cyan&gt;[&lt;red&gt;F&lt;cyan&gt;]")	
	  end
  end
end


function ak.shaman.ReturnTzantza() 
   local countstoTzantza = {"recklessness","agoraphobia","claustrophobia","vertigo","confusion", "epilepsy", "dizziness","dementia","paranoia","masochism","impatience","stupidity","addiction",}
   local mathup = 0
	 for i = 1, #countstoTzantza do
	    mathup = mathup + affstrack.score[countstoTzantza[i]] 
	 end
   mathup = mathup / 100
   return mathup
end



</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>oprompt Svo Script</name>
					<packageName></packageName>
					<script>--svo prompt
-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
--Mine Below!
--Without The Display!
--vconfig customprompt ^1H: @health ^W(^1@%health%^W), ^2M: @mana ^W(^2@%mana%^W) ^4@willpowerw, ^5@endurancee ^W@%xp% @eqbal|@defs@affs^W @ml_prompttagmine[@gametargethp]-
--With The Display!
--vconfig customprompt ^1H: @health ^W(^1@%health%^W), ^2M: @mana ^W(^2@%mana%^W) ^4@willpowerw, ^5@endurancee ^W@%xp% @eqbal|@defs@affs^W @ml_prompttagmine[@gametargethp]^y@ml_oprompt-

--Add @ml_oprompt to your custom svo prompt
--Use ^y@ml_oprompt instead for it to be coloured yellow


function ak.ml_oprompt()
  promptset = promptset or {}
  if not target then 
     return "" 
  elseif #promptset &gt; 0 then
     return ("["..table.concat(promptset, ", ").."]")
  else
     return ""
  end
end

function ak.svoEventHandlers()
   svo.adddefinition("@ml_oprompt", "ak.ml_oprompt()")
end
 
registerAnonymousEventHandler("svo system loaded", "ak.svoEventHandlers")


</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>oprompt Wys Script</name>
					<packageName></packageName>
					<script>--wsys.prompt
-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
--type wshow display
--add @owysprompt into your prompt

function wsys.prompttags.owysprompt()
  promptset = promptset or {}
  if not target then 
     return "" 
  elseif #promptset &gt; 0 and not ak.disableAllEchos then
     return (ak.prompt.default.."["..table.concat(promptset, ", ").."&lt;yellow&gt;]")
  else
     return ""
  end
end
                    



</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>oTarget</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function targetrelay ()
				if not target then return end
        cecho("aff_display","\n&lt;blue&gt;****************\n")
        cecho("aff_display","\n0Targets: "..target.."\n\n")
        if target1 ~= nil then cecho("aff_display","\nTarget1:&lt;yellow&gt; "..target1.."\n\n") end
        if target2 ~= nil then cecho("aff_display","Target2:&lt;yellow&gt; "..target2.."\n\n") end
        if target3 ~= nil then cecho("aff_display","Target3:&lt;yellow&gt; "..target3.."\n\n") end
        cecho("aff_display","\n&lt;blue&gt;****************\n")
end</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Limbs</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>Limb Hit +</name>
					<packageName></packageName>
					<script>--limbs2
ak.limbs = ak.limbs or {}
ak.limbs.test = ak.limbs.test or {}
ak.limbs.weaponry = ak.limbs.weaponry or {}
ak.limbs.parriedlimbs = ak.limbs.parriedlimbs or {}
ak.limbs.weaponry.magi = {"earthstaff","airstaff","firestaff","waterstaff"}
ak.limbs.currentbreak = ak.limbs.currentbreak or {}
ak.limbs.currentbreak.weapon = {}
ak.limbs.currentbreak.limb = {}
ak.limbs.currentbreak.attacker = {}
ak.limbs.currentbreak.augment = {}
ak.limbs.currentbreak.who = {}
ak.limbs.blademaster = ak.limbs.blademaster or {}
ak.limbs.blademaster.stance = ak.limbs.blademaster.stance or {}
ak.limbs.tekura = ak.limbs.tekura or {}
ak.limbs.shikudo = ak.limbs.shikudo or {}
ak.limbs.twoh = ak.limbs.twoh or {}
ak.limbs.twoh.stance = ak.limbs.twoh.stance or {}
ak.limbs.oppositesLimbs = {
	["rightleg"] = "leftleg",
	["leftleg"] = "rightleg",
	["rightarm"] = "leftarm",
	["leftarm"] = "rightarm",
	["torso"] = "head",
	["head"] = "torso",
}


ak.limbs.LimbHit = ak.limbs.LimbHit or function(who, attacker, weapon, limb, augment, check)
   if who == "Me" then return end
   local whomaxhealth = ak.limbs.FindTargetHealth(who)
   local damage = 0
   ak.limbs.limb_table_check(who)
   ak.limbs.deleteset = false
   ak.limbs.tekura.dontbreaksethead = false
   local attackerclass = "unknown"
   if attacker == "Me" and gmcp.Char.Status.race:match("Dragon") then
      attackerclass = "Dragon" 
   elseif attacker == "Me" and gmcp.Char.Status.class then
      attackerclass = gmcp.Char.Status.class
   elseif ndba and ndba.isperson(attacker) then
      attackerclass = ndba.names[attacker]["class"]
   end 
   if weapon == "tremolo" and not ak.limbs.myweapons[weapon] and not ak.limbs.myformulas[weapon] then 
      damage = 50
   elseif who == "Me" and wsys and wsys.stats.h == wsys.stats.oh then 
      if wsys.absorbed == false then
         return 
      end
   elseif weapon == "dragonrend" and not ak.limbs.myweapons[weapon] and not ak.limbs.myformulas[weapon] then 
      damage = 25
	 elseif weapon == "psion" and not ak.limbs.myweapons[weapon] and not ak.limbs.myformulas[weapon] then
	 	  damage = 25
	 elseif weapon == "wreathed" and not ak.limbs.myweapons[weapon] and not ak.limbs.myformulas[weapon] then
      if whomaxhealth &gt;= 18724 then
        damage = 10.3
      elseif whomaxhealth &gt;= 6500 then
        damage = 12.7
      else
        damage = 12.5
      end
   elseif weapon == "viridianrend" and not ak.limbs.myweapons[weapon] and not ak.limbs.myformulas[weapon] then
      if whomaxhealth &gt;= 18724 then
        damage = 20.6
      elseif whomaxhealth &gt; 7000 then
        damage = 24
      else
        damage = 25			
      end
   elseif weapon == "airstaff" and not ak.limbs.myweapons[weapon] and not ak.limbs.myformulas[weapon] then --15,9 for magi
      if whomaxhealth &gt; 5300 then
         damage = 10
      else
         damage = 11
      end  
      ak.staffaff(weapon)    
   elseif table.contains(ak.limbs.weaponry.magi, weapon) and not ak.limbs.myweapons[weapon] and not ak.limbs.myformulas[weapon] then
      if whomaxhealth &gt; 5400 then
         damage = 16
      else
         damage = 17
      end   
      ak.staffaff(weapon)      
   elseif ak.limbs.myweapons and ak.limbs.myweapons[weapon] then --ak.limbs.myweapons
      damage = ak.limbs.findMyStab(weapon,whomaxhealth)
	 elseif ak.limbs.myformulas and ak.limbs.myformulas[weapon] then
	 		damage = ak.limbs.myformulas[weapon](who, attacker, weapon, limb, augment, check)
   else
      return
   end
   ak.limbs.limbcount[who]["lastpercent"..limb] = ak.limbs.limbcount[who][limb] + 0
   ak.limbs.limbcount[who][limb] = ak.limbs.limbcount[who][limb] + damage
   if weapon == "axk" then
      ak.limbs.tekura.dontbreaksethead = true
   end
   if target == who then
      ak.limbs.damageEcho_Target(target,limb)
   else
      ak.limbs.damageEcho_Non_Target(who,limb)
   end
   ak.limbs.test.currentmax = currentmax
   ak.limbs.test.damage = damage
   ak.limbs.test.who = who
   ak.limbs.test.whomaxhealth = whomaxhealth
   ak.limbs.test.attacker = attacker
   ak.limbs.test.attackerclass = attackerclass
   ak.limbs.test.weapon = weapon
   ak.limbs.test.limb = limb
   ak.limbs.test.augment = augment
   ak.limbs.test.check = check
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>My Weapons +</name>
					<packageName></packageName>
					<script>--limbs db

function ak.limbs.findMyStab(weapon,whomaxhealth)
   if not ak.limbs.myweapons[weapon] then 
      cecho("error.1")
      return 
   end
   local currentmax = 0
   local damage = 0
   for k,v in pairs(ak.limbs.myweapons[weapon]) do
      if currentmax == 0 then 
         currentmax = k
      else
         if ak.limbs.isCloser(whomaxhealth, k, currentmax, weapon) then
            currentmax = k
         end
      end
   end
   ak.limbs.test.currentmax = currentmax
   damage = ak.limbs.myweapons[weapon][currentmax]
   return damage
end

function ak.limbs.isCloser(whomaxhealth, k, currentmax, weapon)
   ak.limbs.test.proximityK = whomaxhealth - k
   ak.limbs.test.proximityCurrent = whomaxhealth - currentmax
   if ak.limbs.test.proximityCurrent &lt; 0 then
      ak.limbs.test.proximityCurrent = ak.limbs.test.proximityCurrent * -1
   end
   if ak.limbs.test.proximityK &lt; 0 then
      ak.limbs.test.proximityK = ak.limbs.test.proximityK * -1
   end
   ak.limbs.test.k = k
   ak.limbs.test.currentmax = currentmax
   if ak.limbs.test.proximityK &lt; ak.limbs.test.proximityCurrent then
      return true
   else
      return false
   end
end
</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Misc Limb Functions</name>
					<packageName></packageName>
					<script>--limbs misc
function ak.limbs.FindTargetHealth(who)
   if who == "Me" then
      return gmcp.Char.Vitals.maxhp
   end
   ak.knownmaxhealth = ak.knownmaxhealth or {}
   if table.contains(ak.knownmaxhealth, who) then
      return tonumber(ak.knownmaxhealth[who]) 
   else
      return 6000   
   end
end

function ak.limbs.ariaUp(name)
	if not ak.knownmaxhealth[name] then return end
	ak.knownmaxhealth[name] = ak.knownmaxhealth[name] * 1.1
end

function ak.limbs.ariaDown(name)
	display(name)
	if not ak.knownmaxhealth[name] then return end
	ak.knownmaxhealth[name] = ak.knownmaxhealth[name] / 1.1	
end

function ak.limbs.standardizeLimb(limb)
   local limbsc = {
   ["right leg"] = "rightleg",
   ["right arm"] = "rightarm",
   ["left arm"] = "leftarm",
   ["left leg"] = "leftleg",
   }
   if limbsc[limb] then
      return limbsc[limb]
   else
      return limb
   end
end

function ak.limbs.ExpoundLimb(limb)
   local limbs = {
   ["rightleg"] = "right leg",
   ["rightarm"] = "right arm",
   ["leftarm"] = "left arm",
   ["leftleg"] = "left leg",
   }
   if limbs[limb] then
      return limbs[limb]
   else
      return limb
   end
end

function ak.limbs.limb_table_check(who)
   ak.limbs.limbcount = ak.limbs.limbcount or {}
   who = who or "Me"
   if not ak.limbs.limbcount[who] then
      ak.limbs.limb_table_form(who)
   end
end

function ak.limbs.limb_table_form(who)
 ak.limbs.limbcount[who] = ak.limbs.limbcount[who] or {}
 ak.limbs.limbcount[who].lasthitdamage = ak.limbs.limbcount[who].lasthitdamage or {} 
 ak.limbs.limbcount[who].lasthitlimb = ak.limbs.limbcount[who].lasthitlimb or "rightleg"   
 ak.limbs.limbcount[who].breakpoint = ak.limbs.limbcount[who].breakpoint or 0
 ak.limbs.limbcount[who].rightarm = ak.limbs.limbcount[who].rightarm or 0 
 ak.limbs.limbcount[who].rightleg = ak.limbs.limbcount[who].rightleg or 0 
 ak.limbs.limbcount[who].leftarm = ak.limbs.limbcount[who].leftarm or 0 
 ak.limbs.limbcount[who].leftleg = ak.limbs.limbcount[who].leftleg or 0 
 ak.limbs.limbcount[who].torso = ak.limbs.limbcount[who].torso or 0 
 ak.limbs.limbcount[who].head = ak.limbs.limbcount[who].head or 0
 ak.limbs.limbcount[who].lastpercentrightarm = ak.limbs.limbcount[who].lastpercentrightarm or 0 
 ak.limbs.limbcount[who].lastpercentrightleg = ak.limbs.limbcount[who].lastpercentrightleg or 0 
 ak.limbs.limbcount[who].lastpercentleftarm = ak.limbs.limbcount[who].lastpercentleftarm or 0 
 ak.limbs.limbcount[who].lastpercentleftleg = ak.limbs.limbcount[who].lastpercentleftleg or 0 
 ak.limbs.limbcount[who].lastpercenttorso = ak.limbs.limbcount[who].lastpercenttorso or 0 
 ak.limbs.limbcount[who].lastpercenthead = ak.limbs.limbcount[who].lastpercenthead or 0
 ak.limbs.limbcount[who].maxbreaks = {}

 ak.limbs.limbcount[who].maxbreaks.rightarm = 0 
 ak.limbs.limbcount[who].maxbreaks.rightleg = 0 
 ak.limbs.limbcount[who].maxbreaks.leftarm = 0 
 ak.limbs.limbcount[who].maxbreaks.leftleg = 0 
 ak.limbs.limbcount[who].maxbreaks.torso = 0 
 ak.limbs.limbcount[who].maxbreaks.head = 0
end


function ak.limbs.limbreset(who)
 ak.limbs.limbcount[who] = ak.limbs.limbcount[who] or {}
 ak.limbs.limbcount[who].lasthitdamage = {} 
 ak.limbs.limbcount[who].lasthitlimb =  "rightleg"   
 ak.limbs.limbcount[who].breakpoint = 0
 ak.limbs.limbcount[who].rightarm = 0 
 ak.limbs.limbcount[who].rightleg = 0 
 ak.limbs.limbcount[who].leftarm = 0 
 ak.limbs.limbcount[who].leftleg = 0 
 ak.limbs.limbcount[who].torso = 0 
 ak.limbs.limbcount[who].head = 0
 ak.limbs.limbcount[who].lastpercentrightarm = 0 
 ak.limbs.limbcount[who].lastpercentrightleg = 0 
 ak.limbs.limbcount[who].lastpercentleftarm = 0 
 ak.limbs.limbcount[who].lastpercentleftleg = 0 
 ak.limbs.limbcount[who].lastpercenttorso = 0
 ak.limbs.limbcount[who].lastpercenthead = 0
 ak.limbs.limbcount[who].maxbreaks = {}
 ak.limbs.limbcount[who].maxbreaks.rightarm = 0 
 ak.limbs.limbcount[who].maxbreaks.rightleg = 0 
 ak.limbs.limbcount[who].maxbreaks.leftarm = 0 
 ak.limbs.limbcount[who].maxbreaks.leftleg = 0 
 ak.limbs.limbcount[who].maxbreaks.torso = 0 
 ak.limbs.limbcount[who].maxbreaks.head = 0
end

ak.limbs.BreakerOrder = {"rightleg","leftleg","head","torso","rightarm","leftarm"}
function ak.limbs.breakOrder(limb)
	table.remove(ak.limbs.BreakerOrder,table.index_of(ak.limbs.BreakerOrder,limb))
	table.insert(ak.limbs.BreakerOrder,limb)
end

function ak.limbs.FindLastBrokenLeg()
	local tick = false
	for i = 1, #ak.limbs.BreakerOrder do
		if ak.limbs.BreakerOrder[i] == "rightleg" or ak.limbs.BreakerOrder[i] == "leftleg" then
			if not tick then
				tick = true
			else
				return ak.limbs.BreakerOrder[i]
			end
		end
	end
end
</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Limb Relays</name>
					<packageName></packageName>
					<script>--limb relays
function ak.limbs.damageEcho_Target(who,limb)       -----Reset Timer --ak.limbs.tekura.dontbreaksethead
  local hitsneeded = roundUp((100-ak.limbs.limbcount[who][limb])/(ak.limbs.limbcount[who][limb] - ak.limbs.limbcount[who]["lastpercent"..limb]),0)
--Limbs
  if (ak.limbs.limbcount[who][limb] &gt;= 100) and limb ~= "torso" and limb ~= "head" then
		 ak.limbs.limbcount[who].maxbreaks[limb] = ak.limbs.limbcount[who][limb]
     ak.limbs.limbcount[who][limb] = 0
     affstrack.score[limb] = 200
		 ak.limbs.lastbroke = limb
     cecho("&lt;green&gt;\n\nBroke "..who.."'s "..limb.."(A)!!")
		 ak.limbs.breakOrder(limb)
--Head
  elseif (ak.limbs.limbcount[who][limb] &gt;= 100) and not ak.limbs.tekura.dontbreaksethead then
		 ak.limbs.limbcount[who].maxbreaks[limb] = ak.limbs.limbcount[who][limb]
     ak.limbs.limbcount[who][limb] = 0
     affstrack.score[limb] = affstrack.score[limb] + 100
     if limb == "head" then affstrack.score.stupidity = 100 end
		 ak.limbs.lastbroke = limb
     cecho("&lt;green&gt;\n\nBroke "..who.."'s "..limb.."(B)!!")
		 ak.limbs.breakOrder(limb)
  elseif ak.limbs.tekura.dontbreaksethead then
     if ak.limbs.limbcount[who]["head"] &gt; 100 then
        affstrack.score["head"] = 200
        affstrack.score.stupidity = 100
     else
        ak.limbs.limbcount[who]["head"] = ak.limbs.limbcount[who]["lastpercenthead"]
        affstrack.score["head"] = affstrack.score["head"] + 100
        affstrack.score.stupidity = 100
     end
		 ak.limbs.lastbroke = limb
     cecho("&lt;green&gt;\n\nBroke "..who.."'s "..limb.."(AXK)!!")
		 ak.limbs.breakOrder(limb)
  end
  if affstrack.score.head &gt; 200 then affstrack.score.head = 200 end
  cecho("&lt;yellow&gt;\n"..who.."'s "..limb.." is at&lt;cyan&gt; "..roundUp(ak.limbs.limbcount[who][limb],0).."("..hitsneeded..")!!")
  if ak.limbs.ScoreRun then 
		ak.scoreup(target)
		--cecho("&lt;green&gt;Score!")
  end
  limbtimer = limbtimer or {}
  limbtimer[who] = limbtimer[who] or {}
  if limbtimer[who][limb] then killTimer(limbtimer[who][limb]) end
  if who == "Me" and limb == "torso" then
     limbtimer[who][limb] = tempTimer(180, [[ 
         ak.limbs.ignoretorso = false
         cecho("&lt;yellow&gt;\n\nReset ]]..who..[['s ]]..limb..[[!\n")
         ak.limbs.limbcount.]]..who..[[.]]..limb..[[ = 0
         ak.scoreup(target)
     ]])
  else
     limbtimer[who][limb] = tempTimer(180, [[ 
         cecho("&lt;yellow&gt;\n\nReset ]]..who..[['s ]]..limb..[[!\n")
         ak.limbs.limbcount.]]..who..[[.]]..limb..[[ = 0
         ak.scoreup(target)
     ]])
  end
end

function ak.limbs.damageEcho_Non_Target(who,limb) 
  donotrebreak = donotrebreak or {}
  donotrebreak[who] = donotrebreak[who] or {}
  limbtimer = limbtimer or {}
  limbtimer[who] = limbtimer[who] or {}
  local hitsneeded = roundUp((100-ak.limbs.limbcount[who][limb]) / (ak.limbs.limbcount[who][limb] - ak.limbs.limbcount[who]["lastpercent"..limb]),0)
  --local hitsneeded = roundUp(100 / (ak.limbs.limbcount[who][limb] - ak.limbs.limbcount[who]["lastpercent"..limb]),0)
--Limbs
  if ak.limbs.limbcount[who][limb] &gt;= 100 and limb ~= "torso" and limb ~= "head" then
     ak.limbs.limbcount[who][limb] = 0
     if who == "Me" or who == "You" then 
        cecho("&lt;green&gt;\n\nBroke my "..limb.."!!")			
		else
        cecho("&lt;green&gt;\n\nBroke "..who.."'s "..limb.."!!")
     end
     ak.limbs.damagedisable(who,limb)
--Head
  elseif ak.limbs.limbcount[who][limb] &gt;= 100 then
     ak.limbs.limbcount[who][limb] = 0
     if who == "Me" or who == "You" then 
        cecho("&lt;green&gt;\n\nBroke my "..limb.."!!")			
		else
        cecho("&lt;green&gt;\n\nBroke "..who.."'s "..limb.."!!")
     end
     if (who == "Me" or who == "You") and limb == "torso" and not ak.limbs.ignoretorso then
        wsys.affadd("mildtrauma")
				send("curing predict mildtrauma")
     end
     ak.limbs.damagedisable(who,limb)
  end
  if who == "Me" then
     if GUI and GUI.UpdateLimbs then GUI.UpdateLimbs() end
     cecho("&lt;yellow&gt;\nMy &lt;cyan&gt;"..limb.." is at&lt;cyan&gt; "..roundUp(ak.limbs.limbcount[who][limb],0).."("..hitsneeded..")!!")
     if ak.limbs.ScoreRun then ak.scoreup(target) end
     if limbtimer[who][limb] then 
			killTimer(limbtimer[who][limb]) 
		end
     limbtimer[who][limb] = tempTimer(180, [[ 
         cecho("&lt;yellow&gt;\n\nReset My ]]..limb..[[!\n")
         ak.limbs.limbcount.]]..who..[[.]]..limb..[[ = 0
         if GUI and GUI.UpdateLimbs then GUI.UpdateLimbs() end
         ak.scoreup(target)
     ]])
  else
     if limbtimer[who][limb] then 
			killTimer(limbtimer[who][limb]) 
		end
     limbtimer[who][limb] = tempTimer(180, [[ 
         cecho("&lt;yellow&gt;\n\nReset ]]..who..[['s ]]..limb..[[!\n")
         ak.limbs.limbcount.]]..who..[[.]]..limb..[[ = 0
         if ]]..who..[[ == target then ak.scoreup(target)end
     ]])
  end
end

function ak.limbs.damagedisable(who,limb)
   if limb == "aflame" or who == "Me" then
      return
   elseif _G[who..""..limb.."disablelimbdamage"] == nil then 
      _G[who..""..limb.."disablelimbdamage"] = tempTimer(4,[[
         _G["]]..who..[[]]..limb..[[disablelimbdamage"] = nil
         cecho("&lt;cyan&gt;\n\n\nCounting again for, &lt;yellow&gt;]]..who..[['s ]]..limb..[[!\n\n\n")
         ak.limbs.countAgain("]]..who..[[","]]..limb..[[")
         cecho("&lt;cyan&gt;\n\n\nCounting again for, &lt;yellow&gt;]]..who..[['s ]]..limb..[[!\n\n\n")
      ]])
   end
end

function ak.limbs.countAgain(who,limb) --Return From Timeout on Secondary Targets
   local remove = limb:gsub("%s+", "")
   remove = remove:lower()
end

function ak.limbs.CountAgain(limb) --Return from Apply Script
   ak.limbs.limb_table_check(target)
   if ak.limbs.limbcount[target] and ak.limbs.limbcount[target][limb] then 
      ak.limbs.limbcount[target][limb] = 0 
   end
end
</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Limb Display</name>
					<packageName></packageName>
					<script>--limbshow
function ak.limbshow()
   cecho("aff_display","\n&lt;blue&gt;****************\n")
   cecho("aff_display","\nLimbs:                \n")
   ak.limbs = ak.limbs or {}
   ak.limbs.limbcount = ak.limbs.limbcount or {}
   if ak.limbs.limbcount[target] ~= nil then
      cecho("aff_display","\n\nH+T  :&lt;yellow&gt;"..ak.limbs.limbcount[target].head.." "..ak.limbs.limbcount[target].torso.."      \n")
      cecho("aff_display","\n\nArms: &lt;yellow&gt;"..ak.limbs.limbcount[target].leftarm.." "..ak.limbs.limbcount[target].rightarm.."      \n")
      cecho("aff_display","\n\nLegs: &lt;yellow&gt;"..ak.limbs.limbcount[target].leftleg.." "..ak.limbs.limbcount[target].rightleg.."      ")
   end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Parse Hits</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ak.limbs.ParseonLine()
	if isActive("Confirmed Hit Limbs", "trigger") == 0 then return end
	ak.limbs.parseBreaks()
end



function ak.limbs.parseBreaks()
   cecho("&lt;cyan&gt;.")
   ak.limbs.ScoreRun = false
   disableTrigger("Missed Single Removal Limbs")                --DO NOT CHANGE!
   disableTrigger("Parry locate")
   disableTrigger("Monk Parry")
   local augment = "none"
   if #ak.limbs.currentbreak.weapon &gt; 0 then
      for i = 1, #ak.limbs.currentbreak.weapon do
         if ak.limbs.currentbreak.augment[i] then
            augment = ak.limbs.currentbreak.augment[i] 
         else
            augment = "none"
         end
         ak.limbs.LimbHit(ak.limbs.currentbreak.who[i], ak.limbs.currentbreak.attacker[i], ak.limbs.currentbreak.weapon[i], ak.limbs.currentbreak.limb[i], augment)
      end
   end
   ak.limbs.currentbreak.weapon = {}
   ak.limbs.currentbreak.limb = {}
   ak.limbs.currentbreak.attacker = {}
   ak.limbs.currentbreak.who = {}
   ak.limbs.currentbreak.augment = {}
   cecho("&lt;cyan&gt;.")
   ak.limbs.absorbed = false
end

function ak.limbs.parseBreaksPrompt()
   cecho("&lt;cyan&gt;.")
   ak.limbs.ScoreRun = true
   disableTrigger("Missed Single Removal Limbs")                --DO NOT CHANGE!
   disableTrigger("Confirmed Hit Limbs")
   disableTrigger("Nairat Augment") 
   disableTrigger("Parry locate")
   disableTrigger("Monk Parry")
   local augment = "none"
   if #ak.limbs.currentbreak.weapon &gt; 0 then
      for i = 1, #ak.limbs.currentbreak.weapon do
         if ak.limbs.currentbreak.augment[i] then
            augment = ak.limbs.currentbreak.augment[i] 
         else
            augment = "none"
         end
         ak.limbs.LimbHit(ak.limbs.currentbreak.who[i], ak.limbs.currentbreak.attacker[i], ak.limbs.currentbreak.weapon[i], ak.limbs.currentbreak.limb[i], augment)
      end
   else
      ak.scoreup(target)
   end
   ak.limbs.currentbreak.weapon = {}
   ak.limbs.currentbreak.limb = {}
   ak.limbs.currentbreak.attacker = {}
   ak.limbs.currentbreak.who = {}
   ak.limbs.currentbreak.augment = {}
   cecho("&lt;pink&gt;*")
   ak.limbs.absorbed = false
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Clamp</name>
					<packageName></packageName>
					<script>ak.clampd = ak.clampd or {}
function ak.limbs.clampOn(who)
	if ak.knownmaxhealth[who] and not table.contains(ak.clampd,who) then
		cecho("\n\n&lt;cyan&gt;MIND CLAMP ON &lt;white&gt;"..who.."\n\n")
		ak.knownmaxhealth[who] = ak.knownmaxhealth[who] * .8
		table.insert(ak.clampd,who)
	end
	ak.scoreup(who)
end

function ak.limbs.clampOFF(who)
	if ak.knownmaxhealth[who] and table.contains(ak.clampd,who) then
		cecho("\n\n&lt;cyan&gt;LOST CLAMP ON &lt;white&gt;"..who.."\n\n")
		table.remove(ak.clampd,table.index_of(ak.clampd, who))
		ak.knownmaxhealth[who] = ak.knownmaxhealth[who] * 5/4
	end
	ak.scoreup(who)
end</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Cure Methods</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>oeaten</name>
					<packageName></packageName>
					<script>function ak.cure.ate(what,prorun)
  ak.handlePyramides(what)
	ak.occie.aura.parsereduct(what)
  local affs = {}
  ak.nexteatcheck(what)
  ak.mickey = false
  ak.randomaffs = ak.randomaffs or 0
  ocured = ocured or {}
  ocured.conversion[what] = ocured.conversion[what] or "notadded"
  ocured[ocured.conversion[what]] = {}
  ak.eatsbetweenaffs = ak.eatsbetweenaffs + 1
  local affconfirmedcount = 0
  if affstrack.score.anorexia&gt;0 and not prorun then 
    if ak.thoughtIhad then 
      ak.thoughtIhad("anorexia") 
    else 
      affstrack.score.anorexia = 0 
    end
    ocured = ocured or {}
    ocured[ocured.conversion[what]] = {}
  end
  if what == "hawthorn berry" or what == "calamine crystal" then
    affstrack.score.deaf = 100
    tempTimer(3,[[affstrack.score.deaf = 0;ak.scoreup(target)]])
  elseif not affstrack.eaten[what] then 
    return
  else
    for i = 1, #affstrack.eaten[what] do
      if affstrack.score[affstrack.eaten[what][i]] &gt; 0 then
        table.insert(affs, affstrack.eaten[what][i])
        affconfirmedcount = affconfirmedcount + affstrack.score[affstrack.eaten[what][i]]
      end
    end
    if #affs == 1 and affstrack.score[affs[1]] &lt; 100 and ak.randomaffs == 0 then
      if ak.ProTrackingConfirmed then ak.ProTrackingConfirmed(affs[1]) end
      affstrack.score[affs[1]] = 0
      ak.AfflictionCured(affs[1])
      ak.ResetConfirmAff(affs[1])
    elseif #affs &gt; 1 and affconfirmedcount &lt;= 100 then
      if ak.ProTrackingConfirmed then 
        ak.ProTrackingConfirmed(affs[1])
      end
      for i = 1, #affs do
        affstrack.score[affs[i]] = 0
        ak.AfflictionCured(affs[i])
      end
    elseif #affs &gt; 1 and table.contains(affs,"impatience") and ak.goldensealCount() &gt; 100 then
      for i = 1, #affs do            
        ocured = ocured or {}
        ocured[ocured.conversion[what]] = ocured[ocured.conversion[what]] or {}
        ocured[ocured.conversion[what]][affs[i]] = affstrack.score[affs[i]]
        if affs[i] ~= "impatience" then
          affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / (#affs-1)
        end
        if affstrack.score[affs[i]] &lt; ak.errorallowance then
          affstrack.score[affs[i]] = 0
          ak.AfflictionCured(affs[i])
        end
      end
    elseif #affs &gt; 1 and table.contains(affs,"asthma") and SmokeCount() &gt;= 100 then
      for i = 1, #affs do            
        ocured = ocured or {}
        ocured[ocured.conversion[what]] = ocured[ocured.conversion[what]] or {}
        ocured[ocured.conversion[what]][affs[i]] = affstrack.score[affs[i]]
        if affs[i] ~= "asthma" then
          affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / (#affs-1)
        end
        if affstrack.score[affs[i]] &lt; ak.errorallowance then
          affstrack.score[affs[i]] = 0
      		ak.AfflictionCured(affs[i])
        end
      end
		elseif #affs &gt; 1 and table.contains(affs,"slickness") and affstrack.score.prone == 100 and ak.canstand() then
      for i = 1, #affs do            
        ocured = ocured or {}
        ocured[ocured.conversion[what]] = ocured[ocured.conversion[what]] or {}
        ocured[ocured.conversion[what]][affs[i]] = affstrack.score[affs[i]]
        if affs[i] ~= "paralysis" then
          affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / (#affs-1)
        end
        if affstrack.score[affs[i]] &lt; ak.errorallowance then
          affstrack.score[affs[i]] = 0
          ak.AfflictionCured(affs[i])
        end
      end			 
    elseif #affs == 1 and table.contains(affs,"slickness") and affstrack.score.asthma &gt; 0 and affstrack.score.asthma &lt; 100 then
      for i = 1, #affs do            
        ocured = ocured or {}
        ocured[ocured.conversion[what]] = ocured[ocured.conversion[what]] or {}
        ocured[ocured.conversion[what]][affs[i]] = affstrack.score[affs[i]]
        if affstrack.score[affs[i]] &lt; ak.errorallowance then
          affstrack.score[affs[i]] = 0
			    ak.AfflictionCured(affs[i])
        end
			  ak.ProTrackingConfirmed("asthma")
			  ak.ResetConfirmAff(affs[i])
      end
    elseif #affs == 1 then
      ocured = ocured or {}
      ocured[ocured.conversion[what]] = ocured[ocured.conversion[what]] or {}
      ocured[ocured.conversion[what]][affs[1]] = affstrack.score[affs[1]]
      affstrack.score[affs[1]] = affstrack.score[affs[1]] - affstrack.score[affs[1]] / #affs
      if affstrack.score[affs[1]] &lt; ak.errorallowance then
        affstrack.score[affs[1]] = 0
				ak.AfflictionCured(affs[1])
      end
      ak.ResetConfirmAff(affs[1])
    elseif #affs &gt; 0 then
      for i = 1, #affs do
        ocured = ocured or {}
        ocured[ocured.conversion[what]] = ocured[ocured.conversion[what]] or {}
        ocured[ocured.conversion[what]][affs[i]] = affstrack.score[affs[i]]
        affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / #affs
        if affstrack.score[affs[i]] &lt; ak.errorallowance then
          affstrack.score[affs[i]] = 0
          ak.AfflictionCured(affs[i])
        end
      end
    elseif ak.randomaffs &gt; 0 then
       ak.randomaffs = ak.randomaffs - 1
    else
      if ak.WhyYouDoThat then 
        ak.WhyYouDoThat(what) 
      end
    end
  end
  ak.scoreup(target)
  if #affs &gt; 0 then
    ak.echoForPossibleCures(table.concat(affs, " "))  
  end
end

function ak.goldensealCount()
	local count = 0
	for i = 1, #affstrack.eaten["goldenseal root"] do
     if affstrack.score[affstrack.eaten["goldenseal root"][i]] &gt; 0 then
        count = count + affstrack.score[affstrack.eaten["goldenseal root"][i]]
     end
  end
  if affstrack.score.sandfever &gt; 0 then
    count = count - affstrack.score.sandfever
  end
	return count
end

function FocusCount()
  local count = 0
  for i = 1, #affstrack.focused do
      if affstrack.score[affstrack.focused[i]] &gt; 0 then
         count = count + affstrack.score[affstrack.focused[i]]
      end
   end
   return count
end

function SmokeCount()
   local count = 0
   if affstrack.score.aeon &gt; 0 then return 0 end
   for i = 1, #affstrack.smoked do
      if affstrack.score[affstrack.smoked[i]] &gt; 0 then
         count = count + affstrack.score[affstrack.smoked[i]]
      end
   end
   return count
end

if not ak.nexteatcheck then
   function ak.nexteatcheck(what)
		ak.lasteat = what
   end
end

function ak.canstand()
	if affstrack.score.rightleg == 0 and affstrack.score.leftleg == 0 then
		return true
	else
		return false
	end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>ofocus</name>
					<packageName></packageName>
					<script>function ak.cure.focus(whom)
	ak.occie.aura.parsereduct("focus")
   local affs = {}
   ocured = ocured or {}
   ocured.focused = {}
   ak.randomaffs = ak.randomaffs or 0
   affstrack.score.rixil = 0
   if affstrack.score.impatience&gt;0 then 
      if ak.thoughtIhad then ak.thoughtIhad("impatience") else affstrack.score.impatience = 0 end
      ocured = ocured or {}
      ocured.focused = {}  
   end
   for i = 1, #affstrack.focused  do
      if affstrack.score[affstrack.focused[i]] &gt; 0 then
         table.insert(affs, affstrack.focused[i])
      end
   end
   if #affs == 1 and affstrack.score[affs[1]] &lt; 100 and ak.randomaffs == 0 then
      if ak.ProTrackingConfirmed then ak.ProTrackingConfirmed(affs[1]) end
      affstrack.score[affs[1]] = 0
			ak.AfflictionCured(affs[1])
			ak.ResetConfirmAff(affs[1])
	 elseif #affs == 1 then
      ocured.focused[affs[1]] = affstrack.score[affs[1]]
      affstrack.score[affs[1]] = 0
			ak.AfflictionCured(affs[1])
			ak.ResetConfirmAff(affs[1])
   elseif #affs &gt; 0 then
      for i = 1, #affs do
         ocured.focused[affs[i]] = affstrack.score[affs[i]]
         affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / #affs
         if affstrack.score[affs[i]] &lt; ak.errorallowance then
            affstrack.score[affs[i]] = 0
						ak.AfflictionCured(affs[i])
         end
      end
   elseif ak.randomaffs &gt; 0 then
      ak.randomaffs = ak.randomaffs - 1
   elseif ak.WhyYouDoThat then 
      ak.WhyYouDoThat("focused")
   end
   ak.scoreup(target)
  if #affs &gt; 0 then
    ak.echoForPossibleCures(table.concat(affs, " "))
  end
end



</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>otree</name>
					<packageName></packageName>
					<script>function ak.cure.tree()
	 ak.occie.aura.parsereduct("treed")
   affs = {}
   ocured = ocured or {}
   ocured.treed = {}
   ak.randomaffs = ak.randomaffs or 0
   affoverone = {}
   affovertwo = {}
   affoverthree = {}
   affoverfour = {}
   affoverfive = {}
   affoversix = {}
   applycure = applycure or {}
   if ak.treeableSalve() and applycure.lastapplied and applycure.lastapplied ~= "head" and applycure.lastapplied ~= "torso" and applycure.aknextsalve ~= "mending" then
      --AKcalculateSalve()
   end
   affs = {}
   ocured = ocured or {}
   ocured.treed = {}
   ak.randomaffs = ak.randomaffs or 0
   affoverone = {}
   affovertwo = {}
   affoverthree = {}
   affoverfour = {}
   affoverfive = {}
   affoversix = {}
   if affstrack.score.paralysis &gt; 0 then
      if ak.thoughtIhad then ak.thoughtIhad("paralysis") else affstrack.score.paralysis = 0 end
      ocured.bloodroot = {}
      ocured = ocured or {}
      ocured.treed = {}
   elseif affstrack.score.slickness &gt; 0 then
     ocured.bloodroot = {}
   end
   for i = 1, #affstrack.treed do
      if affstrack.score[affstrack.treed[i]] &gt; 0 and affstrack.score[affstrack.treed[i]] &lt; 200 and affstrack.treed[i] ~= "aflame" and affstrack.treed[i] ~= "frozen" then
         table.insert(affs, affstrack.treed[i]) 
         ocured.treed[affstrack.treed[i]] = affstrack.score[affstrack.treed[i]]     
         if affstrack.score[affstrack.treed[i]] &gt; 100 then-- and affstrack.score[affstrack.treed[i]] ~= 200 then
            table.insert(affoverone, affstrack.treed[i]) 
            affstrack.score[affstrack.treed[i]] = affstrack.score[affstrack.treed[i]] - 100
         end
      elseif affstrack.score.hypothermia == 100 and affstrack.treed[i] == "frozen" then

      elseif affstrack.score[affstrack.treed[i]] &gt; 0 and (affstrack.treed[i] == "aflame" or affstrack.treed[i] == "frozen") then
         table.insert(affs, affstrack.treed[i]) 
         ocured.treed[affstrack.treed[i]] = affstrack.score[affstrack.treed[i]]
         if affstrack.score[affstrack.treed[i]] &gt; 100 then
            table.insert(affoverone, affstrack.treed[i]) 
            affstrack.score[affstrack.treed[i]] = affstrack.score[affstrack.treed[i]] - 100
            if affstrack.score[affstrack.treed[i]] &gt; 100 then
               table.insert(affovertwo, affstrack.treed[i]) 
               affstrack.score[affstrack.treed[i]] = affstrack.score[affstrack.treed[i]] - 100
               if affstrack.score[affstrack.treed[i]] &gt; 100 then
                  table.insert(affoverthree, affstrack.treed[i]) 
                  affstrack.score[affstrack.treed[i]] = affstrack.score[affstrack.treed[i]] - 100
                  if affstrack.score[affstrack.treed[i]] &gt; 100 then
                     table.insert(affoverfour, affstrack.treed[i]) 
                     affstrack.score[affstrack.treed[i]] = affstrack.score[affstrack.treed[i]] - 100
                     if affstrack.score[affstrack.treed[i]] &gt; 100 then
                        table.insert(affoverfive, affstrack.treed[i]) 
                        affstrack.score[affstrack.treed[i]] = affstrack.score[affstrack.treed[i]] - 100
                        if affstrack.score[affstrack.treed[i]] &gt; 100 then
                           table.insert(affoversix, affstrack.treed[i]) 
                           affstrack.score[affstrack.treed[i]] = affstrack.score[affstrack.treed[i]] - 100
                        end
                     end
                  end
               end
            end
         end
      end   
   end
   if #affs == 1 and affstrack.score[affs[1]] &lt; 100 and ak.randomaffs == 0 then
      if ak.ProTrackingConfirmed then ak.ProTrackingConfirmed(affs[1]) end
      affstrack.score[affs[1]] = 0
			ak.AfflictionCured(affs[1])
			ak.ResetConfirmAff(affs[1])
   elseif #affs &gt; 1 and table.contains(affs,"impatience") and FocusCount() &gt;= 100 then
      for i = 1, #affs do
         if affs[i] ~= "impatience" then
            affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / (#affs -1)
            if affstrack.score[affs[i]] &lt; ak.errorallowance then
               affstrack.score[affs[i]] = 0
							 ak.AfflictionCured(affs[i])
            end     
            if table.contains(affoverone, affs[i]) then
               affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
               if table.contains(affovertwo, affs[i]) then
                  affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                  if table.contains(affoverthree, affs[i]) then
                     affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                     if table.contains(affoverfour, affs[i]) then
                        affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                        if table.contains(affoverfive, affs[i]) then
                           affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                           if table.contains(affoversix, affs[i]) then
                              affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                           end
                        end
                     end
                  end
               end 
            end           
         end
      end  
      if affstrack.score.aflame == 0 and affstrack.score.conflagrate == 100 then affstrack.score.conflagrate = 0;akadsty = 1 end
   elseif #affs &gt; 1 and table.contains(affs,"asthma") and SmokeCount() &gt;= 100 then
      for i = 1, #affs do
         if affs[i] ~= "asthma" then
            affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / (#affs -1)
            if affstrack.score[affs[i]] &lt; ak.errorallowance then
               affstrack.score[affs[i]] = 0
							 ak.AfflictionCured(affs[i])
            end     
            if table.contains(affoverone, affs[i]) then
               affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
               if table.contains(affovertwo, affs[i]) then
                  affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                  if table.contains(affoverthree, affs[i]) then
                     affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                     if table.contains(affoverfour, affs[i]) then
                        affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                        if table.contains(affoverfive, affs[i]) then
                           affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                           if table.contains(affoversix, affs[i]) then
                              affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                           end
                        end
                     end
                  end
               end 
            end           
         end
      end  
      if affstrack.score.aflame == 0 and affstrack.score.conflagrate == 100 then affstrack.score.conflagrate = 0;akadsty = 1 end
   elseif #affs &gt; 0 then
      for i = 1, #affs do
         --ocured.treed[affs[i]] = affstrack.score[affs[i]]                                       --move me
         affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / #affs 
         if affstrack.score[affs[i]] &lt; ak.errorallowance then
            affstrack.score[affs[i]] = 0
						ak.AfflictionCured(affs[i])
         end     
         if table.contains(affoverone, affs[i]) then
            affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
            if table.contains(affovertwo, affs[i]) then
               affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
               if table.contains(affoverthree, affs[i]) then
                  affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                  if table.contains(affoverfour, affs[i]) then
                     affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                     if table.contains(affoverfive, affs[i]) then
                        affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                        if table.contains(affoversix, affs[i]) then
                           affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                        end
                     end
                  end
               end
            end 
         end           
      end  
      if affstrack.score.aflame == 0 and affstrack.score.conflagrate == 100 then affstrack.score.conflagrate = 0;akadsty = 1 end
   elseif ak.randomaffs &gt; 0 then
      AKcalculateSalve()
      ak.randomaffs = ak.randomaffs - 1
   else
      if ak.WhyYouDoThat then ak.WhyYouDoThat("treed") end
   end
   ak.scoreup(target)
  if #affs &gt; 0 then
    ak.echoForPossibleCures(table.concat(affs, " "))
  end
end

local LimbsToCheck = {"rightleg","leftleg","rightarm","leftarm"}

function ak.treeableSalve()
	if affstrack.score.aflame &gt; 0 then
		return true
	end
	for i = 1, #LimbsToCheck do
		if affstrack.score[LimbsToCheck[i]] &gt; 0 and affstrack.score[LimbsToCheck[i]] &lt;= 100 then
			return true
		elseif affstrack.score[LimbsToCheck[i]] &gt; 100 and affstrack.score[LimbsToCheck[i]] &lt;= 200 and applycure.lastapplied ~= "torso" and applycure.lastapplied ~= "head" and applycure.aknextsalve ~= "mending" then
			return true
		end
	end

	return false

end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>osmoke</name>
					<packageName></packageName>
					<script>ak.smoke = ak.smoke or {}

function affssmoke()
	ak.smoke.mass = {}
	ak.occie.aura.parsereduct("smoke")
  local affs = {}
  ocured = ocured or {}
  ak.randomaffs = ak.randomaffs or 0
  ocured.smoked = {}
  if affstrack.score.asthma&gt;0 then 
    if ak.thoughtIhad then 
      ak.thoughtIhad("asthma") 
    else 
      affstrack.score.asthma = 0
    end
    ocured = ocured or {}
    ocured.smoked = {}
  end
  for i = 1, #affstrack.smoked do
    if affstrack.score[affstrack.smoked[i]] &gt; 0 then
      table.insert(affs, affstrack.smoked[i])
    end
  end
  local spiritcount = affstrack.score.unweavingspirit/100
  for i = 1, spiritcount do
    table.insert(affs, "unweavingspirit")
  end  
   if #affs == 1 then
	 		if affstrack.score[affs[1]] &lt; 100 and ak.randomaffs == 0 then
      	if ak.ProTrackingConfirmed then ak.ProTrackingConfirmed(affs[1]) end
      end
			ak.smoke.RetainMass(affs[1], affstrack.score[affs[1]])
      if affs[1] == "unweavingspirit" then
       affstrack.score[affs[1]] = affstrack.score[affs[1]] - 100
      else
			 affstrack.score[affs[1]] = 0	
			end
      ak.smoke.RestoreMass(affs[1])
			if affstrack.score[affs[1]] == 0 then
				 ak.AfflictionCured(affs[1])
				 ak.ResetConfirmAff(affs[1])
			end
   elseif #affs &gt; 0 then
      ak.echoForPossibleCures(table.concat(affs, " "))
      for i = 1, #affs do
         ocured.smoked[affs[i]] = affstrack.score[affs[i]]
				 ak.smoke.RetainMass(affs[1], affstrack.score[affs[1]])
         affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / #affs
         if affstrack.score[affs[i]] &lt; ak.errorallowance then
            affstrack.score[affs[i]] = 0
         end
				 ak.smoke.RestoreMass(affs[i])
				 if affstrack.score[affs[i]] == 0 then
				 	  ak.AfflictionCured(affs[i])
				 end
      end
   elseif ak.randomaffs &gt; 0 then
      ak.randomaffs = ak.randomaffs - 1
   else
       reboundingaccountak = true
       if reboundingaktime then killTimer(reboundingaktime) end
       reboundingaktime = tempTimer(11,[[reboundingaccountak = false]])
   end
   ak.scoreup(target)
end

function ak.smoke.RetainMass(aff, count)
  if ak.smoke.mass[aff] then return end
	ak.smoke.mass[aff] = roundDown(count-1,-2)
end

function ak.smoke.RestoreMass(aff)
	local returner = ak.smoke.mass[aff] or 0
	affstrack.score[aff] = affstrack.score[aff] + returner
  ak.smoke.mass[aff] = 0
end
</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>opassive</name>
					<packageName></packageName>
					<script>function ak.cure.passive(curing,addon)
	ak.occie.aura.parsereduct("passive")
   if affstrack.score.voyria == 100 then
      affstrack.score.voyria = 0 
      return
   end
   local curelist
   if addon then
    local dumper = string.split(curing, ", ")
    curelist = table.n_union(dumper,affstrack.cureall)    
   elseif curing then
    curelist = string.split(curing, ", ")
   else
    curelist = affstrack.cureall
   end
   affs = {}
   ak.randomaffs = ak.randomaffs or 0
   affoverone = {}
   affovertwo = {}
   affoverthree = {}
   affoverfour = {}
   affoverfive = {}
   affoversix = {}
   ocured = ocured or {}
   ocured.cureall = {}
 --  display(curelist) -- Micah debug stuffs
   for i = 1, #curelist do
      if affstrack.score[curelist[i]] &gt; 0  then
         table.insert(affs, curelist[i])
         ocured.cureall[curelist[i]] = affstrack.score[curelist[i]]
         if affstrack.score[curelist[i]] &gt; 100 and curelist[i] == "aflame" then
            table.insert(affoverone, affstrack.cureall[i]) 
            affstrack.score[curelist[i]] = affstrack.score[curelist[i]] - 100
            if affstrack.score[curelist[i]] &gt; 100 then
               table.insert(affovertwo, affstrack.cureall[i]) 
               affstrack.score[curelist[i]] = affstrack.score[curelist[i]] - 100
               if affstrack.score[curelist[i]] &gt; 100 then
                  table.insert(affoverthree, affstrack.cureall[i]) 
                  affstrack.score[curelist[i]] = affstrack.score[curelist[i]] - 100
                  if affstrack.score[curelist[i]] &gt; 100 then
                     table.insert(affoverfour, curelist[i]) 
                     affstrack.score[curelist[i]] = affstrack.score[curelist[i]] - 100
                     if affstrack.score[curelist[i]] &gt; 100 then
                        table.insert(affoverfive, curelist[i]) 
                        affstrack.score[curelist[i]] = affstrack.score[curelist[i]] - 100
                        if affstrack.score[curelist[i]] &gt; 100 then
                           table.insert(affoversix, curelist[i]) 
                           affstrack.score[curelist[i]] = affstrack.score[curelist[i]] - 100
                        end
                     end
                  end
               end
            end
         end
      end
   end
   if #affs == 1 and affstrack.score[affs[1]] &lt; 100 and ak.randomaffs == 0 then
      if ak.ProTrackingConfirmed then ak.ProTrackingConfirmed(affs[1]) end
      affstrack.score[affs[1]] = 0
			ak.AfflictionCured(affs[1])
			ak.ResetConfirmAff(affs[1])
   elseif #affs &gt; 1 and table.contains(affs,"impatience") and FocusCount() &gt;= 100 then
      ak.echoForPossibleCures(table.concat(affs, " "))
      for i = 1, #affs do
         ocured.cureall[affs[i]] = affstrack.score[affs[i]]
         if affs[i] ~= "impatience" then
            affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / (#affs-1)
            if affstrack.score[affs[i]] &lt; ak.errorallowance then
               affstrack.score[affs[i]] = 0
							 ak.AfflictionCured(affs[i])
            end
            if table.contains(affoverone, affs[i]) then
               affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
               if table.contains(affovertwo, affs[i]) then
                  affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                  if table.contains(affoverthree, affs[i]) then
                     affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                     if table.contains(affoverfour, affs[i]) then
                        affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                        if table.contains(affoverfive, affs[i]) then
                           affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                           if table.contains(affoversix, affs[i]) then
                              affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                           end
                        end
                     end
                  end
               end
            end 
         end        
      end
   elseif #affs &gt; 1 and table.contains(affs,"asthma") and SmokeCount() &gt;= 100 then
      ak.echoForPossibleCures(table.concat(affs, " "))
      for i = 1, #affs do
         ocured.cureall[affs[i]] = affstrack.score[affs[i]]
         if affs[i] ~= "asthma" then
            affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / (#affs-1)
            if affstrack.score[affs[i]] &lt; ak.errorallowance then
               affstrack.score[affs[i]] = 0
							 ak.AfflictionCured(affs[i])
            end
            if table.contains(affoverone, affs[i]) then
               affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
               if table.contains(affovertwo, affs[i]) then
                  affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                  if table.contains(affoverthree, affs[i]) then
                     affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                     if table.contains(affoverfour, affs[i]) then
                        affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                        if table.contains(affoverfive, affs[i]) then
                           affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                           if table.contains(affoversix, affs[i]) then
                              affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                           end
                        end
                     end
                  end
               end
            end 
         end        
      end
   elseif #affs &gt; 0 then
      ak.echoForPossibleCures(table.concat(affs, " "))
      for i = 1, #affs do
         ocured.cureall[affs[i]] = affstrack.score[affs[i]]
         affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / #affs
         if affstrack.score[affs[i]] &lt; ak.errorallowance then
            affstrack.score[affs[i]] = 0
						ak.AfflictionCured(affs[i])
         end
         if table.contains(affoverone, affs[i]) then
            affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
            if table.contains(affovertwo, affs[i]) then
               affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
               if table.contains(affoverthree, affs[i]) then
                  affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                  if table.contains(affoverfour, affs[i]) then
                     affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                     if table.contains(affoverfive, affs[i]) then
                        affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                        if table.contains(affoversix, affs[i]) then
                           affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                        end
                     end
                  end
               end
            end 
         end        
      end
      if affstrack.score.aflame == 0 and affstrack.score.conflagrate == 100 then affstrack.score.conflagrate = 0;akadsty = 1 end
   elseif ak.randomaffs &gt; 0 then
      ak.randomaffs = ak.randomaffs - 1
   else
      if ak.WhyYouDoThat then ak.WhyYouDoThat("cureall") end
   end
   ak.scoreup(target)
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>oapply</name>
					<packageName></packageName>
					<script>function ak.cure.apply(what) 
	 if ak.timers.salvebackup then killTimer(ak.timers.salvebackup) end
   if aksalvechange then killTimer(aksalvechange) end
   if akrestoration then killTimer(akrestoration) end
   applycure = applycure or {} 
   if applycure.lastapplied then
      AKcalculateSalve()
   end
	 if what ~= "none" then
	 		ak.enemyprio.applied(what)
      ak.cure.lastapplied = what
      ak.randomaffs = ak.randomaffs or 0
      applycure = {}
      applycure.aknextsalve = false
      applycure.lastapplied = what
      applycure.affoverone = {}
      applycure.affovertwo = {}
      applycure.affoverthree = {}
      applycure.affoverfour = {}
      applycure.affoverfive = {}
      applycure.affoversix = {}
      applycure.donotrecount = {}
      applycure.possiblemendings = {}
      applycure.mendingscore = 0
      applycure.possiblerestorations = {}
      applycure.restorationscore = 0
      applycure.totalscore = 0
      applycure.both = {}
      applycure.otableadd = "applied"..what
      for i = 1, #affstrack.applied[what] do
         --display( affstrack.applied[what][i])--probable cures  
         --display(affstrack.score[affstrack.applied[what][i]])     
         if affstrack.score[affstrack.applied[what][i]] &gt; 0 and affstrack.applied[what][i] ~= "frozen" and affstrack.applied[what][i] ~= "aflame" and (affstrack.score[affstrack.applied[what][i]] &gt; 100 or affstrack.applied[what][i] == "head" or affstrack.applied[what][i] == "torso" or affstrack.applied[what][i] == "hypothermia") then
            table.insert(applycure.possiblerestorations, affstrack.applied[what][i])
            table.insert(applycure.both, affstrack.applied[what][i])
            table.insert(applycure.donotrecount, affstrack.applied[what][i]) 
						if affstrack.score[affstrack.applied[what][i]] &lt; 200 and affstrack.applied[what][i] ~= "torso" and affstrack.applied[what][i] ~= "head" then
							table.insert(applycure.possiblemendings, affstrack.applied[what][i]) 
							applycure.mendingscore = affstrack.score[affstrack.applied[what][i]] + applycure.mendingscore 
						end
            applycure.restorationscore = affstrack.score[affstrack.applied[what][i]] + applycure.restorationscore
            applycure.totalscore  =  affstrack.score[affstrack.applied[what][i]] + applycure.totalscore
            AKBackupSalveNumber(affstrack.applied[what][i])
         elseif affstrack.score[affstrack.applied[what][i]] &gt; 100 and (affstrack.applied[what][i] == "frozen" or affstrack.applied[what][i] == "aflame") then
            table.insert(applycure.possiblemendings, affstrack.applied[what][i]) 
            table.insert(applycure.both, affstrack.applied[what][i])
            table.insert(applycure.donotrecount, affstrack.applied[what][i]) 
            applycure.mendingscore = affstrack.score[affstrack.applied[what][i]] + applycure.mendingscore  
            applycure.totalscore  =  affstrack.score[affstrack.applied[what][i]] + applycure.totalscore 
            AKBackupSalveNumber(affstrack.applied[what][i])
         elseif affstrack.score[affstrack.applied[what][i]] &gt; 0 then
            table.insert(applycure.possiblemendings, affstrack.applied[what][i]) 
            table.insert(applycure.both, affstrack.applied[what][i])
            table.insert(applycure.donotrecount, affstrack.applied[what][i]) 
            applycure.mendingscore = affstrack.score[affstrack.applied[what][i]] + applycure.mendingscore  
            applycure.totalscore  =  affstrack.score[affstrack.applied[what][i]] + applycure.totalscore     
         end
      end
      for k,v in pairs(affstrack.applied) do
         for i=1, #affstrack.applied[k] do
            if not table.contains(applycure.donotrecount, affstrack.applied[k][i]) and affstrack.score[affstrack.applied[k][i]] &gt; 0 then
							 applycure.totalscore  =  affstrack.score[affstrack.applied[k][i]] + applycure.totalscore 
            end
         end
      end
      applycure.totalscore = applycure.totalscore / 100
      applycure.mendingscore = applycure.mendingscore / 100
      applycure.restorationscore = applycure.restorationscore / 100
      if applycure.totalscore &lt;= 1 and applycure.totalscore &gt; 0 then --only one confirmed apply coming
         if #applycure.possiblemendings == 0 then
            applycure.aknextsalve = "restoration"
            if akrestoration then killTimer(akrestoration) end
            akrestoration = tempTimer(3.5,[[ak.cure.apply("none");affstrack.score.tempslickness = 0;ak.scoreup(target)]])
            affstrack.score.tempslickness = 100      
         elseif #applycure.possiblerestorations == 0 then
            applycure.aknextsalve = "mending"
            ak.cure.apply("none")
         else
            applycure.aknextsalve = "both"
            ak.cure.apply("none")
         end
      elseif applycure.totalscore &gt; 0 then                          --MORE CURES COMING!
				 if ak.timers.salvebackup then killTimer(ak.timers.salvebackup) end
         ak.timers.salvebackup = tempTimer(5,[[ak.cure.salveBackup()]])
         if applycure.restorationscore &gt; 0 and applycure.mendingscore &gt; 0 then
            applycure.aknextsalve = "mending"
						if affstrack.score.crushedthroat == 100 and what == "head" then
							ak.cure.apply("none")
							return
						end
            if aksalvechange then killTimer(aksalvechange) end
            aksalvechange = tempTimer(2.5,[[
               if affstrack.score.slickness == 0 then
                  applycure.aknextsalve = "restoration"
               end
            ]])
         elseif applycure.restorationscore &gt; 0 and applycure.mendingscore == 0 then	 
            applycure.aknextsalve = "restoration"
            affstrack.score.tempslickness = 100  
            if aksalvechange then killTimer(aksalvechange) end
         elseif applycure.restorationscore == 0 and applycure.mendingscore &gt; 0 then
            applycure.aknextsalve = "mending"
            ak.cure.apply("none")
         end
		  elseif applycure.lastapplied == "body" and applycure.totalscore == 0 and affstrack.score.impatience == 100 then
				 if ak.thoughtIhad then ak.thoughtIhad("impatience") else affstrack.score.impatience = 0 end
				 affstrack.score.anorexia = 0 
      elseif applycure.lastapplied ~= "skin" then
         if ak.NoPreApply then

         elseif (gmcp.Char.Status.class ~= "Magi" or gmcp.Char.Status.race:match("Dragon")) then         
            applycure.aknextsalve = "restoration"
            if akrestoration then killTimer(akrestoration) end
            akrestoration = tempTimer(3.5,[[ak.cure.apply("none");affstrack.score.tempslickness = 0;ak.scoreup(target)]])
            affstrack.score.tempslickness = 100  
         end
			elseif applycure.lastapplied == "skin" then
				applycure.lastapplied = nil	 
      end
   else
      applycure = {}
      applycure.aknextsalve = nil
      applycure.lastapplied = nil
      applycure.affoverone = {}
      applycure.affovertwo = {}
      applycure.affoverthree = {}
      applycure.affoverfour = {}
      applycure.affoverfive = {}
      applycure.affoversix = {}
      applycure.donotrecount = {}
      applycure.possiblemendings = {}
      applycure.mendingscore = 0
      applycure.possiblerestorations = {}
      applycure.restorationscore = 0
      applycure.totalscore = 0
      applycure.both = {}
   end
   ak.scoreup(target)
end

function ak.cure.salveBackup()
	if affstrack.score.slickness == 0 then
		ak.cure.apply("none")
		cecho("\n&lt;cyan&gt;They are not applying salves. Forcing previous restoration cure through.\n")
	else
		if ak.timers.salvebackup then killTimer(ak.timers.salvebackup) end
    ak.timers.salvebackup = tempTimer(1,[[ak.cure.salveBackup()]])
	end
end


function AKcalculateSalve()
	 if ak.debug then 
	 	display("applycure")
		display(applycure)
	 end
   local affs = {}
   ak.cure.lastapplied = what
   ak.randomaffs = ak.randomaffs or 0
   applycure = applycure or {}
   applycure.aknextsalve = applycure.aknextsalve or "restoration"
   applycure.lastapplied = applycure.lastapplied or "torso"
   applycure.affoverone = {}
   applycure.affovertwo = {}
   applycure.affoverthree = {}
   applycure.affoverfour = {}
   applycure.affoverfive = {}
   applycure.affoversix = {}
   applycure.donotrecount = {}
   applycure.possiblemendings = {}
   applycure.mendingscore = 0
   applycure.possiblerestorations = {}
   applycure.restorationscore = 0
   applycure.totalscore = 0
   applycure.both = {}
   applycure.otableadd = "applied"..applycure.lastapplied
   ocured = ocured or {}
   ocured[applycure.otableadd] = {} 
   local ToBeCleared = {}
      for i = 1, #affstrack.applied[applycure.lastapplied] do
         --display( affstrack.applied[applycure.lastapplied][i])--probable cures         
         if affstrack.score[affstrack.applied[applycure.lastapplied][i]] &gt; 0 and affstrack.applied[applycure.lastapplied][i] ~= "frozen" and affstrack.applied[applycure.lastapplied][i] ~= "aflame" and (affstrack.score[affstrack.applied[applycure.lastapplied][i]] &gt; 100 or affstrack.applied[applycure.lastapplied][i] == "head" or affstrack.applied[applycure.lastapplied][i] == "torso" or affstrack.applied[applycure.lastapplied][i] == "hypothermia") then
            table.insert(ToBeCleared, affstrack.applied[applycure.lastapplied][i])
            table.insert(applycure.possiblerestorations, affstrack.applied[applycure.lastapplied][i])
            table.insert(applycure.both, affstrack.applied[applycure.lastapplied][i])
            table.insert(applycure.donotrecount, affstrack.applied[applycure.lastapplied][i]) 
            applycure.restorationscore = affstrack.score[affstrack.applied[applycure.lastapplied][i]] + applycure.restorationscore
            applycure.totalscore  =  affstrack.score[affstrack.applied[applycure.lastapplied][i]] + applycure.totalscore
            AKBackupSalveNumber(affstrack.applied[applycure.lastapplied][i])
         elseif affstrack.score[affstrack.applied[applycure.lastapplied][i]] &gt; 100 and (affstrack.applied[applycure.lastapplied][i] == "frozen" or affstrack.applied[applycure.lastapplied][i] == "aflame") then                   
            table.insert(applycure.possiblemendings, affstrack.applied[applycure.lastapplied][i]) 
            table.insert(applycure.both, affstrack.applied[applycure.lastapplied][i])
            table.insert(applycure.donotrecount, affstrack.applied[applycure.lastapplied][i]) 
            applycure.mendingscore = affstrack.score[affstrack.applied[applycure.lastapplied][i]] + applycure.mendingscore  
            applycure.totalscore  =  affstrack.score[affstrack.applied[applycure.lastapplied][i]] + applycure.totalscore 
            AKBackupSalveNumber(affstrack.applied[applycure.lastapplied][i])
         elseif affstrack.score[affstrack.applied[applycure.lastapplied][i]] &gt; 0 then
            table.insert(applycure.possiblemendings, affstrack.applied[applycure.lastapplied][i]) 
            table.insert(applycure.both, affstrack.applied[applycure.lastapplied][i])
            table.insert(applycure.donotrecount, affstrack.applied[applycure.lastapplied][i]) 
            applycure.mendingscore = affstrack.score[affstrack.applied[applycure.lastapplied][i]] + applycure.mendingscore  
            applycure.totalscore  =  affstrack.score[affstrack.applied[applycure.lastapplied][i]] + applycure.totalscore     
         end
      end
      applycure.totalscore = applycure.totalscore / 100
      applycure.mendingscore = applycure.mendingscore / 100
      applycure.restorationscore = applycure.restorationscore / 100
   if applycure.aknextsalve ~= "both" then
      if applycure.aknextsalve == "mending" and applycure.mendingscore &gt; 0 then
         for i = 1, #applycure.possiblemendings do
            ocured[applycure.otableadd][applycure.possiblemendings[i]] = affstrack.score[applycure.possiblemendings[i]] 
            table.insert(affs, applycure.possiblemendings[i])
         end
      elseif applycure.aknextsalve == "restoration" and applycure.restorationscore &gt; 0 then
         for i = 1, #applycure.possiblerestorations do
            ocured[applycure.otableadd][applycure.possiblerestorations[i]] = affstrack.score[applycure.possiblerestorations[i]] 
            table.insert(affs, applycure.possiblerestorations[i])
         end
      else
         applycure.aknextsalve = "both"
         for i = 1, #applycure.possiblerestorations do
            ocured[applycure.otableadd][applycure.possiblerestorations[i]] = affstrack.score[applycure.possiblerestorations[i]] 
            table.insert(affs, applycure.possiblerestorations[i])
          end
         for i = 1, #applycure.possiblemendings do
            ocured[applycure.otableadd][applycure.possiblemendings[i]] = affstrack.score[applycure.possiblemendings[i]] 
            table.insert(affs, applycure.possiblemendings[i])
         end
      end
   elseif applycure.aknextsalve == "both" then
      for i = 1, #applycure.possiblerestorations do
         ocured[applycure.otableadd][applycure.possiblerestorations[i]] = affstrack.score[applycure.possiblerestorations[i]] 
         table.insert(affs, applycure.possiblerestorations[i])
      end
      for i = 1, #applycure.possiblemendings do
         ocured[applycure.otableadd][applycure.possiblemendings[i]] = affstrack.score[applycure.possiblemendings[i]] 
         table.insert(affs, applycure.possiblemendings[i])
      end
   end
   --display(affs)
   --display(affstrack.score[affs[1]])
   if #affs == 1 and affstrack.score[affs[1]] &lt; 100 then
      if #ToBeCleared &gt; 0 then
         for i = 1, #ToBeCleared do
            ak.limbs.CountAgain(ToBeCleared[i])
         end
      end
      ocured[applycure.otableadd] = {}
      if ak.ProTrackingConfirmed then ak.ProTrackingConfirmed(affs[1]) end
      ocured[applycure.otableadd] = {}
      ocured[applycure.otableadd][affs[1]] = 100
   end
   if #affs &gt; 0 then
      AKleftcuresfirst(affs)
      if #ToBeCleared &gt; 0 then
         for i = 1, #ToBeCleared do
            ak.limbs.CountAgain(ToBeCleared[i])
         end
      end
      ak.echoForPossibleCures(table.concat(affs, " "))
      for i = 1, #affs do
         reduceSalveAff(affs[i])
         affstrack.score[affs[i]] = affstrack.score[affs[i]] - affstrack.score[affs[i]] / #affs
         if affstrack.score[affs[i]] &lt; ak.errorallowance then
            affstrack.score[affs[i]] = 0
						ak.AfflictionCured(affs[i])
         end
         if table.contains(applycure.affoverone, affs[i]) then
            affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
            if table.contains(applycure.affovertwo, affs[i]) then
               affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
               if table.contains(applycure.affoverthree, affs[i]) then
                  affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                  if table.contains(applycure.affoverfour, affs[i]) then
                     affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                     if table.contains(applycure.affoverfive, affs[i]) then
                        affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                        if table.contains(applycure.affoversix, affs[i]) then
                           affstrack.score[affs[i]] = affstrack.score[affs[i]] + 100
                        end
                     end
                  end
               end
            end 
         end
      end
      if affstrack.score.aflame == 0 and affstrack.score.conflagrate == 100 then affstrack.score.conflagrate = 0;akadsty = 1 end
      if affstrack.score.hypothermia == 100 and affstrack.score.frozen == 0 then affstrack.score.hypothermia = 0 end
   elseif ak.randomaffs &gt; 0 then
      ak.randomaffs = ak.randomaffs - 1
   else

   end
   applycure.lastapplied = nil
   affstrack.score.tempslickness = 0 
   ak.scoreup(target)
end



function AKBackupSalveNumber(aff)
   local resetcure = tonumber(affstrack.score[aff])
   if affstrack.score[aff] &gt; 100 then
      table.insert(applycure.affoverone, aff) 
      affstrack.score[aff] = affstrack.score[aff] - 100
      if affstrack.score[aff] &gt; 100 then
        table.insert(applycure.affovertwo, aff) 
        affstrack.score[aff] = affstrack.score[aff] - 100
        if affstrack.score[aff] &gt; 100 then
           table.insert(applycure.affoverthree, aff) 
           affstrack.score[aff] = affstrack.score[aff] - 100
           if affstrack.score[aff] &gt; 100 then
              table.insert(applycure.affoverfour, aff) 
              affstrack.score[aff] = affstrack.score[aff] - 100
              if affstrack.score[aff] &gt; 100 then
                 table.insert(applycure.affoverfive, aff) 
                 affstrack.score[aff] = affstrack.score[aff] - 100
                 if affstrack.score[aff] &gt; 100 then
                    table.insert(applycure.affoversix, aff) 
                    affstrack.score[aff] = affstrack.score[aff] - 100
                 end
              end
           end
        end
      end
   end
   affstrack.score[aff] = tonumber(resetcure)
end
function reduceSalveAff(aff)
   if affstrack.score[aff] &gt; 100 then
      affstrack.score[aff] = affstrack.score[aff] - 100
      if affstrack.score[aff] &gt; 100 then
        affstrack.score[aff] = affstrack.score[aff] - 100
        if affstrack.score[aff] &gt; 100 then
           affstrack.score[aff] = affstrack.score[aff] - 100
           if affstrack.score[aff] &gt; 100 then
              affstrack.score[aff] = affstrack.score[aff] - 100
              if affstrack.score[aff] &gt; 100 then
                 affstrack.score[aff] = affstrack.score[aff] - 100
                 if affstrack.score[aff] &gt; 100 then
                    affstrack.score[aff] = affstrack.score[aff] - 100
                 end
              end
           end
        end
      end
   end 
end

function AKleftcuresfirst(affs)
   if table.contains(affs,"rightleg") and table.contains(affs,"leftleg") then 
      for i=1, #affs do
         if affs[i] == "rightleg" then
            table.remove(affs,i)
         end
      end   
   elseif table.contains(affs,"rightarm") and table.contains(affs,"leftarm") then
      for i=1, #affs do
         if affs[i] == "rightarm" then
            table.remove(affs,i)
         end
      end 
   end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Unknown Apply</name>
					<packageName></packageName>
					<script>--unknown application 

ak = ak or {}
ak.NoPreApply = false

ak.whyapply = function(location)



end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Occie Random Generator</name>
					<packageName></packageName>
					<script>--akocciegen
--ak.occie.aura.physical
--ak.occie.aura.mental

function ak.occie.aura.parse_unnamable(count)
	ak.occie.aura.mental = ak.occie.aura.mental + count
	local addaffs = {"stupidity","dementia","confusion"}
	if count == 3 then
		for i = 1, #addaffs do
			if affstrack.score[addaffs[i]] &gt; 0 then
				ak.ProTrackingConfirmed(addaffs[i])
        affstrack.score.stupidity = 100
        affstrack.score.dementia = 100
				affstrack.score.confusion = 100
				ak.scoreup(target)
				return
			end
		end
    affstrack.score.stupidity = 100
    affstrack.score.dementia = 100
		affstrack.score.confusion = 100
		ak.scoreup(target)
		return
	elseif count == 2 then
		if affstrack.score.stupidity == 100 then
			affstrack.score.confusion = 100
			affstrack.score.dementia = 100
		elseif affstrack.score.dementia == 100 then
			affstrack.score.stupidity = 100
			affstrack.score.confusion = 100
		elseif affstrack.score.confusion == 100 then
			affstrack.score.stupidity = 100
			affstrack.score.dementia = 100
		else

		end
		ak.scoreup(target)
		return
	elseif count == 1 then
		if affstrack.score.stupidity == 100 and affstrack.score.confusion == 100 then
			affstrack.score.dementia = 100
		elseif affstrack.score.stupidity == 100 and affstrack.score.dementia == 100 then
			affstrack.score.confusion = 100
		elseif affstrack.score.dementia == 100 and affstrack.score.confusion == 100 then
			affstrack.score.stupidity = 100
		else

		end
		ak.scoreup(target)
		return
 	end
end

function ak.occie.aura.parsereduct(what)
	if ak.backtracking then 
		ak.backtracking = false
		return 
	end
	if gmcp.Char.Status.race:match("Dragon") or gmcp.Char.Status.class ~= "Occultist" then return end
	ak.occie.aura.mentalcures = {
    "focus",
    "argentum flake",
    "lobelia seed",
    "stannum flake",
    "prickly ash bark",
    "plumbum flake",
    "goldenseal root",
		"bellwort flower",
    "rage",
  }
	ak.occie.aura.physicalcures = {
    "piece of kelp",
		"bloodroot leaf",
    "magnesium chip",
    "aurum flake",
  }
  if affstrack.score.addiction &gt; 0 then
    table.insert(ak.occie.aura.physicalcures,"ginseng root")
    table.insert(ak.occie.aura.physicalcures,"ferrum flake")
  else
    table.insert(ak.occie.aura.physicalcures,"ginseng root")
    table.insert(ak.occie.aura.physicalcures,"ferrum flake")
  end
	ak.occie.aura.ignore = {"smole","hawthorn berry","bayberry bark","calamine crystal",}
	if table.contains(ak.occie.aura.ignore, what) then return end
	if table.contains(ak.occie.aura.mentalcures,what) then
		ak.occie.aura.mental = ak.occie.aura.mental - 1
		if ak.occie.aura.mental &lt; 0 then ak.occie.aura.mental = 0 end
	elseif table.contains(ak.occie.aura.physicalcures,what) then
		ak.occie.aura.physical = ak.occie.aura.physical - 1
		if ak.occie.aura.physical &lt; 0 then ak.occie.aura.physical = 0 end
	elseif what == "treed" then
		ak.occie.aura.treed()
	elseif what == "passive" then
		ak.occie.aura.treed()	
	elseif not table.contains(ak.occie.aura.unknownparse,what) then
		table.insert(ak.occie.aura.unknownparse, what)
	end
end

function ak.occie.aura.treed()
		ak.occie.aura.physical = ak.occie.aura.physical - 1
		if ak.occie.aura.physical &lt; 0 then ak.occie.aura.physical = 0 end
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Affliction Cured</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ak.AfflictionCured(affliction, who)
  local psionBS = {"unweavingmind","unweavingbody","unweavingspirit"}
	ak.trackPrios(affliction)
	if affliction == "haemophilia" then
		if ak.bleeding &gt; 200 then
			ak.shaman.GetFashions = true
		end
		affstrack.score.bloodfire = 0
		ak.bleeding = 0
		ak.scoreup(who)
	end
  if table.contains(psionBS,affliction) then
    ak.psion.KillSecondaryTick(affliction)
  end
	if ak.AustCuredTrack then
		ak.AustCuredTrack(affliction)
	end
end

	</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Over One Saves</name>
					<packageName></packageName>
					<script>ak.excess = ak.excess or {}
function ak.DumpExcess(affliction)
	local stored = math.floor(affstrack.score[affliction]/100)
	stored = stored * 100
	if stored &gt; 0 then
		ak.excess[affliction] = stored
	end
	affstrack.score[affliction] = affstrack.score[affliction] - stored
end

function ak.RestoreExcess(affliction)
	if ak.excess[affliction] then
		affstrack.score[affliction] = affstrack.score[affliction] + ak.excess[affliction]
	end
end

</script>
					<eventHandlerList />
				</Script>
				<ScriptGroup isActive="yes" isFolder="yes">
					<name>Prorities</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
					<eventHandlerList />
					<Script isActive="yes" isFolder="no">
						<name>Priority by Healed</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
ak.enemyprio = ak.enemyprio or {}
ak.enemyprio.healed = ak.enemyprio.healed or {}
target = target or "Austere"

ak.tieredaffs = {"rightleg 100","rightleg 200","rightleg 300","leftleg 100","leftleg 200","leftleg 300","rightarm 100","rightarm 200","rightarm 300","leftarm 100","leftarm 200","leftarm 300",
                 "head 100","head 200","head 300","torso 100","torso 200","torso 300"}
local ignored = {"rightleg","leftleg","rightarm","leftarm","torso","head","tempslickness"}


function ak.trackPrios(affliction)
	if not affliction or not table.contains(affstrack.score, affliction) then 
		echo("&lt;cyan&gt;SOMETHING IS PUSHING AN UNKNOWN AFF CURED")
		return 
	end
	ak.enemyprio.healed[target] = ak.enemyprio.healed[target] or {}
	local maxinteger = 0
	local fuck = ak.enemyprio.healed[target]
	local aff = affliction
	if table.contains(ignored, aff) then return end
	if table.contains(fuck, aff) then
		table.remove(fuck,table.index_of(fuck, aff))
	end
	if #fuck &gt; 0 then
		for i = 1, #fuck do
			if affstrack.score[fuck[i]] and affstrack.score[fuck[i]] &gt; 0 then
				if affstrack.score[aff] and not table.contains(fuck, aff) then
					table.insert(fuck, i, aff)
					break
				end
			end
		end
	end
	if affstrack.score[aff] and not table.contains(fuck, aff) then
		table.insert(fuck, aff)
	end
	for k,v in pairs(affstrack.score) do
		if v &gt; 0 and not table.contains(fuck, k) and not table.contains(ignored, k) then
			table.insert(fuck, k)
		end
	end
	if ak.debug then
		cecho("enemyhealedprio")
		display(ak.enemyprio.healed[target])
	end
end



function ak.prioSalve(aff)
	local returner = 0
	if not applycure.affoverone then return returner end
	if table.contains(applycure.affoverone, aff) then
	   returner = returner + 100
	   if table.contains(applycure.affovertwo, aff) then
	      returner = returner + 100
	      if table.contains(applycure.affoverthree, aff) then
	         returner = returner + 100
	         if table.contains(applycure.affoverfour, aff) then
	            returner = returner + 100
	            if table.contains(applycure.affoverfive, aff) then
	               returner = returner + 100
	               if table.contains(applycure.affoversix, aff) then
	                  returner = returner + 100
	               end
	            end
	         end
	      end
	   end 
	end
	return returner
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Salve Priorities</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
ak.enemyprio.salve = ak.enemyprio.salve or {}
ak.enemyprio.salve[target] = ak.enemyprio.salve[target] or {}

ak.tieredaffs = {"rightleg 100","rightleg 200","rightleg 300","leftleg 100","leftleg 200","leftleg 300","rightarm 100","rightarm 200","rightarm 300","leftarm 100","leftarm 200","leftarm 300",
                 "head 100","head 200","head 300","torso 100","torso 200","torso 300"}
local ignored = {"rightleg","leftleg","rightarm","leftarm","torso","head"}
local salvelocations = {"head","legs","arms","torso"}

function ak.enemyprio.applied(salve)
	if not table.contains(salvelocations,salve) then 
		return 
	end
	ak.enemyprio.salve[target] = ak.enemyprio.salve[target] or {}
	local maxinteger = 0
	local compsplit = ""
	local fuck = ak.enemyprio.salve[target]
	local aff = {}
	local insertpoint = false
	if #fuck &gt; 0 then
		for i = 1, #affstrack.applied[salve] do
			if affstrack.score[affstrack.applied[salve][i]] &gt; 0 then
				aff[affstrack.applied[salve][i]] = affstrack.score[affstrack.applied[salve][i]]
			end
		end
	end
	for k,v in pairs(aff) do
		if table.contains(fuck, k.." "..v) then
			table.remove(fuck,table.index_of(fuck, k.." "..v))
		end
	end
	if #fuck &gt; 0 then
		for i = 1, #fuck do
			compsplit = string.split(fuck[i], " ")
			if affstrack.score[compsplit[1]] == (compsplit[2] + 0) then
				if insertpoint then
					for k,v in pairs(aff) do
						if not table.contains(fuck, k.." "..v) then
							table.insert(fuck, insertpoint, k.." "..v)
						end
					end				
				else
					for k,v in pairs(aff) do
						if not table.contains(fuck, k.." "..v) then
							table.insert(fuck, i, k.." "..v)
						end
					end
				end
				insertpoint = false
			else--if ak.enemyprio.notHigherAff(compsplit[1], k) --donothaft hisaffliction
				insertpoint = i
			end
		end
	end
	for k,v in pairs(aff) do
		if not table.contains(fuck, k.." "..v) then
			table.insert(fuck, k.." "..v)
		end
	end	
	for k,v in pairs(affstrack.applied) do --add to table
		if table.contains(salvelocations, k) then
			for i = 1, #v do
				if affstrack.score[v[i]] &gt; 0 and not table.contains(fuck, v[i].." "..affstrack.score[v[i]]) then
					table.insert(fuck, v[i].." "..affstrack.score[v[i]])
				else--already in the table but in the wrong spot / has a score currently
	
				end	
			end
		end
	end
	if ak.debug then
		cecho("enemysalveprio")
		display(fuck)
	end
end

function ak.enemyprio.notHigherAff(aff, aff2)
	local compslit = ""
	local compslit2 = ""
	compsplit = string.split(aff, " ")
	compsplit2 = string.split(aff2, " ")
	if compsplit[1] == compslit[2] then
		return false
	else
		return true
	end


end

</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Pyramides</name>
						<packageName></packageName>
						<script>function ak.handlePyramides(what)    
	if what == "bloodroot leaf" or what == "magnesium chip" then
	  if affstrack.score.paralysis &gt; 0 then
	  	if table.contains(affstrack.eaten[what], "pyramides") then
	  		table.remove(affstrack.eaten[what], table.index_of(affstrack.eaten[what],"pyramides")) 
	  	end
	  elseif not table.contains(affstrack.eaten[what], "pyramides") then
	    table.insert(affstrack.eaten[what], "pyramides")
	  end
	end
end</script>
						<eventHandlerList />
					</Script>
					<Script isActive="yes" isFolder="no">
						<name>Bleed Update</name>
						<packageName></packageName>
						<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ak.bleedupdate(pushed)--
	if gmcp.Char.Status.class == "Blademaster" then
		ak.bleeding = pushed -- More Bleeding
		ak.scoreup(target)
	else
		if ak.bleeding &lt; pushed and affstrack.score.haemophilia &gt; 0 then
			if ak.ProTrackingConfirmed and affstrack.score.haemophilia &lt; 100 then 
  	    ak.ProTrackingConfirmed("haemophilia") 
      else
        affstrack.score.haemophilia = 100
  	 	end
			ak.bleeding = pushed -- More Bleeding
		elseif ak.bleeding - pushed &gt; 100 then
			--ak.bleeding = pushed --Less Bleeding
			if ak.thoughtIhad and affstrack.score.haemophilia &gt; 0 and not ak.dontremovehaemo then
				ak.thoughtIhad("haemophilia")	
      else
        affstrack.score.haemophilia = 0
			end
		elseif ak.bleeding &gt; 100 and affstrack.score.haemophilia &gt; 0 and ak.ProTrackingConfirmed and affstrack.score.haemophilia &lt; 100 then 
			ak.ProTrackingConfirmed("haemophilia") 
    elseif ak.bleeding &gt; 100 and affstrack.score.haemophilia &gt; 0 and affstrack.score.haemophilia &lt; 100 then
      affstrack.score.haemophilia = 100
		end	
	end
	ak.dontremovehaemo = false
end

ak.PsionBleedTbl = {["hamstring"] = 55,["hamstringrapture"] = 71,["backhand"] = 15,["backhandrapture"] = 20,["sever"] = 45,["severrapture"] = 59,["puncture"] = 45,["puncturerapture"] = 58,["exsanguinate"] = 15,["exsanguinaterapture"] = 26,["deathblow"] = 75,["deathblowrapture"] = 97,["deathblowprone"] = 160,["deathblowpronerapture"] = 208,["overhand"] = 15,["overhandrapture"] = 20}

function ak.PsionBleed(attack)
  if ak.PsionBleedTbl[attack] then
    return ak.PsionBleedTbl[attack]
  else
    return 15
  end
end


if ak.bloodletbleed then return end
function ak.bloodletbleed()
	return 255
end

</script>
						<eventHandlerList />
					</Script>
				</ScriptGroup>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>BackTracking</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>Opponent Priority Table</name>
					<packageName></packageName>
					<script>--backtrack define
-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
function ak.AddedAffReset(affliction)
   if ocured then
      for k,v in pairs(ocured) do
         --display(ocured[k]) 
         if table.contains(ocured[k], affliction) then
            ocured[k] = nil
         end   
      end
   end
end

function ak.ResetConfirmAff(affliction)
   if ocured then
      for k,v in pairs(ocured) do
				 if type(v) == "table" and v[affliction] then
            v[affliction] = nil  
				 end 
      end
   end
end

ocured = ocured or {
   parseout = {},
   conversion = {
       ["aurum flake"]      = "kelp",
       ["piece of kelp"]    = "kelp",
       ["lobelia seed"]     = "lobelia",
       ["argentum flake"]   = "lobelia",
       ["prickly ash bark"] = "ash",
       ["stannum flake"]    = "ash",
       ["bellwort flower"]  = "bellwort",
       ["cuprum flake"]     = "bellwort",
       ["goldenseal root"]  = "goldenseal",
       ["plumbum flake"]    = "goldenseal",
       ["bloodroot leaf"]   = "bloodroot",
       ["magnesium chip"]   = "bloodroot",
       ["ginseng root"]     = "ginseng",
       ["ferrum flake"]     = "ginseng",
       ["rage"]             = "rage",
       ["hawthorn berry"]   = "hawthorn",
       ["calamine crystal"] = "hawthorn",
       ["bayberry bark"]    = "bayberry",
       ["arsenic pellet"]   = "bayberry"
   },
   curemethods = {
   "treed",
   "focused",
   "restored",
   "smoked",
   "cureall",
   "applied",
   } 
}

function ak.resetbacktrack()
ocured = {
   conversion = {
       ["aurum flake"]      = "kelp",
       ["piece of kelp"]    = "kelp",
       ["lobelia seed"]     = "lobelia",
       ["argentum flake"]   = "lobelia",
       ["prickly ash bark"] = "ash",
       ["stannum flake"]    = "ash",
       ["bellwort flower"]  = "bellwort",
       ["cuprum flake"]     = "bellwort",
       ["goldenseal root"]  = "goldenseal",
       ["plumbum flake"]    = "goldenseal",
       ["bloodroot leaf"]   = "bloodroot",
       ["magnesium chip"]   = "bloodroot",
       ["ginseng root"]     = "ginseng",
       ["ferrum flake"]     = "ginseng",
       ["rage"]             = "rage",
       ["hawthorn berry"]    = "hawthorn",
       ["calamine crystal"] = "hawthorn",
       ["bayberry bark"]    = "bayberry",
       ["arsenic pellet"]   = "bayberry"
   },
   curemethods = {
   "treed",
   "focused",
   "restored",
   "smoked",
   "cureall",
   "applied",
   } 
}
end

</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Pro Tracking Base</name>
					<packageName></packageName>
					<script>ak.ProTrackingConfirmed = ak.ProTrackingConfirmed or function(affliction) 
  affstrack.score[affliction] = 100
  ak.scoreup(target)
end</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<Script isActive="yes" isFolder="no">
				<name>Expert Diagnosing</name>
				<packageName></packageName>
				<script>
function ak.expertRun()
   possiblechecksAK = {}
   vcombo = vcombo or {}
   currentlydiagnosingak = nil
   for k,v in pairs(affstrack.score) do
      if (v &gt; 1 and AkcheckPrioList[k] and AkcheckPrioList[k] ~= 0) and (not table.contains(affstrack.venoms, k) or not table.contains(vcombo, affstrack.venoms[k])) then
         local mathed = v
         if mathed &lt; 50 then
            mathed =  50-((mathed - 50) * -1)
         else
            mathed = 50-(mathed - 50)
         end
         if (mathed + AkcheckPrioList[k]) &gt; 100 then
            possiblechecksAK[k] = (mathed + AkcheckPrioList[k])
         end
         mathed = nil
      end
   end
   ak.ExpertPickanAff()
end

function ak.ExpertPickanAff()
   for k,v in pairs(possiblechecksAK) do
      if currentlydiagnosingak == nil then
         currentlydiagnosingak = k
      end 
      if v &gt; possiblechecksAK[currentlydiagnosingak] then
         currentlydiagnosingak = k
      end
   end
   if currentlydiagnosingak then
      currentlydiagnosingak = "check "..target.." for "..currentlydiagnosingak 
   else
      currentlydiagnosingak = ""
   end
   if not ak.diagnosingoffbal and currentlydiagnosingak ~= "" then
      send(currentlydiagnosingak)
   end
end
AkcheckPrioList = {
                ["addiction"]      = 0,
                ["aeon"]           = 100,
                ["agoraphobia"]    = 0,
                ["anorexia"]       = 0,
                ["aflame"]         = 0,
                ["airfist"]        = 0,
                ["asthma"]         = 0,
                ["blind"]          = 0,
                ["blackout"]       = 0,
                ["bound"]          = 0,
                ["claustrophobia"] = 0,
                ["clumsiness"]     = 50,
                ["confusion"]      = 0,
                ["crippledarm"]    = 0,
                ["crippledleg"]    = 0,
                ["darkshade"]      = 50,
                ["deadening"]      = 0,
                ["deaf"]           = 0,
                ["dementia"]       = 0,
                ["disloyalty"]     = 0,
                ["disrupt"]        = 0,
                ["dizziness"]      = 0,
                ["epilepsy"]       = 0,
                ["frozen"]         = 0,
                ["generosity"]     = 0,
                ["haemophilia"]    = 100,
                ["hallucinations"] = 0,
                ["hamstring"]      = 0,
                ["healthleech"]    = 0,
                ["hellsight"]      = 0,
                ["hypersomnia"]    = 0,
                ["hypochondria"]   = 100,
                ["impaleslash"]    = 0,
                ["impatience"]     = 100,
                ["insomnia"]       = 0,
                ["kola"]           = 0,
                ["lethargy"]       = 0,
                ["loneliness"]     = 0,
                ["masochism"]      = 0,
                ["manaleech"]      = 0,
                ["nausea"]         = 0,
                ["pacifism"]       = 0,
                ["paralysis"]      = 100,
                ["paranoia"]       = 0,
                ["prone"]          = 0,
                ["recklessness"]   = 0,
                ["scytherus"]      = 100,
                ["selarnia"]       = 0,
                ["sensitivity"]    = 75,
                ["shyness"]        = 0,
                ["slickness"]      = 100,
                ["sleep"]          = 0,
                ["stupidity"]      = 0,
                ["transfixed"]     = 0,
                ["timeflux"]       = 0,
                ["weariness"]      = 75,
                ["whisperingmadness"] = 0,
                ["vertigo"]        = 0,
                ["vitiate"]        = 0,
                ["voidfist"]       = 0,
                ["voyria"]         = 0,
                ["rightleg"]       = 0,
                ["leftleg"]        = 0,
                ["rightarm"]       = 0,
                ["leftarm"]        = 0,
                ["head"]           = 0,
                ["torso"]          = 0,
}</script>
				<eventHandlerList />
			</Script>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Misc</name>
				<packageName></packageName>
				<script></script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>Version ID</name>
					<packageName></packageName>
					<script>ak.version = 8.2</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Git</name>
					<packageName></packageName>
					<script>ak.git = ak.git or {}

function ak.git.push(event,status,module)
  if module ~= "AK" then return end
  if status == "Initiate" then
    --ak.KillTriggers()
    --cecho("&lt;cyan&gt;\n\nDumping Trigger Groups\n\n")
    --saveProfile()
  elseif status == "Finalized" or status == "Invalid Path" then
    --ak.classenable()
  end
end
--Test Echo 2
registerAnonymousEventHandler("Git Pushing","ak.git.push")</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
		</ScriptGroup>
	</ScriptPackage>
	<KeyPackage>
		<KeyGroup isActive="yes" isFolder="yes">
			<name>AK Opponent Tracking</name>
			<packageName></packageName>
			<script></script>
			<command></command>
			<keyCode>-1</keyCode>
			<keyModifier>0</keyModifier>
			<KeyGroup isActive="no" isFolder="yes">
				<name>Shaman Keys</name>
				<packageName></packageName>
				<script></script>
				<command></command>
				<keyCode>-1</keyCode>
				<keyModifier>0</keyModifier>
				<Key isActive="yes" isFolder="no">
					<name>Iva 8</name>
					<packageName></packageName>
					<script>if table.contains(ak.MovementKeys, gmcp.Char.Name.name) then

else
	ak.stack = "Swift Damage"
	cecho("\n\n&lt;cyan&gt; CHANGING STACK TO:  Swifty Damage Pull!!\n\n")
	ak.scoreup(target)
end</script>
					<command></command>
					<keyCode>56</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>Avp 9</name>
					<packageName></packageName>
					<script>if table.contains(ak.MovementKeys, gmcp.Char.Name.name) then

else

end</script>
					<command></command>
					<keyCode>57</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>Tza 1</name>
					<packageName></packageName>
					<script>if table.contains(ak.MovementKeys, gmcp.Char.Name.name) then

else
	ak.stack = "Tzantza"
	cecho("\n\n&lt;cyan&gt; CHANGING STACK TO: TZANTZA!!\n\n")
	ak.scoreup(target)
end</script>
					<command></command>
					<keyCode>49</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>Lock 2</name>
					<packageName></packageName>
					<script>if table.contains(ak.MovementKeys, gmcp.Char.Name.name) then

else
	ak.stack = "Lock"
	cecho("\n\n&lt;cyan&gt; CHANGING STACK TO: Lock Workable!!\n\n")
	ak.scoreup(target)
end

</script>
					<command></command>
					<keyCode>50</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>Slow 3</name>
					<packageName></packageName>
					<script>if table.contains(ak.MovementKeys, gmcp.Char.Name.name) then

else
	ak.stack = "Slow"
	cecho("\n\n&lt;cyan&gt; CHANGING STACK TO: Slow Soft!!!\n\n")
	ak.scoreup(target)
end</script>
					<command></command>
					<keyCode>51</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>Ivp 4</name>
					<packageName></packageName>
					<script>if table.contains(ak.MovementKeys, gmcp.Char.Name.name) then

else
	ak.stack = "ivp"
	cecho("\n\n&lt;cyan&gt; CHANGING STACK TO:        Impatience via Paralyse!!\n\n")
	ak.scoreup(target) 
end</script>
					<command></command>
					<keyCode>52</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>Inflame 5</name>
					<packageName></packageName>
					<script>
if table.contains(ak.MovementKeys, gmcp.Char.Name.name) then

else
	ak.stack = "Ginseng"
	cecho("\n\n&lt;cyan&gt; CHANGING STACK TO:       GINSENG DAMAGE!!\n\n")
	ak.scoreup(target)
end</script>
					<command></command>
					<keyCode>53</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>Mangle 6</name>
					<packageName></packageName>
					<script>if table.contains(ak.MovementKeys, gmcp.Char.Name.name) then

else
	ak.stack = "Mangle33"
	cecho("\n\n&lt;cyan&gt; CHANGING STACK TO: Mangle 33!\n\n")
	ak.scoreup(target)
end
</script>
					<command></command>
					<keyCode>54</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>Behead 7</name>
					<packageName></packageName>
					<script>if table.contains(ak.MovementKeys, gmcp.Char.Name.name) then

else
	ak.stack = "Behead"
	cecho("\n\n&lt;cyan&gt; CHANGING STACK TO:        Behead!!\n\n")
	ak.scoreup(target)
end</script>
					<command></command>
					<keyCode>55</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
			</KeyGroup>
			<KeyGroup isActive="yes" isFolder="yes">
				<name>Psion Keys</name>
				<packageName></packageName>
				<script></script>
				<command></command>
				<keyCode>-1</keyCode>
				<keyModifier>0</keyModifier>
			</KeyGroup>
			<KeyGroup isActive="no" isFolder="yes">
				<name>Dragon Keys</name>
				<packageName></packageName>
				<script></script>
				<command></command>
				<keyCode>-1</keyCode>
				<keyModifier>0</keyModifier>
				<Key isActive="yes" isFolder="no">
					<name>Salve Lock 3</name>
					<packageName></packageName>
					<script>if table.contains(ak.MovementKeys, gmcp.Char.Name.name) then

else
	ak.stack = "salve"
	send("wipe dirk")
	send("wipe claws")
	cecho("\n\n&lt;cyan&gt; CHANGING STACK TO:        SALVE(GOGO)!!!!\n\n")
	ak.scoreup(target)
end

</script>
					<command></command>
					<keyCode>51</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>Dragon solo 6</name>
					<packageName></packageName>
					<script>if table.contains(ak.MovementKeys, gmcp.Char.Name.name) then

else
	ak.stack = "dragon"
	cecho("\n\n&lt;cyan&gt; CHANGING STACK TO:        Dragon(solo)!!\n\n")
	send("wipe dirk")
	send("wipe claws")
	ak.scoreup(target)
end</script>
					<command></command>
					<keyCode>54</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>DragnLock 9</name>
					<packageName></packageName>
					<script>if table.contains(ak.MovementKeys, gmcp.Char.Name.name) then

else
	ak.stack = "dlock"
	cecho("\n\n&lt;cyan&gt; CHANGING STACK TO:        Dragon LOCK!!\n\n")
	send("wipe dirk")
	send("wipe claws")
	ak.scoreup(target)
end</script>
					<command></command>
					<keyCode>57</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>Not Stacking 5</name>
					<packageName></packageName>
					<script>if table.contains(ak.MovementKeys, gmcp.Char.Name.name) then

else
	ak.stack = "NONE"
	cecho("\n\n&lt;cyan&gt; CHANGING STACK TO:        NOTHING(WILL GUST ON RENDS)!!!!\n\n")
	ak.scoreup(target)
end</script>
					<command></command>
					<keyCode>53</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
			</KeyGroup>
			<KeyGroup isActive="yes" isFolder="yes">
				<name>Movement Keys</name>
				<packageName></packageName>
				<script></script>
				<command></command>
				<keyCode>-1</keyCode>
				<keyModifier>0</keyModifier>
				<Key isActive="yes" isFolder="no">
					<name>1</name>
					<packageName></packageName>
					<script>if table.contains(ak.MovementKeys, gmcp.Char.Name.name) then
  local presend = ""
  local postsend = ""
  if wsys.def.phased then
    postsend = "|look at shrine|look at guard"
  end
	if TumbleEngaged then
    send(presend.."sw"..postsend)
  else
    send("queue addclear eqbal " .. presend .. "sw" .. postsend)
	end
end</script>
					<command></command>
					<keyCode>49</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>2</name>
					<packageName></packageName>
					<script>if table.contains(ak.MovementKeys, gmcp.Char.Name.name) then
  local presend = ""
  local postsend = ""
  if wsys.def.phased then
    postsend = "|look at shrine|look at guard"
  end
	if TumbleEngaged then
    send(presend.."s"..postsend)
  else
    send("queue addclear eqbal " .. presend .. "s" .. postsend)
	end
end</script>
					<command></command>
					<keyCode>50</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>3</name>
					<packageName></packageName>
					<script>if table.contains(ak.MovementKeys, gmcp.Char.Name.name) then
  local presend = ""
  local postsend = ""
  if wsys.def.phased then
    postsend = "|look at shrine|look at guard"
  end
	if TumbleEngaged then
    send(presend.."se"..postsend)
  else
    send("queue addclear eqbal " .. presend .. "se" .. postsend)
	end
end</script>
					<command></command>
					<keyCode>51</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>4</name>
					<packageName></packageName>
					<script>if table.contains(ak.MovementKeys, gmcp.Char.Name.name) then
  local presend = ""
  local postsend = ""
  if wsys.def.phased then
    postsend = "|look at shrine|look at guard"
  end
	if TumbleEngaged then
    send(presend.."w"..postsend)
  else
    send("queue addclear eqbal " .. presend .. "w" .. postsend)
	end
end</script>
					<command></command>
					<keyCode>52</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>5</name>
					<packageName></packageName>
					<script>if table.contains(ak.MovementKeys, gmcp.Char.Name.name) then
   send("ql")
elseif gmcp and gmcp.Char and gmcp.Char.Vitals and gmcp.Char.Vitals.charstats[3] == "Spec: Dual Cutting" then
	if ak.stack == "dwckelp" then
		ak.stack = "dwcstupid"
		ak.scoreup(target)
	else
		ak.stack = "dwckelp"
		ak.scoreup(target)
	end 
end</script>
					<command></command>
					<keyCode>53</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>6</name>
					<packageName></packageName>
					<script>if table.contains(ak.MovementKeys, gmcp.Char.Name.name) then
  local presend = ""
  local postsend = ""
  if wsys.def.phased then
    postsend = "|look at shrine|look at guard"
  end
	if TumbleEngaged then
    send(presend.."e"..postsend)
  else
    send("queue addclear eqbal " .. presend .. "e" .. postsend)
	end
end</script>
					<command></command>
					<keyCode>54</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>7</name>
					<packageName></packageName>
					<script>if table.contains(ak.MovementKeys, gmcp.Char.Name.name) then
  local presend = ""
  local postsend = ""
  if wsys.def.phased then
    postsend = "|look at shrine|look at guard"
  end
	if TumbleEngaged then
    send(presend.."nw"..postsend)
  else
    send("queue addclear eqbal " .. presend .. "nw" .. postsend)
	end
end</script>
					<command></command>
					<keyCode>55</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>8</name>
					<packageName></packageName>
					<script>if table.contains(ak.MovementKeys, gmcp.Char.Name.name) then
  local presend = ""
  local postsend = ""
  if wsys.def.phased then
    postsend = "|look at shrine|look at guard"
  end
	if TumbleEngaged then
    send(presend.."n"..postsend)
  else
    send("queue addclear eqbal " .. presend .. "n" .. postsend)
	end
end</script>
					<command></command>
					<keyCode>56</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>9</name>
					<packageName></packageName>
					<script>if table.contains(ak.MovementKeys, gmcp.Char.Name.name) then
  local presend = ""
  local postsend = ""
  if wsys.def.phased then
    postsend = "|look at shrine|look at guard"
  end
	if TumbleEngaged then
    send(presend.."ne"..postsend)
  else
    send("queue addclear eqbal " .. presend .. "ne" .. postsend)
  end
end</script>
					<command></command>
					<keyCode>57</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>. Shield</name>
					<packageName></packageName>
					<script>if table.contains(ak.MovementKeys, gmcp.Char.Name.name) then

else
	if ak.defs.shield then 
		ak.defs.shield = false
		cecho("\n\n&lt;cyan&gt; SHIELDING TURNED OFF!")
		ak.scoreup(target)
	else 
		ak.defs.shield = true
		cecho("\n\n&lt;cyan&gt; SHIELDING TURNED ON!")
		ak.scoreup(target)
	end
end</script>
					<command></command>
					<keyCode>46</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>+ Aff Reset</name>
					<packageName></packageName>
					<script>if table.contains(ak.MovementKeys, gmcp.Char.Name.name) then
  local presend = ""
  local postsend = ""
  if wsys.def.phased then
    postsend = "|look at shrine|look at guard"
  end
	if TumbleEngaged then
     send(presend.."down"..postsend)
  else
     send("queue addclear eqbal " .. presend .. "down" .. postsend)
	end
else
   ak.softreset()
end
</script>
					<command></command>
					<keyCode>43</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>- Illusion Send</name>
					<packageName></packageName>
					<script>if table.contains(ak.MovementKeys, gmcp.Char.Name.name) then
  local presend = ""
  local postsend = ""
  if wsys.def.phased then
    postsend = "|look at shrine|look at guard"
  end
		if TumbleEngaged then
    send(presend.."up"..postsend)
  else
    send("queue addclear eqbal " .. presend .. "up" .. postsend)
	end
else
	ak.scoreup(target)
	ak.illusions_send()
	if gmcp.Char.Status.race:match("Dragon") == "Dragon" then 
	   send("conjure " ..target.. " illusion " .. illusion)
	elseif gmcp.Char.Status.class == "Serpent" then 
	   send("conjure " ..target.. " illusion " .. illusion)
	elseif gmcp.Char.Status.class == "Magi" or gmcp.Char.Status.class == "Sylvan" then
	   send("cast " ..target.. " illusion " .. illusion)
	end
	illusionredo = 1
end</script>
					<command></command>
					<keyCode>45</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>* WardReset </name>
					<packageName></packageName>
					<script>if table.contains(ak.MovementKeys, gmcp.Char.Name.name) then
  local presend = ""
  local postsend = ""
  if wsys.def.phased then
    postsend = "|look at shrine|look at guard"
  end
	if TumbleEngaged then
    send(presend.."out"..postsend)
  else
    send("queue addclear eqbal " .. presend .. "out" .. postsend)
	end
else
	if ak.defs.curseward then 
		ak.defs.curseward = false
		cecho("\n\n&lt;cyan&gt; WARDING TURNED OFF!")
		ak.scoreup(target)
	else 
		ak.defs.curseward = true
		cecho("\n\n&lt;cyan&gt; WARDING TURNED ON!")
		ak.scoreup(target)
	end
end</script>
					<command></command>
					<keyCode>42</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>0 Rebounding</name>
					<packageName></packageName>
					<script>if table.contains(ak.MovementKeys, gmcp.Char.Name.name) then
	ak.softreset()
else
	if ak.defs.rebounding then 
		ak.defs.rebounding = false
		ak.defs.reRebounding = false
		cecho("\n\n&lt;cyan&gt; REBOUNDING TURNED OFF!")
		cecho("\n&lt;cyan&gt; DISABLED REDEF SINGLE!\n\n")
		ak.scoreup(target)
	else
		ak.defs.rebounding = true
		ak.defs.reRebounding = true
		cecho("\n\n&lt;cyan&gt; REBOUNDING TURNED ON!")
		cecho("\n&lt;cyan&gt; ENABLED REDEF SINGLE!\n\n")
		ak.scoreup(target)
	end
end</script>
					<command></command>
					<keyCode>48</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
				<Key isActive="yes" isFolder="no">
					<name>/ Stab</name>
					<packageName></packageName>
					<script>if table.contains(ak.MovementKeys, gmcp.Char.Name.name) then
  local presend = ""
  local postsend = ""
  if wsys.def.phased then
    postsend = "|look at shrine|look at guard"
  end
	if TumbleEngaged then
    send(presend.."in"..postsend)
  else
    send("queue addclear eqbal " .. presend .. "in" .. postsend)
  end
else
	send("jab "..target)
end</script>
					<command></command>
					<keyCode>47</keyCode>
					<keyModifier>536870912</keyModifier>
				</Key>
			</KeyGroup>
		</KeyGroup>
	</KeyPackage>
	<HelpPackage>
		<helpURL></helpURL>
	</HelpPackage>
</MudletPackage>
