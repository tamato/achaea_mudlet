#nop Create map as we get it.

#var mapping[callbacks] {};

#alias {mapping} {
   print Mapping Commands;
   info * mgt;
   info   - mapping go to, pass in room num;
   info * mapping.continue;
   info * mapping.explore;
   info * mapping.stop;
   info ;
}

#alias {mapping.onConnected}
{
   #map create;
   #map flag static;
   #map flag unicode;
   #map flag nofollow;
   #map read world.map;

   #nop seems to be either to use draw or vtmpa/split/offset;
   #draw boxed map 1 1 $uimap[height] $uimap[width];
}

#nop Map Go To, room num
#alias {mgt} {
   #map find {%1};
   #path run {0.6};
}

#alias {mapping.stop} {
   #list mapping[yetToVisit] clear;
}

#action {^Now now, don't be so hasty!$} {
}

#alias {mapping.prepExplore} {
   #variable mapping[startRoom] $gmcp[room][info][num];
   #list mapping[yetToVisit] clear;

   #local coords $gmcp[room][info][coords];
   #list coords explode ,;
   #local areaId $coords[1];
   #nop List contains distance to each room;
   #map list {roomid}{$areaId} {variable}{rooms};
   #foreach *rooms[] roomid {
      #list mapping[yetToVisit] ins 1 $roomid;
   };

   #nop don't bother with the room we are starting in.;
   #list mapping[yetToVisit] delete $mapping[startRoom];

   #unvar rooms;
   #unvar roomid;
}

#alias {mapping.explore} {
   mapping.prepExplore;
   #var mapping[callbacks][explore] {mapping.continue};

   #nop We got the list of rooms to tarverse, now lets go.;
   mapping.continue;
}

#alias {mapping.continue} {
   #if {&mapping[yetToVisit][] > 0} {

      #local dst $mapping[yetToVisit][+1];
      #list mapping[yetToVisit] delete +1;
      mgt $dst;
   };
}

#EVENT {END OF RUN} {
   #draw boxed map 1 1 $uimap[height] $uimap[width];
   print Reached destination;

   #nop TODO check if this 'if' can be removed.;
   #if {&{mapping[callbacks][]} > 0} {
      #foreach $mapping[callbacks][] cb {
         $cb;
      };
   };

   #if {&mapping[yetToVisit][] == 0} {
      print Finished AutoExplore;
      #list mapping[yetToVisit] clear;
      #unvariable mapping[startRoom];
   }
}

#alias {mapping.onRoomInfo}
{
   #map goto {$gmcp[room][info][num]};

   #draw boxed map 1 1 $uimap[height] $uimap[width];

   #math width {$uimap[width] - 4};

   #nop Put the area name at the top of the map;
   #format {prompt} {%.${width}s} {<038>$gmcp[room][info][area]};
   #line ignore #showme {$prompt} {1} {3};

   #nop Put the room name at the bottom of the map;
   #format {prompt} {%.${width}s} {<038>$gmcp[room][info][name]};
   #line ignore #showme {$prompt} {$uimap[height]} {3};

   #nop Display the exits;
   #variable {exits} {};
   #foreach {n;e;s;w;u;d;in;out;nw;ne;se;sw} {exit}
   {
       #if {&gmcp[room][info][exits][$exit] == 0} { #continue };
       #variable {exits} {$exits<128>$exit<270>,};
   };

   #screen clear square {$uimap[height]+1} 1 {$uimap[height]+1} {$uimap[width]-1};
   #format {prompt} {%u} {$exits<099>};
   #line ignore #showme {$prompt} {$uimap[height]+1} {2};
   #unvar exits;
}

#alias {mapping.show} {
   #local coords $gmcp[room][info][coords];
   #list coords explode ,;
   #local areaId $coords[1];

   #nop List contains distance to each room;
   #map list {roomid}{$areaId} {variable}{rooms};
   #foreach *rooms[] roomid {
      #map set {roomflags}{0} $roomid;
   };
   #draw boxed map 1 1 $uimap[height] $uimap[width];
}


#alias {directory} 
{
   #send {directory %1};
   #class roomnums load;
   #delay 5 {#class roomnums clear};
}

#class roomnums kill;
#class roomnums open;

#function roomnum {
   #map list {%1} {roomdesc}{49} {variable}{room};

#nop #foreach {*shops[49][%*]} shop {#if {{^Golden Dragon's Lair$} == {^$shop$}} {#show found}};

   #if {&{room[]} == 0}
      {#return { ??? }}
      {#return *room[+1]};

   #unvar room;
};

#sub {^%dgp %* {[A-Z]%*}%*$} {%1gp %2 %3%4 [@roomnum{%3%4}]}

#class roomnums close;
#class roomnums save;
#delay 5 {#class roomnums clear};

